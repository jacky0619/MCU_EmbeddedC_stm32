
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006f9c  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000488  08007150  08007150  00017150  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080075d8  080075d8  000209c8  2**0
                  CONTENTS
  4 .ARM          00000008  080075d8  080075d8  000175d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080075e0  080075e0  000209c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  080075e0  080075e0  000175e0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080075e8  080075e8  000175e8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000009c8  20000000  080075ec  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000150  200009c8  08007fb4  000209c8  2**2
                  ALLOC
 10 ._user_heap_stack 00000400  20000b18  08007fb4  00020b18  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  000209c8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003bcb  00000000  00000000  000209f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000b17  00000000  00000000  000245bd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000298  00000000  00000000  000250d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000230  00000000  00000000  00025370  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00003399  00000000  00000000  000255a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003109  00000000  00000000  00028939  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000b89d  00000000  00000000  0002ba42  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  000372df  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002138  00000000  00000000  00037334  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200009c8 	.word	0x200009c8
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08007134 	.word	0x08007134

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200009cc 	.word	0x200009cc
 80001ec:	08007134 	.word	0x08007134

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_uldivmod>:
 8000bc8:	b953      	cbnz	r3, 8000be0 <__aeabi_uldivmod+0x18>
 8000bca:	b94a      	cbnz	r2, 8000be0 <__aeabi_uldivmod+0x18>
 8000bcc:	2900      	cmp	r1, #0
 8000bce:	bf08      	it	eq
 8000bd0:	2800      	cmpeq	r0, #0
 8000bd2:	bf1c      	itt	ne
 8000bd4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bd8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bdc:	f000 b96c 	b.w	8000eb8 <__aeabi_idiv0>
 8000be0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000be4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000be8:	f000 f806 	bl	8000bf8 <__udivmoddi4>
 8000bec:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bf0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bf4:	b004      	add	sp, #16
 8000bf6:	4770      	bx	lr

08000bf8 <__udivmoddi4>:
 8000bf8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bfc:	9e08      	ldr	r6, [sp, #32]
 8000bfe:	460d      	mov	r5, r1
 8000c00:	4604      	mov	r4, r0
 8000c02:	468e      	mov	lr, r1
 8000c04:	2b00      	cmp	r3, #0
 8000c06:	f040 8082 	bne.w	8000d0e <__udivmoddi4+0x116>
 8000c0a:	428a      	cmp	r2, r1
 8000c0c:	4617      	mov	r7, r2
 8000c0e:	d946      	bls.n	8000c9e <__udivmoddi4+0xa6>
 8000c10:	fab2 f282 	clz	r2, r2
 8000c14:	b14a      	cbz	r2, 8000c2a <__udivmoddi4+0x32>
 8000c16:	f1c2 0120 	rsb	r1, r2, #32
 8000c1a:	fa05 f302 	lsl.w	r3, r5, r2
 8000c1e:	fa20 f101 	lsr.w	r1, r0, r1
 8000c22:	4097      	lsls	r7, r2
 8000c24:	ea41 0e03 	orr.w	lr, r1, r3
 8000c28:	4094      	lsls	r4, r2
 8000c2a:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000c2e:	0c23      	lsrs	r3, r4, #16
 8000c30:	fbbe fcf8 	udiv	ip, lr, r8
 8000c34:	b2b9      	uxth	r1, r7
 8000c36:	fb08 ee1c 	mls	lr, r8, ip, lr
 8000c3a:	ea43 430e 	orr.w	r3, r3, lr, lsl #16
 8000c3e:	fb0c f001 	mul.w	r0, ip, r1
 8000c42:	4298      	cmp	r0, r3
 8000c44:	d90a      	bls.n	8000c5c <__udivmoddi4+0x64>
 8000c46:	18fb      	adds	r3, r7, r3
 8000c48:	f10c 35ff 	add.w	r5, ip, #4294967295
 8000c4c:	f080 8116 	bcs.w	8000e7c <__udivmoddi4+0x284>
 8000c50:	4298      	cmp	r0, r3
 8000c52:	f240 8113 	bls.w	8000e7c <__udivmoddi4+0x284>
 8000c56:	f1ac 0c02 	sub.w	ip, ip, #2
 8000c5a:	443b      	add	r3, r7
 8000c5c:	1a1b      	subs	r3, r3, r0
 8000c5e:	b2a4      	uxth	r4, r4
 8000c60:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c64:	fb08 3310 	mls	r3, r8, r0, r3
 8000c68:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c6c:	fb00 f101 	mul.w	r1, r0, r1
 8000c70:	42a1      	cmp	r1, r4
 8000c72:	d909      	bls.n	8000c88 <__udivmoddi4+0x90>
 8000c74:	193c      	adds	r4, r7, r4
 8000c76:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c7a:	f080 8101 	bcs.w	8000e80 <__udivmoddi4+0x288>
 8000c7e:	42a1      	cmp	r1, r4
 8000c80:	f240 80fe 	bls.w	8000e80 <__udivmoddi4+0x288>
 8000c84:	3802      	subs	r0, #2
 8000c86:	443c      	add	r4, r7
 8000c88:	1a64      	subs	r4, r4, r1
 8000c8a:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000c8e:	2100      	movs	r1, #0
 8000c90:	b11e      	cbz	r6, 8000c9a <__udivmoddi4+0xa2>
 8000c92:	40d4      	lsrs	r4, r2
 8000c94:	2300      	movs	r3, #0
 8000c96:	e9c6 4300 	strd	r4, r3, [r6]
 8000c9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c9e:	b902      	cbnz	r2, 8000ca2 <__udivmoddi4+0xaa>
 8000ca0:	deff      	udf	#255	; 0xff
 8000ca2:	fab2 f282 	clz	r2, r2
 8000ca6:	2a00      	cmp	r2, #0
 8000ca8:	d14f      	bne.n	8000d4a <__udivmoddi4+0x152>
 8000caa:	1bcb      	subs	r3, r1, r7
 8000cac:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000cb0:	fa1f f887 	uxth.w	r8, r7
 8000cb4:	2101      	movs	r1, #1
 8000cb6:	fbb3 fcfe 	udiv	ip, r3, lr
 8000cba:	0c25      	lsrs	r5, r4, #16
 8000cbc:	fb0e 331c 	mls	r3, lr, ip, r3
 8000cc0:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000cc4:	fb08 f30c 	mul.w	r3, r8, ip
 8000cc8:	42ab      	cmp	r3, r5
 8000cca:	d907      	bls.n	8000cdc <__udivmoddi4+0xe4>
 8000ccc:	197d      	adds	r5, r7, r5
 8000cce:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000cd2:	d202      	bcs.n	8000cda <__udivmoddi4+0xe2>
 8000cd4:	42ab      	cmp	r3, r5
 8000cd6:	f200 80e7 	bhi.w	8000ea8 <__udivmoddi4+0x2b0>
 8000cda:	4684      	mov	ip, r0
 8000cdc:	1aed      	subs	r5, r5, r3
 8000cde:	b2a3      	uxth	r3, r4
 8000ce0:	fbb5 f0fe 	udiv	r0, r5, lr
 8000ce4:	fb0e 5510 	mls	r5, lr, r0, r5
 8000ce8:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
 8000cec:	fb08 f800 	mul.w	r8, r8, r0
 8000cf0:	45a0      	cmp	r8, r4
 8000cf2:	d907      	bls.n	8000d04 <__udivmoddi4+0x10c>
 8000cf4:	193c      	adds	r4, r7, r4
 8000cf6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cfa:	d202      	bcs.n	8000d02 <__udivmoddi4+0x10a>
 8000cfc:	45a0      	cmp	r8, r4
 8000cfe:	f200 80d7 	bhi.w	8000eb0 <__udivmoddi4+0x2b8>
 8000d02:	4618      	mov	r0, r3
 8000d04:	eba4 0408 	sub.w	r4, r4, r8
 8000d08:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000d0c:	e7c0      	b.n	8000c90 <__udivmoddi4+0x98>
 8000d0e:	428b      	cmp	r3, r1
 8000d10:	d908      	bls.n	8000d24 <__udivmoddi4+0x12c>
 8000d12:	2e00      	cmp	r6, #0
 8000d14:	f000 80af 	beq.w	8000e76 <__udivmoddi4+0x27e>
 8000d18:	2100      	movs	r1, #0
 8000d1a:	e9c6 0500 	strd	r0, r5, [r6]
 8000d1e:	4608      	mov	r0, r1
 8000d20:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d24:	fab3 f183 	clz	r1, r3
 8000d28:	2900      	cmp	r1, #0
 8000d2a:	d14b      	bne.n	8000dc4 <__udivmoddi4+0x1cc>
 8000d2c:	42ab      	cmp	r3, r5
 8000d2e:	d302      	bcc.n	8000d36 <__udivmoddi4+0x13e>
 8000d30:	4282      	cmp	r2, r0
 8000d32:	f200 80b7 	bhi.w	8000ea4 <__udivmoddi4+0x2ac>
 8000d36:	1a84      	subs	r4, r0, r2
 8000d38:	eb65 0303 	sbc.w	r3, r5, r3
 8000d3c:	2001      	movs	r0, #1
 8000d3e:	469e      	mov	lr, r3
 8000d40:	2e00      	cmp	r6, #0
 8000d42:	d0aa      	beq.n	8000c9a <__udivmoddi4+0xa2>
 8000d44:	e9c6 4e00 	strd	r4, lr, [r6]
 8000d48:	e7a7      	b.n	8000c9a <__udivmoddi4+0xa2>
 8000d4a:	f1c2 0c20 	rsb	ip, r2, #32
 8000d4e:	fa01 f302 	lsl.w	r3, r1, r2
 8000d52:	4097      	lsls	r7, r2
 8000d54:	fa20 f00c 	lsr.w	r0, r0, ip
 8000d58:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000d5c:	fa21 fc0c 	lsr.w	ip, r1, ip
 8000d60:	4318      	orrs	r0, r3
 8000d62:	fbbc f1fe 	udiv	r1, ip, lr
 8000d66:	0c05      	lsrs	r5, r0, #16
 8000d68:	fb0e cc11 	mls	ip, lr, r1, ip
 8000d6c:	fa1f f887 	uxth.w	r8, r7
 8000d70:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
 8000d74:	fb01 f308 	mul.w	r3, r1, r8
 8000d78:	42ab      	cmp	r3, r5
 8000d7a:	fa04 f402 	lsl.w	r4, r4, r2
 8000d7e:	d909      	bls.n	8000d94 <__udivmoddi4+0x19c>
 8000d80:	197d      	adds	r5, r7, r5
 8000d82:	f101 3cff 	add.w	ip, r1, #4294967295
 8000d86:	f080 808b 	bcs.w	8000ea0 <__udivmoddi4+0x2a8>
 8000d8a:	42ab      	cmp	r3, r5
 8000d8c:	f240 8088 	bls.w	8000ea0 <__udivmoddi4+0x2a8>
 8000d90:	3902      	subs	r1, #2
 8000d92:	443d      	add	r5, r7
 8000d94:	1aeb      	subs	r3, r5, r3
 8000d96:	b285      	uxth	r5, r0
 8000d98:	fbb3 f0fe 	udiv	r0, r3, lr
 8000d9c:	fb0e 3310 	mls	r3, lr, r0, r3
 8000da0:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
 8000da4:	fb00 f308 	mul.w	r3, r0, r8
 8000da8:	42ab      	cmp	r3, r5
 8000daa:	d907      	bls.n	8000dbc <__udivmoddi4+0x1c4>
 8000dac:	197d      	adds	r5, r7, r5
 8000dae:	f100 3cff 	add.w	ip, r0, #4294967295
 8000db2:	d271      	bcs.n	8000e98 <__udivmoddi4+0x2a0>
 8000db4:	42ab      	cmp	r3, r5
 8000db6:	d96f      	bls.n	8000e98 <__udivmoddi4+0x2a0>
 8000db8:	3802      	subs	r0, #2
 8000dba:	443d      	add	r5, r7
 8000dbc:	1aeb      	subs	r3, r5, r3
 8000dbe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000dc2:	e778      	b.n	8000cb6 <__udivmoddi4+0xbe>
 8000dc4:	f1c1 0c20 	rsb	ip, r1, #32
 8000dc8:	408b      	lsls	r3, r1
 8000dca:	fa22 f70c 	lsr.w	r7, r2, ip
 8000dce:	431f      	orrs	r7, r3
 8000dd0:	fa20 f40c 	lsr.w	r4, r0, ip
 8000dd4:	fa05 f301 	lsl.w	r3, r5, r1
 8000dd8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000ddc:	fa25 f50c 	lsr.w	r5, r5, ip
 8000de0:	431c      	orrs	r4, r3
 8000de2:	0c23      	lsrs	r3, r4, #16
 8000de4:	fbb5 f9fe 	udiv	r9, r5, lr
 8000de8:	fa1f f887 	uxth.w	r8, r7
 8000dec:	fb0e 5519 	mls	r5, lr, r9, r5
 8000df0:	ea43 4505 	orr.w	r5, r3, r5, lsl #16
 8000df4:	fb09 fa08 	mul.w	sl, r9, r8
 8000df8:	45aa      	cmp	sl, r5
 8000dfa:	fa02 f201 	lsl.w	r2, r2, r1
 8000dfe:	fa00 f301 	lsl.w	r3, r0, r1
 8000e02:	d908      	bls.n	8000e16 <__udivmoddi4+0x21e>
 8000e04:	197d      	adds	r5, r7, r5
 8000e06:	f109 30ff 	add.w	r0, r9, #4294967295
 8000e0a:	d247      	bcs.n	8000e9c <__udivmoddi4+0x2a4>
 8000e0c:	45aa      	cmp	sl, r5
 8000e0e:	d945      	bls.n	8000e9c <__udivmoddi4+0x2a4>
 8000e10:	f1a9 0902 	sub.w	r9, r9, #2
 8000e14:	443d      	add	r5, r7
 8000e16:	eba5 050a 	sub.w	r5, r5, sl
 8000e1a:	b2a4      	uxth	r4, r4
 8000e1c:	fbb5 f0fe 	udiv	r0, r5, lr
 8000e20:	fb0e 5510 	mls	r5, lr, r0, r5
 8000e24:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000e28:	fb00 f808 	mul.w	r8, r0, r8
 8000e2c:	45a0      	cmp	r8, r4
 8000e2e:	d907      	bls.n	8000e40 <__udivmoddi4+0x248>
 8000e30:	193c      	adds	r4, r7, r4
 8000e32:	f100 35ff 	add.w	r5, r0, #4294967295
 8000e36:	d22d      	bcs.n	8000e94 <__udivmoddi4+0x29c>
 8000e38:	45a0      	cmp	r8, r4
 8000e3a:	d92b      	bls.n	8000e94 <__udivmoddi4+0x29c>
 8000e3c:	3802      	subs	r0, #2
 8000e3e:	443c      	add	r4, r7
 8000e40:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e44:	eba4 0408 	sub.w	r4, r4, r8
 8000e48:	fba0 8902 	umull	r8, r9, r0, r2
 8000e4c:	454c      	cmp	r4, r9
 8000e4e:	46c6      	mov	lr, r8
 8000e50:	464d      	mov	r5, r9
 8000e52:	d319      	bcc.n	8000e88 <__udivmoddi4+0x290>
 8000e54:	d016      	beq.n	8000e84 <__udivmoddi4+0x28c>
 8000e56:	b15e      	cbz	r6, 8000e70 <__udivmoddi4+0x278>
 8000e58:	ebb3 020e 	subs.w	r2, r3, lr
 8000e5c:	eb64 0405 	sbc.w	r4, r4, r5
 8000e60:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000e64:	40ca      	lsrs	r2, r1
 8000e66:	ea4c 0202 	orr.w	r2, ip, r2
 8000e6a:	40cc      	lsrs	r4, r1
 8000e6c:	e9c6 2400 	strd	r2, r4, [r6]
 8000e70:	2100      	movs	r1, #0
 8000e72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e76:	4631      	mov	r1, r6
 8000e78:	4630      	mov	r0, r6
 8000e7a:	e70e      	b.n	8000c9a <__udivmoddi4+0xa2>
 8000e7c:	46ac      	mov	ip, r5
 8000e7e:	e6ed      	b.n	8000c5c <__udivmoddi4+0x64>
 8000e80:	4618      	mov	r0, r3
 8000e82:	e701      	b.n	8000c88 <__udivmoddi4+0x90>
 8000e84:	4543      	cmp	r3, r8
 8000e86:	d2e6      	bcs.n	8000e56 <__udivmoddi4+0x25e>
 8000e88:	ebb8 0e02 	subs.w	lr, r8, r2
 8000e8c:	eb69 0507 	sbc.w	r5, r9, r7
 8000e90:	3801      	subs	r0, #1
 8000e92:	e7e0      	b.n	8000e56 <__udivmoddi4+0x25e>
 8000e94:	4628      	mov	r0, r5
 8000e96:	e7d3      	b.n	8000e40 <__udivmoddi4+0x248>
 8000e98:	4660      	mov	r0, ip
 8000e9a:	e78f      	b.n	8000dbc <__udivmoddi4+0x1c4>
 8000e9c:	4681      	mov	r9, r0
 8000e9e:	e7ba      	b.n	8000e16 <__udivmoddi4+0x21e>
 8000ea0:	4661      	mov	r1, ip
 8000ea2:	e777      	b.n	8000d94 <__udivmoddi4+0x19c>
 8000ea4:	4608      	mov	r0, r1
 8000ea6:	e74b      	b.n	8000d40 <__udivmoddi4+0x148>
 8000ea8:	f1ac 0c02 	sub.w	ip, ip, #2
 8000eac:	443d      	add	r5, r7
 8000eae:	e715      	b.n	8000cdc <__udivmoddi4+0xe4>
 8000eb0:	3802      	subs	r0, #2
 8000eb2:	443c      	add	r4, r7
 8000eb4:	e726      	b.n	8000d04 <__udivmoddi4+0x10c>
 8000eb6:	bf00      	nop

08000eb8 <__aeabi_idiv0>:
 8000eb8:	4770      	bx	lr
 8000eba:	bf00      	nop

08000ebc <ds1307_init>:
I2C_Handle_t g_ds1307I2cHandle;

//returns 1 : CH = 1 ; init failed
//returns 0 : CH = 0 ; init success
uint8_t ds1307_init(void)
{
 8000ebc:	b580      	push	{r7, lr}
 8000ebe:	b082      	sub	sp, #8
 8000ec0:	af00      	add	r7, sp, #0

	//1. init the i2c pins
	ds1307_i2c_pin_config();
 8000ec2:	f000 f90f 	bl	80010e4 <ds1307_i2c_pin_config>

	//2. initialize the i2c peripheral
	ds1307_i2c_config();
 8000ec6:	f000 f949 	bl	800115c <ds1307_i2c_config>

	//3. Enable the I2C peripheral
	I2C_PeripheralControl(DS1307_I2C, ENABLE);
 8000eca:	2101      	movs	r1, #1
 8000ecc:	4809      	ldr	r0, [pc, #36]	; (8000ef4 <ds1307_init+0x38>)
 8000ece:	f000 fc7a 	bl	80017c6 <I2C_PeripheralControl>

	//4. Make clock halt = 0;
	ds1307_write(0x00,DS1307_ADDR_SEC);
 8000ed2:	2100      	movs	r1, #0
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	f000 f957 	bl	8001188 <ds1307_write>

	//5. Read back clock halt bit
	uint8_t clock_state = ds1307_read(DS1307_ADDR_SEC);
 8000eda:	2000      	movs	r0, #0
 8000edc:	f000 f970 	bl	80011c0 <ds1307_read>
 8000ee0:	4603      	mov	r3, r0
 8000ee2:	71fb      	strb	r3, [r7, #7]

	return ((clock_state >> 7 ) & 0x1);
 8000ee4:	79fb      	ldrb	r3, [r7, #7]
 8000ee6:	09db      	lsrs	r3, r3, #7
 8000ee8:	b2db      	uxtb	r3, r3

}
 8000eea:	4618      	mov	r0, r3
 8000eec:	3708      	adds	r7, #8
 8000eee:	46bd      	mov	sp, r7
 8000ef0:	bd80      	pop	{r7, pc}
 8000ef2:	bf00      	nop
 8000ef4:	40005400 	.word	0x40005400

08000ef8 <ds1307_set_current_time>:


void ds1307_set_current_time(RTC_time_t *rtc_time)
{
 8000ef8:	b580      	push	{r7, lr}
 8000efa:	b084      	sub	sp, #16
 8000efc:	af00      	add	r7, sp, #0
 8000efe:	6078      	str	r0, [r7, #4]
	uint8_t seconds, hrs;
	seconds = binary_to_bcd(rtc_time->seconds);
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	781b      	ldrb	r3, [r3, #0]
 8000f04:	4618      	mov	r0, r3
 8000f06:	f000 f979 	bl	80011fc <binary_to_bcd>
 8000f0a:	4603      	mov	r3, r0
 8000f0c:	73bb      	strb	r3, [r7, #14]
	seconds &= ~( 1 << 7);
 8000f0e:	7bbb      	ldrb	r3, [r7, #14]
 8000f10:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000f14:	73bb      	strb	r3, [r7, #14]
	ds1307_write(seconds, DS1307_ADDR_SEC);
 8000f16:	7bbb      	ldrb	r3, [r7, #14]
 8000f18:	2100      	movs	r1, #0
 8000f1a:	4618      	mov	r0, r3
 8000f1c:	f000 f934 	bl	8001188 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_time->minutes), DS1307_ADDR_MIN);
 8000f20:	687b      	ldr	r3, [r7, #4]
 8000f22:	785b      	ldrb	r3, [r3, #1]
 8000f24:	4618      	mov	r0, r3
 8000f26:	f000 f969 	bl	80011fc <binary_to_bcd>
 8000f2a:	4603      	mov	r3, r0
 8000f2c:	2101      	movs	r1, #1
 8000f2e:	4618      	mov	r0, r3
 8000f30:	f000 f92a 	bl	8001188 <ds1307_write>

	hrs = binary_to_bcd(rtc_time->hours);
 8000f34:	687b      	ldr	r3, [r7, #4]
 8000f36:	789b      	ldrb	r3, [r3, #2]
 8000f38:	4618      	mov	r0, r3
 8000f3a:	f000 f95f 	bl	80011fc <binary_to_bcd>
 8000f3e:	4603      	mov	r3, r0
 8000f40:	73fb      	strb	r3, [r7, #15]

	if(rtc_time->time_format == TIME_FORMAT_24HRS){
 8000f42:	687b      	ldr	r3, [r7, #4]
 8000f44:	78db      	ldrb	r3, [r3, #3]
 8000f46:	2b02      	cmp	r3, #2
 8000f48:	d104      	bne.n	8000f54 <ds1307_set_current_time+0x5c>
		hrs &= ~(1 << 6);
 8000f4a:	7bfb      	ldrb	r3, [r7, #15]
 8000f4c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000f50:	73fb      	strb	r3, [r7, #15]
 8000f52:	e011      	b.n	8000f78 <ds1307_set_current_time+0x80>
	}else{
		hrs |= (1 << 6);
 8000f54:	7bfb      	ldrb	r3, [r7, #15]
 8000f56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000f5a:	73fb      	strb	r3, [r7, #15]
		hrs = (rtc_time->time_format  == TIME_FORMAT_12HRS_PM) ? hrs | ( 1 << 5) :  hrs & ~( 1 << 5) ;
 8000f5c:	687b      	ldr	r3, [r7, #4]
 8000f5e:	78db      	ldrb	r3, [r3, #3]
 8000f60:	2b01      	cmp	r3, #1
 8000f62:	d104      	bne.n	8000f6e <ds1307_set_current_time+0x76>
 8000f64:	7bfb      	ldrb	r3, [r7, #15]
 8000f66:	f043 0320 	orr.w	r3, r3, #32
 8000f6a:	b2db      	uxtb	r3, r3
 8000f6c:	e003      	b.n	8000f76 <ds1307_set_current_time+0x7e>
 8000f6e:	7bfb      	ldrb	r3, [r7, #15]
 8000f70:	f023 0320 	bic.w	r3, r3, #32
 8000f74:	b2db      	uxtb	r3, r3
 8000f76:	73fb      	strb	r3, [r7, #15]
	}

	ds1307_write(hrs,DS1307_ADDR_HRS);
 8000f78:	7bfb      	ldrb	r3, [r7, #15]
 8000f7a:	2102      	movs	r1, #2
 8000f7c:	4618      	mov	r0, r3
 8000f7e:	f000 f903 	bl	8001188 <ds1307_write>

}
 8000f82:	bf00      	nop
 8000f84:	3710      	adds	r7, #16
 8000f86:	46bd      	mov	sp, r7
 8000f88:	bd80      	pop	{r7, pc}

08000f8a <ds1307_set_current_date>:

void ds1307_set_current_date(RTC_date_t *rtc_date)
{
 8000f8a:	b580      	push	{r7, lr}
 8000f8c:	b082      	sub	sp, #8
 8000f8e:	af00      	add	r7, sp, #0
 8000f90:	6078      	str	r0, [r7, #4]
	ds1307_write(binary_to_bcd(rtc_date->date),DS1307_ADDR_DATE);
 8000f92:	687b      	ldr	r3, [r7, #4]
 8000f94:	781b      	ldrb	r3, [r3, #0]
 8000f96:	4618      	mov	r0, r3
 8000f98:	f000 f930 	bl	80011fc <binary_to_bcd>
 8000f9c:	4603      	mov	r3, r0
 8000f9e:	2104      	movs	r1, #4
 8000fa0:	4618      	mov	r0, r3
 8000fa2:	f000 f8f1 	bl	8001188 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_date->month),DS1307_ADDR_MONTH);
 8000fa6:	687b      	ldr	r3, [r7, #4]
 8000fa8:	785b      	ldrb	r3, [r3, #1]
 8000faa:	4618      	mov	r0, r3
 8000fac:	f000 f926 	bl	80011fc <binary_to_bcd>
 8000fb0:	4603      	mov	r3, r0
 8000fb2:	2105      	movs	r1, #5
 8000fb4:	4618      	mov	r0, r3
 8000fb6:	f000 f8e7 	bl	8001188 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_date->year),DS1307_ADDR_YEAR);
 8000fba:	687b      	ldr	r3, [r7, #4]
 8000fbc:	789b      	ldrb	r3, [r3, #2]
 8000fbe:	4618      	mov	r0, r3
 8000fc0:	f000 f91c 	bl	80011fc <binary_to_bcd>
 8000fc4:	4603      	mov	r3, r0
 8000fc6:	2106      	movs	r1, #6
 8000fc8:	4618      	mov	r0, r3
 8000fca:	f000 f8dd 	bl	8001188 <ds1307_write>

	ds1307_write(binary_to_bcd(rtc_date->day),DS1307_ADDR_DAY);
 8000fce:	687b      	ldr	r3, [r7, #4]
 8000fd0:	78db      	ldrb	r3, [r3, #3]
 8000fd2:	4618      	mov	r0, r3
 8000fd4:	f000 f912 	bl	80011fc <binary_to_bcd>
 8000fd8:	4603      	mov	r3, r0
 8000fda:	2103      	movs	r1, #3
 8000fdc:	4618      	mov	r0, r3
 8000fde:	f000 f8d3 	bl	8001188 <ds1307_write>

}
 8000fe2:	bf00      	nop
 8000fe4:	3708      	adds	r7, #8
 8000fe6:	46bd      	mov	sp, r7
 8000fe8:	bd80      	pop	{r7, pc}

08000fea <ds1307_get_current_time>:

void ds1307_get_current_time(RTC_time_t *rtc_time)
{
 8000fea:	b580      	push	{r7, lr}
 8000fec:	b084      	sub	sp, #16
 8000fee:	af00      	add	r7, sp, #0
 8000ff0:	6078      	str	r0, [r7, #4]

	uint8_t seconds,hrs;

	seconds = ds1307_read(DS1307_ADDR_SEC);
 8000ff2:	2000      	movs	r0, #0
 8000ff4:	f000 f8e4 	bl	80011c0 <ds1307_read>
 8000ff8:	4603      	mov	r3, r0
 8000ffa:	73bb      	strb	r3, [r7, #14]

	seconds &= ~( 1 << 7);
 8000ffc:	7bbb      	ldrb	r3, [r7, #14]
 8000ffe:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8001002:	73bb      	strb	r3, [r7, #14]

	rtc_time->seconds = bcd_to_binary(seconds);
 8001004:	7bbb      	ldrb	r3, [r7, #14]
 8001006:	4618      	mov	r0, r3
 8001008:	f000 f924 	bl	8001254 <bcd_to_binary>
 800100c:	4603      	mov	r3, r0
 800100e:	461a      	mov	r2, r3
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	701a      	strb	r2, [r3, #0]
	rtc_time->minutes = bcd_to_binary(ds1307_read(DS1307_ADDR_MIN));
 8001014:	2001      	movs	r0, #1
 8001016:	f000 f8d3 	bl	80011c0 <ds1307_read>
 800101a:	4603      	mov	r3, r0
 800101c:	4618      	mov	r0, r3
 800101e:	f000 f919 	bl	8001254 <bcd_to_binary>
 8001022:	4603      	mov	r3, r0
 8001024:	461a      	mov	r2, r3
 8001026:	687b      	ldr	r3, [r7, #4]
 8001028:	705a      	strb	r2, [r3, #1]

	hrs = ds1307_read(DS1307_ADDR_HRS);
 800102a:	2002      	movs	r0, #2
 800102c:	f000 f8c8 	bl	80011c0 <ds1307_read>
 8001030:	4603      	mov	r3, r0
 8001032:	73fb      	strb	r3, [r7, #15]
	if(hrs & ( 1 << 6)){
 8001034:	7bfb      	ldrb	r3, [r7, #15]
 8001036:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800103a:	2b00      	cmp	r3, #0
 800103c:	d00f      	beq.n	800105e <ds1307_get_current_time+0x74>
		//12 hr format
		rtc_time->time_format =  !((hrs & ( 1 << 5)) == 0) ;
 800103e:	7bfb      	ldrb	r3, [r7, #15]
 8001040:	f003 0320 	and.w	r3, r3, #32
 8001044:	2b00      	cmp	r3, #0
 8001046:	bf14      	ite	ne
 8001048:	2301      	movne	r3, #1
 800104a:	2300      	moveq	r3, #0
 800104c:	b2db      	uxtb	r3, r3
 800104e:	461a      	mov	r2, r3
 8001050:	687b      	ldr	r3, [r7, #4]
 8001052:	70da      	strb	r2, [r3, #3]
		hrs &= ~(0x3 << 5);//Clear 6 and 5
 8001054:	7bfb      	ldrb	r3, [r7, #15]
 8001056:	f023 0360 	bic.w	r3, r3, #96	; 0x60
 800105a:	73fb      	strb	r3, [r7, #15]
 800105c:	e002      	b.n	8001064 <ds1307_get_current_time+0x7a>
	}else{
		//24 hr format
		rtc_time->time_format = TIME_FORMAT_24HRS;
 800105e:	687b      	ldr	r3, [r7, #4]
 8001060:	2202      	movs	r2, #2
 8001062:	70da      	strb	r2, [r3, #3]
	}

	rtc_time->hours = bcd_to_binary(hrs);
 8001064:	7bfb      	ldrb	r3, [r7, #15]
 8001066:	4618      	mov	r0, r3
 8001068:	f000 f8f4 	bl	8001254 <bcd_to_binary>
 800106c:	4603      	mov	r3, r0
 800106e:	461a      	mov	r2, r3
 8001070:	687b      	ldr	r3, [r7, #4]
 8001072:	709a      	strb	r2, [r3, #2]
}
 8001074:	bf00      	nop
 8001076:	3710      	adds	r7, #16
 8001078:	46bd      	mov	sp, r7
 800107a:	bd80      	pop	{r7, pc}

0800107c <ds1307_get_current_date>:

void ds1307_get_current_date(RTC_date_t *rtc_date)
{
 800107c:	b580      	push	{r7, lr}
 800107e:	b082      	sub	sp, #8
 8001080:	af00      	add	r7, sp, #0
 8001082:	6078      	str	r0, [r7, #4]
	rtc_date->day =  bcd_to_binary(ds1307_read(DS1307_ADDR_DAY));
 8001084:	2003      	movs	r0, #3
 8001086:	f000 f89b 	bl	80011c0 <ds1307_read>
 800108a:	4603      	mov	r3, r0
 800108c:	4618      	mov	r0, r3
 800108e:	f000 f8e1 	bl	8001254 <bcd_to_binary>
 8001092:	4603      	mov	r3, r0
 8001094:	461a      	mov	r2, r3
 8001096:	687b      	ldr	r3, [r7, #4]
 8001098:	70da      	strb	r2, [r3, #3]
	rtc_date->date = bcd_to_binary(ds1307_read(DS1307_ADDR_DATE));
 800109a:	2004      	movs	r0, #4
 800109c:	f000 f890 	bl	80011c0 <ds1307_read>
 80010a0:	4603      	mov	r3, r0
 80010a2:	4618      	mov	r0, r3
 80010a4:	f000 f8d6 	bl	8001254 <bcd_to_binary>
 80010a8:	4603      	mov	r3, r0
 80010aa:	461a      	mov	r2, r3
 80010ac:	687b      	ldr	r3, [r7, #4]
 80010ae:	701a      	strb	r2, [r3, #0]
	rtc_date->month = bcd_to_binary(ds1307_read(DS1307_ADDR_MONTH));
 80010b0:	2005      	movs	r0, #5
 80010b2:	f000 f885 	bl	80011c0 <ds1307_read>
 80010b6:	4603      	mov	r3, r0
 80010b8:	4618      	mov	r0, r3
 80010ba:	f000 f8cb 	bl	8001254 <bcd_to_binary>
 80010be:	4603      	mov	r3, r0
 80010c0:	461a      	mov	r2, r3
 80010c2:	687b      	ldr	r3, [r7, #4]
 80010c4:	705a      	strb	r2, [r3, #1]
	rtc_date->year = bcd_to_binary(ds1307_read(DS1307_ADDR_YEAR));
 80010c6:	2006      	movs	r0, #6
 80010c8:	f000 f87a 	bl	80011c0 <ds1307_read>
 80010cc:	4603      	mov	r3, r0
 80010ce:	4618      	mov	r0, r3
 80010d0:	f000 f8c0 	bl	8001254 <bcd_to_binary>
 80010d4:	4603      	mov	r3, r0
 80010d6:	461a      	mov	r2, r3
 80010d8:	687b      	ldr	r3, [r7, #4]
 80010da:	709a      	strb	r2, [r3, #2]

}
 80010dc:	bf00      	nop
 80010de:	3708      	adds	r7, #8
 80010e0:	46bd      	mov	sp, r7
 80010e2:	bd80      	pop	{r7, pc}

080010e4 <ds1307_i2c_pin_config>:

static void ds1307_i2c_pin_config(void)
{
 80010e4:	b580      	push	{r7, lr}
 80010e6:	b086      	sub	sp, #24
 80010e8:	af00      	add	r7, sp, #0
	GPIO_Handle_t i2c_sda,i2c_scl;

	memset(&i2c_sda,0,sizeof(i2c_sda));
 80010ea:	f107 030c 	add.w	r3, r7, #12
 80010ee:	220c      	movs	r2, #12
 80010f0:	2100      	movs	r1, #0
 80010f2:	4618      	mov	r0, r3
 80010f4:	f001 f822 	bl	800213c <memset>
	memset(&i2c_scl,0,sizeof(i2c_scl));
 80010f8:	463b      	mov	r3, r7
 80010fa:	220c      	movs	r2, #12
 80010fc:	2100      	movs	r1, #0
 80010fe:	4618      	mov	r0, r3
 8001100:	f001 f81c 	bl	800213c <memset>
	/*
	 * I2C1_SCL ==> PB6
	 * I2C1_SDA ==> PB7
	 */

	i2c_sda.pGPIOx = DS1307_I2C_GPIO_PORT;
 8001104:	4b14      	ldr	r3, [pc, #80]	; (8001158 <ds1307_i2c_pin_config+0x74>)
 8001106:	60fb      	str	r3, [r7, #12]
	i2c_sda.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
 8001108:	2304      	movs	r3, #4
 800110a:	757b      	strb	r3, [r7, #21]
	i2c_sda.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 800110c:	2302      	movs	r3, #2
 800110e:	747b      	strb	r3, [r7, #17]
	i2c_sda.GPIO_PinConfig.GPIO_PinNumber = DS1307_I2C_SDA_PIN;
 8001110:	2307      	movs	r3, #7
 8001112:	743b      	strb	r3, [r7, #16]
	i2c_sda.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 8001114:	2301      	movs	r3, #1
 8001116:	753b      	strb	r3, [r7, #20]
	i2c_sda.GPIO_PinConfig.GPIO_PinPuPdControl = DS1307_I2C_PUPD;
 8001118:	2301      	movs	r3, #1
 800111a:	74fb      	strb	r3, [r7, #19]
	i2c_sda.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800111c:	2302      	movs	r3, #2
 800111e:	74bb      	strb	r3, [r7, #18]

	GPIO_Init(&i2c_sda);
 8001120:	f107 030c 	add.w	r3, r7, #12
 8001124:	4618      	mov	r0, r3
 8001126:	f000 f933 	bl	8001390 <GPIO_Init>


	i2c_scl.pGPIOx = DS1307_I2C_GPIO_PORT;
 800112a:	4b0b      	ldr	r3, [pc, #44]	; (8001158 <ds1307_i2c_pin_config+0x74>)
 800112c:	603b      	str	r3, [r7, #0]
	i2c_scl.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
 800112e:	2304      	movs	r3, #4
 8001130:	727b      	strb	r3, [r7, #9]
	i2c_scl.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
 8001132:	2302      	movs	r3, #2
 8001134:	717b      	strb	r3, [r7, #5]
	i2c_scl.GPIO_PinConfig.GPIO_PinNumber = DS1307_I2C_SCL_PIN;
 8001136:	2306      	movs	r3, #6
 8001138:	713b      	strb	r3, [r7, #4]
	i2c_scl.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
 800113a:	2301      	movs	r3, #1
 800113c:	723b      	strb	r3, [r7, #8]
	i2c_scl.GPIO_PinConfig.GPIO_PinPuPdControl = DS1307_I2C_PUPD;
 800113e:	2301      	movs	r3, #1
 8001140:	71fb      	strb	r3, [r7, #7]
	i2c_scl.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8001142:	2302      	movs	r3, #2
 8001144:	71bb      	strb	r3, [r7, #6]

	GPIO_Init(&i2c_scl);
 8001146:	463b      	mov	r3, r7
 8001148:	4618      	mov	r0, r3
 800114a:	f000 f921 	bl	8001390 <GPIO_Init>

}
 800114e:	bf00      	nop
 8001150:	3718      	adds	r7, #24
 8001152:	46bd      	mov	sp, r7
 8001154:	bd80      	pop	{r7, pc}
 8001156:	bf00      	nop
 8001158:	40020400 	.word	0x40020400

0800115c <ds1307_i2c_config>:


static void ds1307_i2c_config(void)
{
 800115c:	b580      	push	{r7, lr}
 800115e:	af00      	add	r7, sp, #0
	g_ds1307I2cHandle.pI2Cx = DS1307_I2C;
 8001160:	4b06      	ldr	r3, [pc, #24]	; (800117c <ds1307_i2c_config+0x20>)
 8001162:	4a07      	ldr	r2, [pc, #28]	; (8001180 <ds1307_i2c_config+0x24>)
 8001164:	601a      	str	r2, [r3, #0]
	g_ds1307I2cHandle.I2C_Config.I2C_AckControl = I2C_ACK_ENABLE;
 8001166:	4b05      	ldr	r3, [pc, #20]	; (800117c <ds1307_i2c_config+0x20>)
 8001168:	2201      	movs	r2, #1
 800116a:	725a      	strb	r2, [r3, #9]
	g_ds1307I2cHandle.I2C_Config.I2C_SCLSpeed = DS1307_I2C_SPEED;
 800116c:	4b03      	ldr	r3, [pc, #12]	; (800117c <ds1307_i2c_config+0x20>)
 800116e:	4a05      	ldr	r2, [pc, #20]	; (8001184 <ds1307_i2c_config+0x28>)
 8001170:	605a      	str	r2, [r3, #4]
	I2C_Init(&g_ds1307I2cHandle);
 8001172:	4802      	ldr	r0, [pc, #8]	; (800117c <ds1307_i2c_config+0x20>)
 8001174:	f000 fb78 	bl	8001868 <I2C_Init>
}
 8001178:	bf00      	nop
 800117a:	bd80      	pop	{r7, pc}
 800117c:	20000ae0 	.word	0x20000ae0
 8001180:	40005400 	.word	0x40005400
 8001184:	000186a0 	.word	0x000186a0

08001188 <ds1307_write>:


static void ds1307_write(uint8_t value,uint8_t reg_addr)
{
 8001188:	b580      	push	{r7, lr}
 800118a:	b086      	sub	sp, #24
 800118c:	af02      	add	r7, sp, #8
 800118e:	4603      	mov	r3, r0
 8001190:	460a      	mov	r2, r1
 8001192:	71fb      	strb	r3, [r7, #7]
 8001194:	4613      	mov	r3, r2
 8001196:	71bb      	strb	r3, [r7, #6]
	uint8_t tx[2];
	tx[0] = reg_addr;
 8001198:	79bb      	ldrb	r3, [r7, #6]
 800119a:	733b      	strb	r3, [r7, #12]
	tx[1] = value;
 800119c:	79fb      	ldrb	r3, [r7, #7]
 800119e:	737b      	strb	r3, [r7, #13]
	I2C_MasterSendData(&g_ds1307I2cHandle, tx, 2, DS1307_I2C_ADDRESS, 0);
 80011a0:	f107 010c 	add.w	r1, r7, #12
 80011a4:	2300      	movs	r3, #0
 80011a6:	9300      	str	r3, [sp, #0]
 80011a8:	2368      	movs	r3, #104	; 0x68
 80011aa:	2202      	movs	r2, #2
 80011ac:	4803      	ldr	r0, [pc, #12]	; (80011bc <ds1307_write+0x34>)
 80011ae:	f000 fc20 	bl	80019f2 <I2C_MasterSendData>
}
 80011b2:	bf00      	nop
 80011b4:	3710      	adds	r7, #16
 80011b6:	46bd      	mov	sp, r7
 80011b8:	bd80      	pop	{r7, pc}
 80011ba:	bf00      	nop
 80011bc:	20000ae0 	.word	0x20000ae0

080011c0 <ds1307_read>:



static uint8_t ds1307_read(uint8_t reg_addr)
{
 80011c0:	b580      	push	{r7, lr}
 80011c2:	b086      	sub	sp, #24
 80011c4:	af02      	add	r7, sp, #8
 80011c6:	4603      	mov	r3, r0
 80011c8:	71fb      	strb	r3, [r7, #7]
	uint8_t data;
    I2C_MasterSendData(&g_ds1307I2cHandle, &reg_addr, 1, DS1307_I2C_ADDRESS, 0);
 80011ca:	1df9      	adds	r1, r7, #7
 80011cc:	2300      	movs	r3, #0
 80011ce:	9300      	str	r3, [sp, #0]
 80011d0:	2368      	movs	r3, #104	; 0x68
 80011d2:	2201      	movs	r2, #1
 80011d4:	4808      	ldr	r0, [pc, #32]	; (80011f8 <ds1307_read+0x38>)
 80011d6:	f000 fc0c 	bl	80019f2 <I2C_MasterSendData>
    I2C_MasterReceiveData(&g_ds1307I2cHandle, &data, 1, DS1307_I2C_ADDRESS, 0);
 80011da:	f107 010f 	add.w	r1, r7, #15
 80011de:	2300      	movs	r3, #0
 80011e0:	9300      	str	r3, [sp, #0]
 80011e2:	2368      	movs	r3, #104	; 0x68
 80011e4:	2201      	movs	r2, #1
 80011e6:	4804      	ldr	r0, [pc, #16]	; (80011f8 <ds1307_read+0x38>)
 80011e8:	f000 fc66 	bl	8001ab8 <I2C_MasterReceiveData>

    return data;
 80011ec:	7bfb      	ldrb	r3, [r7, #15]
}
 80011ee:	4618      	mov	r0, r3
 80011f0:	3710      	adds	r7, #16
 80011f2:	46bd      	mov	sp, r7
 80011f4:	bd80      	pop	{r7, pc}
 80011f6:	bf00      	nop
 80011f8:	20000ae0 	.word	0x20000ae0

080011fc <binary_to_bcd>:



static uint8_t binary_to_bcd(uint8_t value)
{
 80011fc:	b480      	push	{r7}
 80011fe:	b085      	sub	sp, #20
 8001200:	af00      	add	r7, sp, #0
 8001202:	4603      	mov	r3, r0
 8001204:	71fb      	strb	r3, [r7, #7]
	uint8_t m , n;
	uint8_t bcd;

	bcd = value;
 8001206:	79fb      	ldrb	r3, [r7, #7]
 8001208:	73fb      	strb	r3, [r7, #15]
	if(value >= 10)
 800120a:	79fb      	ldrb	r3, [r7, #7]
 800120c:	2b09      	cmp	r3, #9
 800120e:	d918      	bls.n	8001242 <binary_to_bcd+0x46>
	{
		m = value /10;
 8001210:	79fb      	ldrb	r3, [r7, #7]
 8001212:	4a0f      	ldr	r2, [pc, #60]	; (8001250 <binary_to_bcd+0x54>)
 8001214:	fba2 2303 	umull	r2, r3, r2, r3
 8001218:	08db      	lsrs	r3, r3, #3
 800121a:	73bb      	strb	r3, [r7, #14]
		n = value % 10;
 800121c:	79fa      	ldrb	r2, [r7, #7]
 800121e:	4b0c      	ldr	r3, [pc, #48]	; (8001250 <binary_to_bcd+0x54>)
 8001220:	fba3 1302 	umull	r1, r3, r3, r2
 8001224:	08d9      	lsrs	r1, r3, #3
 8001226:	460b      	mov	r3, r1
 8001228:	009b      	lsls	r3, r3, #2
 800122a:	440b      	add	r3, r1
 800122c:	005b      	lsls	r3, r3, #1
 800122e:	1ad3      	subs	r3, r2, r3
 8001230:	737b      	strb	r3, [r7, #13]
		bcd = (m << 4) | n ;
 8001232:	7bbb      	ldrb	r3, [r7, #14]
 8001234:	011b      	lsls	r3, r3, #4
 8001236:	b25a      	sxtb	r2, r3
 8001238:	f997 300d 	ldrsb.w	r3, [r7, #13]
 800123c:	4313      	orrs	r3, r2
 800123e:	b25b      	sxtb	r3, r3
 8001240:	73fb      	strb	r3, [r7, #15]
	}

	return bcd;
 8001242:	7bfb      	ldrb	r3, [r7, #15]
}
 8001244:	4618      	mov	r0, r3
 8001246:	3714      	adds	r7, #20
 8001248:	46bd      	mov	sp, r7
 800124a:	bc80      	pop	{r7}
 800124c:	4770      	bx	lr
 800124e:	bf00      	nop
 8001250:	cccccccd 	.word	0xcccccccd

08001254 <bcd_to_binary>:

static uint8_t bcd_to_binary(uint8_t value)
{
 8001254:	b480      	push	{r7}
 8001256:	b085      	sub	sp, #20
 8001258:	af00      	add	r7, sp, #0
 800125a:	4603      	mov	r3, r0
 800125c:	71fb      	strb	r3, [r7, #7]
	uint8_t m , n;
	m = (uint8_t) ((value >> 4 ) * 10);
 800125e:	79fb      	ldrb	r3, [r7, #7]
 8001260:	091b      	lsrs	r3, r3, #4
 8001262:	b2db      	uxtb	r3, r3
 8001264:	461a      	mov	r2, r3
 8001266:	0092      	lsls	r2, r2, #2
 8001268:	4413      	add	r3, r2
 800126a:	005b      	lsls	r3, r3, #1
 800126c:	73fb      	strb	r3, [r7, #15]
	n =  value & (uint8_t)0x0F;
 800126e:	79fb      	ldrb	r3, [r7, #7]
 8001270:	f003 030f 	and.w	r3, r3, #15
 8001274:	73bb      	strb	r3, [r7, #14]
	return (m+n);
 8001276:	7bfa      	ldrb	r2, [r7, #15]
 8001278:	7bbb      	ldrb	r3, [r7, #14]
 800127a:	4413      	add	r3, r2
 800127c:	b2db      	uxtb	r3, r3
}
 800127e:	4618      	mov	r0, r3
 8001280:	3714      	adds	r7, #20
 8001282:	46bd      	mov	sp, r7
 8001284:	bc80      	pop	{r7}
 8001286:	4770      	bx	lr

08001288 <GPIO_PeriClockControl>:
 *
 * @Note              -  none

 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8001288:	b480      	push	{r7}
 800128a:	b083      	sub	sp, #12
 800128c:	af00      	add	r7, sp, #0
 800128e:	6078      	str	r0, [r7, #4]
 8001290:	460b      	mov	r3, r1
 8001292:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8001294:	78fb      	ldrb	r3, [r7, #3]
 8001296:	2b01      	cmp	r3, #1
 8001298:	d161      	bne.n	800135e <GPIO_PeriClockControl+0xd6>
	{
		if(pGPIOx == GPIOA)
 800129a:	687b      	ldr	r3, [r7, #4]
 800129c:	4a32      	ldr	r2, [pc, #200]	; (8001368 <GPIO_PeriClockControl+0xe0>)
 800129e:	4293      	cmp	r3, r2
 80012a0:	d106      	bne.n	80012b0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80012a2:	4b32      	ldr	r3, [pc, #200]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012a6:	4a31      	ldr	r2, [pc, #196]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012a8:	f043 0301 	orr.w	r3, r3, #1
 80012ac:	6313      	str	r3, [r2, #48]	; 0x30
	else
	{
		//TODO
	}

}
 80012ae:	e056      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOB)
 80012b0:	687b      	ldr	r3, [r7, #4]
 80012b2:	4a2f      	ldr	r2, [pc, #188]	; (8001370 <GPIO_PeriClockControl+0xe8>)
 80012b4:	4293      	cmp	r3, r2
 80012b6:	d106      	bne.n	80012c6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80012b8:	4b2c      	ldr	r3, [pc, #176]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012bc:	4a2b      	ldr	r2, [pc, #172]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012be:	f043 0302 	orr.w	r3, r3, #2
 80012c2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012c4:	e04b      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOC)
 80012c6:	687b      	ldr	r3, [r7, #4]
 80012c8:	4a2a      	ldr	r2, [pc, #168]	; (8001374 <GPIO_PeriClockControl+0xec>)
 80012ca:	4293      	cmp	r3, r2
 80012cc:	d106      	bne.n	80012dc <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80012ce:	4b27      	ldr	r3, [pc, #156]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012d2:	4a26      	ldr	r2, [pc, #152]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012d4:	f043 0304 	orr.w	r3, r3, #4
 80012d8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012da:	e040      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOD)
 80012dc:	687b      	ldr	r3, [r7, #4]
 80012de:	4a26      	ldr	r2, [pc, #152]	; (8001378 <GPIO_PeriClockControl+0xf0>)
 80012e0:	4293      	cmp	r3, r2
 80012e2:	d106      	bne.n	80012f2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80012e4:	4b21      	ldr	r3, [pc, #132]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012e8:	4a20      	ldr	r2, [pc, #128]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012ea:	f043 0308 	orr.w	r3, r3, #8
 80012ee:	6313      	str	r3, [r2, #48]	; 0x30
}
 80012f0:	e035      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOE)
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	4a21      	ldr	r2, [pc, #132]	; (800137c <GPIO_PeriClockControl+0xf4>)
 80012f6:	4293      	cmp	r3, r2
 80012f8:	d106      	bne.n	8001308 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80012fa:	4b1c      	ldr	r3, [pc, #112]	; (800136c <GPIO_PeriClockControl+0xe4>)
 80012fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80012fe:	4a1b      	ldr	r2, [pc, #108]	; (800136c <GPIO_PeriClockControl+0xe4>)
 8001300:	f043 0310 	orr.w	r3, r3, #16
 8001304:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001306:	e02a      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOF)
 8001308:	687b      	ldr	r3, [r7, #4]
 800130a:	4a1d      	ldr	r2, [pc, #116]	; (8001380 <GPIO_PeriClockControl+0xf8>)
 800130c:	4293      	cmp	r3, r2
 800130e:	d106      	bne.n	800131e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8001310:	4b16      	ldr	r3, [pc, #88]	; (800136c <GPIO_PeriClockControl+0xe4>)
 8001312:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001314:	4a15      	ldr	r2, [pc, #84]	; (800136c <GPIO_PeriClockControl+0xe4>)
 8001316:	f043 0320 	orr.w	r3, r3, #32
 800131a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800131c:	e01f      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOG)
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	4a18      	ldr	r2, [pc, #96]	; (8001384 <GPIO_PeriClockControl+0xfc>)
 8001322:	4293      	cmp	r3, r2
 8001324:	d106      	bne.n	8001334 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8001326:	4b11      	ldr	r3, [pc, #68]	; (800136c <GPIO_PeriClockControl+0xe4>)
 8001328:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800132a:	4a10      	ldr	r2, [pc, #64]	; (800136c <GPIO_PeriClockControl+0xe4>)
 800132c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001330:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001332:	e014      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOH)
 8001334:	687b      	ldr	r3, [r7, #4]
 8001336:	4a14      	ldr	r2, [pc, #80]	; (8001388 <GPIO_PeriClockControl+0x100>)
 8001338:	4293      	cmp	r3, r2
 800133a:	d106      	bne.n	800134a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800133c:	4b0b      	ldr	r3, [pc, #44]	; (800136c <GPIO_PeriClockControl+0xe4>)
 800133e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001340:	4a0a      	ldr	r2, [pc, #40]	; (800136c <GPIO_PeriClockControl+0xe4>)
 8001342:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001346:	6313      	str	r3, [r2, #48]	; 0x30
}
 8001348:	e009      	b.n	800135e <GPIO_PeriClockControl+0xd6>
		}else if (pGPIOx == GPIOI)
 800134a:	687b      	ldr	r3, [r7, #4]
 800134c:	4a0f      	ldr	r2, [pc, #60]	; (800138c <GPIO_PeriClockControl+0x104>)
 800134e:	4293      	cmp	r3, r2
 8001350:	d105      	bne.n	800135e <GPIO_PeriClockControl+0xd6>
			GPIOI_PCLK_EN();
 8001352:	4b06      	ldr	r3, [pc, #24]	; (800136c <GPIO_PeriClockControl+0xe4>)
 8001354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001356:	4a05      	ldr	r2, [pc, #20]	; (800136c <GPIO_PeriClockControl+0xe4>)
 8001358:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800135c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800135e:	bf00      	nop
 8001360:	370c      	adds	r7, #12
 8001362:	46bd      	mov	sp, r7
 8001364:	bc80      	pop	{r7}
 8001366:	4770      	bx	lr
 8001368:	40020000 	.word	0x40020000
 800136c:	40023800 	.word	0x40023800
 8001370:	40020400 	.word	0x40020400
 8001374:	40020800 	.word	0x40020800
 8001378:	40020c00 	.word	0x40020c00
 800137c:	40021000 	.word	0x40021000
 8001380:	40021400 	.word	0x40021400
 8001384:	40021800 	.word	0x40021800
 8001388:	40021c00 	.word	0x40021c00
 800138c:	40022000 	.word	0x40022000

08001390 <GPIO_Init>:
 *
 * @Note              -

 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 8001390:	b580      	push	{r7, lr}
 8001392:	b086      	sub	sp, #24
 8001394:	af00      	add	r7, sp, #0
 8001396:	6078      	str	r0, [r7, #4]
	 uint32_t temp=0; //temp. register
 8001398:	2300      	movs	r3, #0
 800139a:	617b      	str	r3, [r7, #20]

	 //enable the peripheral clock

	 GPIO_PeriClockControl(pGPIOHandle->pGPIOx, ENABLE);
 800139c:	687b      	ldr	r3, [r7, #4]
 800139e:	681b      	ldr	r3, [r3, #0]
 80013a0:	2101      	movs	r1, #1
 80013a2:	4618      	mov	r0, r3
 80013a4:	f7ff ff70 	bl	8001288 <GPIO_PeriClockControl>

	//1 . configure the mode of gpio pin

	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80013a8:	687b      	ldr	r3, [r7, #4]
 80013aa:	795b      	ldrb	r3, [r3, #5]
 80013ac:	2b03      	cmp	r3, #3
 80013ae:	d820      	bhi.n	80013f2 <GPIO_Init+0x62>
	{
		//the non interrupt mode
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber ) );
 80013b0:	687b      	ldr	r3, [r7, #4]
 80013b2:	795b      	ldrb	r3, [r3, #5]
 80013b4:	461a      	mov	r2, r3
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	791b      	ldrb	r3, [r3, #4]
 80013ba:	005b      	lsls	r3, r3, #1
 80013bc:	fa02 f303 	lsl.w	r3, r2, r3
 80013c0:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~( 0x3 << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80013c2:	687b      	ldr	r3, [r7, #4]
 80013c4:	681b      	ldr	r3, [r3, #0]
 80013c6:	681a      	ldr	r2, [r3, #0]
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	791b      	ldrb	r3, [r3, #4]
 80013cc:	005b      	lsls	r3, r3, #1
 80013ce:	2103      	movs	r1, #3
 80013d0:	fa01 f303 	lsl.w	r3, r1, r3
 80013d4:	43db      	mvns	r3, r3
 80013d6:	4619      	mov	r1, r3
 80013d8:	687b      	ldr	r3, [r7, #4]
 80013da:	681b      	ldr	r3, [r3, #0]
 80013dc:	400a      	ands	r2, r1
 80013de:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; //setting
 80013e0:	687b      	ldr	r3, [r7, #4]
 80013e2:	681b      	ldr	r3, [r3, #0]
 80013e4:	6819      	ldr	r1, [r3, #0]
 80013e6:	687b      	ldr	r3, [r7, #4]
 80013e8:	681b      	ldr	r3, [r3, #0]
 80013ea:	697a      	ldr	r2, [r7, #20]
 80013ec:	430a      	orrs	r2, r1
 80013ee:	601a      	str	r2, [r3, #0]
 80013f0:	e0cb      	b.n	800158a <GPIO_Init+0x1fa>

	}else
	{
		//this part will code later . ( interrupt mode)
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_FT )
 80013f2:	687b      	ldr	r3, [r7, #4]
 80013f4:	795b      	ldrb	r3, [r3, #5]
 80013f6:	2b04      	cmp	r3, #4
 80013f8:	d117      	bne.n	800142a <GPIO_Init+0x9a>
		{
			//1. configure the FTSR
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80013fa:	4b4b      	ldr	r3, [pc, #300]	; (8001528 <GPIO_Init+0x198>)
 80013fc:	68db      	ldr	r3, [r3, #12]
 80013fe:	687a      	ldr	r2, [r7, #4]
 8001400:	7912      	ldrb	r2, [r2, #4]
 8001402:	4611      	mov	r1, r2
 8001404:	2201      	movs	r2, #1
 8001406:	408a      	lsls	r2, r1
 8001408:	4611      	mov	r1, r2
 800140a:	4a47      	ldr	r2, [pc, #284]	; (8001528 <GPIO_Init+0x198>)
 800140c:	430b      	orrs	r3, r1
 800140e:	60d3      	str	r3, [r2, #12]
			//Clear the corresponding RTSR bit
			EXTI->RTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001410:	4b45      	ldr	r3, [pc, #276]	; (8001528 <GPIO_Init+0x198>)
 8001412:	689b      	ldr	r3, [r3, #8]
 8001414:	687a      	ldr	r2, [r7, #4]
 8001416:	7912      	ldrb	r2, [r2, #4]
 8001418:	4611      	mov	r1, r2
 800141a:	2201      	movs	r2, #1
 800141c:	408a      	lsls	r2, r1
 800141e:	43d2      	mvns	r2, r2
 8001420:	4611      	mov	r1, r2
 8001422:	4a41      	ldr	r2, [pc, #260]	; (8001528 <GPIO_Init+0x198>)
 8001424:	400b      	ands	r3, r1
 8001426:	6093      	str	r3, [r2, #8]
 8001428:	e035      	b.n	8001496 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode ==GPIO_MODE_IT_RT )
 800142a:	687b      	ldr	r3, [r7, #4]
 800142c:	795b      	ldrb	r3, [r3, #5]
 800142e:	2b05      	cmp	r3, #5
 8001430:	d117      	bne.n	8001462 <GPIO_Init+0xd2>
		{
			//1 . configure the RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001432:	4b3d      	ldr	r3, [pc, #244]	; (8001528 <GPIO_Init+0x198>)
 8001434:	689b      	ldr	r3, [r3, #8]
 8001436:	687a      	ldr	r2, [r7, #4]
 8001438:	7912      	ldrb	r2, [r2, #4]
 800143a:	4611      	mov	r1, r2
 800143c:	2201      	movs	r2, #1
 800143e:	408a      	lsls	r2, r1
 8001440:	4611      	mov	r1, r2
 8001442:	4a39      	ldr	r2, [pc, #228]	; (8001528 <GPIO_Init+0x198>)
 8001444:	430b      	orrs	r3, r1
 8001446:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR &= ~( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001448:	4b37      	ldr	r3, [pc, #220]	; (8001528 <GPIO_Init+0x198>)
 800144a:	68db      	ldr	r3, [r3, #12]
 800144c:	687a      	ldr	r2, [r7, #4]
 800144e:	7912      	ldrb	r2, [r2, #4]
 8001450:	4611      	mov	r1, r2
 8001452:	2201      	movs	r2, #1
 8001454:	408a      	lsls	r2, r1
 8001456:	43d2      	mvns	r2, r2
 8001458:	4611      	mov	r1, r2
 800145a:	4a33      	ldr	r2, [pc, #204]	; (8001528 <GPIO_Init+0x198>)
 800145c:	400b      	ands	r3, r1
 800145e:	60d3      	str	r3, [r2, #12]
 8001460:	e019      	b.n	8001496 <GPIO_Init+0x106>

		}else if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT )
 8001462:	687b      	ldr	r3, [r7, #4]
 8001464:	795b      	ldrb	r3, [r3, #5]
 8001466:	2b06      	cmp	r3, #6
 8001468:	d115      	bne.n	8001496 <GPIO_Init+0x106>
		{
			//1. configure both FTSR and RTSR
			EXTI->RTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800146a:	4b2f      	ldr	r3, [pc, #188]	; (8001528 <GPIO_Init+0x198>)
 800146c:	689b      	ldr	r3, [r3, #8]
 800146e:	687a      	ldr	r2, [r7, #4]
 8001470:	7912      	ldrb	r2, [r2, #4]
 8001472:	4611      	mov	r1, r2
 8001474:	2201      	movs	r2, #1
 8001476:	408a      	lsls	r2, r1
 8001478:	4611      	mov	r1, r2
 800147a:	4a2b      	ldr	r2, [pc, #172]	; (8001528 <GPIO_Init+0x198>)
 800147c:	430b      	orrs	r3, r1
 800147e:	6093      	str	r3, [r2, #8]
			//Clear the corresponding RTSR bit
			EXTI->FTSR |= ( 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8001480:	4b29      	ldr	r3, [pc, #164]	; (8001528 <GPIO_Init+0x198>)
 8001482:	68db      	ldr	r3, [r3, #12]
 8001484:	687a      	ldr	r2, [r7, #4]
 8001486:	7912      	ldrb	r2, [r2, #4]
 8001488:	4611      	mov	r1, r2
 800148a:	2201      	movs	r2, #1
 800148c:	408a      	lsls	r2, r1
 800148e:	4611      	mov	r1, r2
 8001490:	4a25      	ldr	r2, [pc, #148]	; (8001528 <GPIO_Init+0x198>)
 8001492:	430b      	orrs	r3, r1
 8001494:	60d3      	str	r3, [r2, #12]
		}

		//2. configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4 ;
 8001496:	687b      	ldr	r3, [r7, #4]
 8001498:	791b      	ldrb	r3, [r3, #4]
 800149a:	089b      	lsrs	r3, r3, #2
 800149c:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 800149e:	687b      	ldr	r3, [r7, #4]
 80014a0:	791b      	ldrb	r3, [r3, #4]
 80014a2:	f003 0303 	and.w	r3, r3, #3
 80014a6:	74bb      	strb	r3, [r7, #18]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	681b      	ldr	r3, [r3, #0]
 80014ac:	4a1f      	ldr	r2, [pc, #124]	; (800152c <GPIO_Init+0x19c>)
 80014ae:	4293      	cmp	r3, r2
 80014b0:	d04e      	beq.n	8001550 <GPIO_Init+0x1c0>
 80014b2:	687b      	ldr	r3, [r7, #4]
 80014b4:	681b      	ldr	r3, [r3, #0]
 80014b6:	4a1e      	ldr	r2, [pc, #120]	; (8001530 <GPIO_Init+0x1a0>)
 80014b8:	4293      	cmp	r3, r2
 80014ba:	d032      	beq.n	8001522 <GPIO_Init+0x192>
 80014bc:	687b      	ldr	r3, [r7, #4]
 80014be:	681b      	ldr	r3, [r3, #0]
 80014c0:	4a1c      	ldr	r2, [pc, #112]	; (8001534 <GPIO_Init+0x1a4>)
 80014c2:	4293      	cmp	r3, r2
 80014c4:	d02b      	beq.n	800151e <GPIO_Init+0x18e>
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	681b      	ldr	r3, [r3, #0]
 80014ca:	4a1b      	ldr	r2, [pc, #108]	; (8001538 <GPIO_Init+0x1a8>)
 80014cc:	4293      	cmp	r3, r2
 80014ce:	d024      	beq.n	800151a <GPIO_Init+0x18a>
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	681b      	ldr	r3, [r3, #0]
 80014d4:	4a19      	ldr	r2, [pc, #100]	; (800153c <GPIO_Init+0x1ac>)
 80014d6:	4293      	cmp	r3, r2
 80014d8:	d01d      	beq.n	8001516 <GPIO_Init+0x186>
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	681b      	ldr	r3, [r3, #0]
 80014de:	4a18      	ldr	r2, [pc, #96]	; (8001540 <GPIO_Init+0x1b0>)
 80014e0:	4293      	cmp	r3, r2
 80014e2:	d016      	beq.n	8001512 <GPIO_Init+0x182>
 80014e4:	687b      	ldr	r3, [r7, #4]
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	4a16      	ldr	r2, [pc, #88]	; (8001544 <GPIO_Init+0x1b4>)
 80014ea:	4293      	cmp	r3, r2
 80014ec:	d00f      	beq.n	800150e <GPIO_Init+0x17e>
 80014ee:	687b      	ldr	r3, [r7, #4]
 80014f0:	681b      	ldr	r3, [r3, #0]
 80014f2:	4a15      	ldr	r2, [pc, #84]	; (8001548 <GPIO_Init+0x1b8>)
 80014f4:	4293      	cmp	r3, r2
 80014f6:	d008      	beq.n	800150a <GPIO_Init+0x17a>
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	681b      	ldr	r3, [r3, #0]
 80014fc:	4a13      	ldr	r2, [pc, #76]	; (800154c <GPIO_Init+0x1bc>)
 80014fe:	4293      	cmp	r3, r2
 8001500:	d101      	bne.n	8001506 <GPIO_Init+0x176>
 8001502:	2308      	movs	r3, #8
 8001504:	e025      	b.n	8001552 <GPIO_Init+0x1c2>
 8001506:	2300      	movs	r3, #0
 8001508:	e023      	b.n	8001552 <GPIO_Init+0x1c2>
 800150a:	2307      	movs	r3, #7
 800150c:	e021      	b.n	8001552 <GPIO_Init+0x1c2>
 800150e:	2306      	movs	r3, #6
 8001510:	e01f      	b.n	8001552 <GPIO_Init+0x1c2>
 8001512:	2305      	movs	r3, #5
 8001514:	e01d      	b.n	8001552 <GPIO_Init+0x1c2>
 8001516:	2304      	movs	r3, #4
 8001518:	e01b      	b.n	8001552 <GPIO_Init+0x1c2>
 800151a:	2303      	movs	r3, #3
 800151c:	e019      	b.n	8001552 <GPIO_Init+0x1c2>
 800151e:	2302      	movs	r3, #2
 8001520:	e017      	b.n	8001552 <GPIO_Init+0x1c2>
 8001522:	2301      	movs	r3, #1
 8001524:	e015      	b.n	8001552 <GPIO_Init+0x1c2>
 8001526:	bf00      	nop
 8001528:	40013c00 	.word	0x40013c00
 800152c:	40020000 	.word	0x40020000
 8001530:	40020400 	.word	0x40020400
 8001534:	40020800 	.word	0x40020800
 8001538:	40020c00 	.word	0x40020c00
 800153c:	40021000 	.word	0x40021000
 8001540:	40021400 	.word	0x40021400
 8001544:	40021800 	.word	0x40021800
 8001548:	40021c00 	.word	0x40021c00
 800154c:	40022000 	.word	0x40022000
 8001550:	2300      	movs	r3, #0
 8001552:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 8001554:	4b59      	ldr	r3, [pc, #356]	; (80016bc <GPIO_Init+0x32c>)
 8001556:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001558:	4a58      	ldr	r2, [pc, #352]	; (80016bc <GPIO_Init+0x32c>)
 800155a:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800155e:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << ( temp2 * 4);
 8001560:	7c7a      	ldrb	r2, [r7, #17]
 8001562:	7cbb      	ldrb	r3, [r7, #18]
 8001564:	009b      	lsls	r3, r3, #2
 8001566:	fa02 f103 	lsl.w	r1, r2, r3
 800156a:	4a55      	ldr	r2, [pc, #340]	; (80016c0 <GPIO_Init+0x330>)
 800156c:	7cfb      	ldrb	r3, [r7, #19]
 800156e:	3302      	adds	r3, #2
 8001570:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3 . enable the exti interrupt delivery using IMR
		EXTI->IMR |= 1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber;
 8001574:	4b53      	ldr	r3, [pc, #332]	; (80016c4 <GPIO_Init+0x334>)
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	687a      	ldr	r2, [r7, #4]
 800157a:	7912      	ldrb	r2, [r2, #4]
 800157c:	4611      	mov	r1, r2
 800157e:	2201      	movs	r2, #1
 8001580:	408a      	lsls	r2, r1
 8001582:	4611      	mov	r1, r2
 8001584:	4a4f      	ldr	r2, [pc, #316]	; (80016c4 <GPIO_Init+0x334>)
 8001586:	430b      	orrs	r3, r1
 8001588:	6013      	str	r3, [r2, #0]
	}

	//2. configure the speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	799b      	ldrb	r3, [r3, #6]
 800158e:	461a      	mov	r2, r3
 8001590:	687b      	ldr	r3, [r7, #4]
 8001592:	791b      	ldrb	r3, [r3, #4]
 8001594:	005b      	lsls	r3, r3, #1
 8001596:	fa02 f303 	lsl.w	r3, r2, r3
 800159a:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 800159c:	687b      	ldr	r3, [r7, #4]
 800159e:	681b      	ldr	r3, [r3, #0]
 80015a0:	689a      	ldr	r2, [r3, #8]
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	791b      	ldrb	r3, [r3, #4]
 80015a6:	005b      	lsls	r3, r3, #1
 80015a8:	2103      	movs	r1, #3
 80015aa:	fa01 f303 	lsl.w	r3, r1, r3
 80015ae:	43db      	mvns	r3, r3
 80015b0:	4619      	mov	r1, r3
 80015b2:	687b      	ldr	r3, [r7, #4]
 80015b4:	681b      	ldr	r3, [r3, #0]
 80015b6:	400a      	ands	r2, r1
 80015b8:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80015ba:	687b      	ldr	r3, [r7, #4]
 80015bc:	681b      	ldr	r3, [r3, #0]
 80015be:	6899      	ldr	r1, [r3, #8]
 80015c0:	687b      	ldr	r3, [r7, #4]
 80015c2:	681b      	ldr	r3, [r3, #0]
 80015c4:	697a      	ldr	r2, [r7, #20]
 80015c6:	430a      	orrs	r2, r1
 80015c8:	609a      	str	r2, [r3, #8]

	//3. configure the pupd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber) );
 80015ca:	687b      	ldr	r3, [r7, #4]
 80015cc:	79db      	ldrb	r3, [r3, #7]
 80015ce:	461a      	mov	r2, r3
 80015d0:	687b      	ldr	r3, [r7, #4]
 80015d2:	791b      	ldrb	r3, [r3, #4]
 80015d4:	005b      	lsls	r3, r3, #1
 80015d6:	fa02 f303 	lsl.w	r3, r2, r3
 80015da:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~( 0x3 << ( 2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)); //clearing
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	68da      	ldr	r2, [r3, #12]
 80015e2:	687b      	ldr	r3, [r7, #4]
 80015e4:	791b      	ldrb	r3, [r3, #4]
 80015e6:	005b      	lsls	r3, r3, #1
 80015e8:	2103      	movs	r1, #3
 80015ea:	fa01 f303 	lsl.w	r3, r1, r3
 80015ee:	43db      	mvns	r3, r3
 80015f0:	4619      	mov	r1, r3
 80015f2:	687b      	ldr	r3, [r7, #4]
 80015f4:	681b      	ldr	r3, [r3, #0]
 80015f6:	400a      	ands	r2, r1
 80015f8:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	68d9      	ldr	r1, [r3, #12]
 8001600:	687b      	ldr	r3, [r7, #4]
 8001602:	681b      	ldr	r3, [r3, #0]
 8001604:	697a      	ldr	r2, [r7, #20]
 8001606:	430a      	orrs	r2, r1
 8001608:	60da      	str	r2, [r3, #12]


	//4. configure the optype
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber );
 800160a:	687b      	ldr	r3, [r7, #4]
 800160c:	7a1b      	ldrb	r3, [r3, #8]
 800160e:	461a      	mov	r2, r3
 8001610:	687b      	ldr	r3, [r7, #4]
 8001612:	791b      	ldrb	r3, [r3, #4]
 8001614:	fa02 f303 	lsl.w	r3, r2, r3
 8001618:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~( 0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); //clearing
 800161a:	687b      	ldr	r3, [r7, #4]
 800161c:	681b      	ldr	r3, [r3, #0]
 800161e:	685a      	ldr	r2, [r3, #4]
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	791b      	ldrb	r3, [r3, #4]
 8001624:	4619      	mov	r1, r3
 8001626:	2301      	movs	r3, #1
 8001628:	408b      	lsls	r3, r1
 800162a:	43db      	mvns	r3, r3
 800162c:	4619      	mov	r1, r3
 800162e:	687b      	ldr	r3, [r7, #4]
 8001630:	681b      	ldr	r3, [r3, #0]
 8001632:	400a      	ands	r2, r1
 8001634:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8001636:	687b      	ldr	r3, [r7, #4]
 8001638:	681b      	ldr	r3, [r3, #0]
 800163a:	6859      	ldr	r1, [r3, #4]
 800163c:	687b      	ldr	r3, [r7, #4]
 800163e:	681b      	ldr	r3, [r3, #0]
 8001640:	697a      	ldr	r2, [r7, #20]
 8001642:	430a      	orrs	r2, r1
 8001644:	605a      	str	r2, [r3, #4]

	//5. configure the alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8001646:	687b      	ldr	r3, [r7, #4]
 8001648:	795b      	ldrb	r3, [r3, #5]
 800164a:	2b02      	cmp	r3, #2
 800164c:	d131      	bne.n	80016b2 <GPIO_Init+0x322>
	{
		//configure the alt function registers.
		uint8_t temp1, temp2;

		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 800164e:	687b      	ldr	r3, [r7, #4]
 8001650:	791b      	ldrb	r3, [r3, #4]
 8001652:	08db      	lsrs	r3, r3, #3
 8001654:	743b      	strb	r3, [r7, #16]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber  % 8;
 8001656:	687b      	ldr	r3, [r7, #4]
 8001658:	791b      	ldrb	r3, [r3, #4]
 800165a:	f003 0307 	and.w	r3, r3, #7
 800165e:	73fb      	strb	r3, [r7, #15]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << ( 4 * temp2 ) ); //clearing
 8001660:	687b      	ldr	r3, [r7, #4]
 8001662:	681b      	ldr	r3, [r3, #0]
 8001664:	7c3a      	ldrb	r2, [r7, #16]
 8001666:	3208      	adds	r2, #8
 8001668:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800166c:	7bfb      	ldrb	r3, [r7, #15]
 800166e:	009b      	lsls	r3, r3, #2
 8001670:	220f      	movs	r2, #15
 8001672:	fa02 f303 	lsl.w	r3, r2, r3
 8001676:	43db      	mvns	r3, r3
 8001678:	4618      	mov	r0, r3
 800167a:	687b      	ldr	r3, [r7, #4]
 800167c:	681b      	ldr	r3, [r3, #0]
 800167e:	7c3a      	ldrb	r2, [r7, #16]
 8001680:	4001      	ands	r1, r0
 8001682:	3208      	adds	r2, #8
 8001684:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << ( 4 * temp2 ) );
 8001688:	687b      	ldr	r3, [r7, #4]
 800168a:	681b      	ldr	r3, [r3, #0]
 800168c:	7c3a      	ldrb	r2, [r7, #16]
 800168e:	3208      	adds	r2, #8
 8001690:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8001694:	687b      	ldr	r3, [r7, #4]
 8001696:	7a5b      	ldrb	r3, [r3, #9]
 8001698:	461a      	mov	r2, r3
 800169a:	7bfb      	ldrb	r3, [r7, #15]
 800169c:	009b      	lsls	r3, r3, #2
 800169e:	fa02 f303 	lsl.w	r3, r2, r3
 80016a2:	4618      	mov	r0, r3
 80016a4:	687b      	ldr	r3, [r7, #4]
 80016a6:	681b      	ldr	r3, [r3, #0]
 80016a8:	7c3a      	ldrb	r2, [r7, #16]
 80016aa:	4301      	orrs	r1, r0
 80016ac:	3208      	adds	r2, #8
 80016ae:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 80016b2:	bf00      	nop
 80016b4:	3718      	adds	r7, #24
 80016b6:	46bd      	mov	sp, r7
 80016b8:	bd80      	pop	{r7, pc}
 80016ba:	bf00      	nop
 80016bc:	40023800 	.word	0x40023800
 80016c0:	40013800 	.word	0x40013800
 80016c4:	40013c00 	.word	0x40013c00

080016c8 <I2C_GenerateStartCondition>:

static void I2C_MasterHandleRXNEInterrupt(I2C_Handle_t *pI2CHandle );
static void I2C_MasterHandleTXEInterrupt(I2C_Handle_t *pI2CHandle );

static void I2C_GenerateStartCondition(I2C_RegDef_t *pI2Cx)
{
 80016c8:	b480      	push	{r7}
 80016ca:	b083      	sub	sp, #12
 80016cc:	af00      	add	r7, sp, #0
 80016ce:	6078      	str	r0, [r7, #4]
	pI2Cx->CR1 |= ( 1 << I2C_CR1_START);
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 80016d8:	687b      	ldr	r3, [r7, #4]
 80016da:	601a      	str	r2, [r3, #0]
}
 80016dc:	bf00      	nop
 80016de:	370c      	adds	r7, #12
 80016e0:	46bd      	mov	sp, r7
 80016e2:	bc80      	pop	{r7}
 80016e4:	4770      	bx	lr

080016e6 <I2C_ExecuteAddressPhaseWrite>:



static void I2C_ExecuteAddressPhaseWrite(I2C_RegDef_t *pI2Cx, uint8_t SlaveAddr)
{
 80016e6:	b480      	push	{r7}
 80016e8:	b083      	sub	sp, #12
 80016ea:	af00      	add	r7, sp, #0
 80016ec:	6078      	str	r0, [r7, #4]
 80016ee:	460b      	mov	r3, r1
 80016f0:	70fb      	strb	r3, [r7, #3]
	SlaveAddr = SlaveAddr << 1;
 80016f2:	78fb      	ldrb	r3, [r7, #3]
 80016f4:	005b      	lsls	r3, r3, #1
 80016f6:	70fb      	strb	r3, [r7, #3]
	SlaveAddr &= ~(1); //SlaveAddr is Slave address + r/nw bit=0
 80016f8:	78fb      	ldrb	r3, [r7, #3]
 80016fa:	f023 0301 	bic.w	r3, r3, #1
 80016fe:	70fb      	strb	r3, [r7, #3]
	pI2Cx->DR = SlaveAddr;
 8001700:	78fa      	ldrb	r2, [r7, #3]
 8001702:	687b      	ldr	r3, [r7, #4]
 8001704:	611a      	str	r2, [r3, #16]
}
 8001706:	bf00      	nop
 8001708:	370c      	adds	r7, #12
 800170a:	46bd      	mov	sp, r7
 800170c:	bc80      	pop	{r7}
 800170e:	4770      	bx	lr

08001710 <I2C_ExecuteAddressPhaseRead>:


static void I2C_ExecuteAddressPhaseRead(I2C_RegDef_t *pI2Cx, uint8_t SlaveAddr)
{
 8001710:	b480      	push	{r7}
 8001712:	b083      	sub	sp, #12
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]
 8001718:	460b      	mov	r3, r1
 800171a:	70fb      	strb	r3, [r7, #3]
	SlaveAddr = SlaveAddr << 1;
 800171c:	78fb      	ldrb	r3, [r7, #3]
 800171e:	005b      	lsls	r3, r3, #1
 8001720:	70fb      	strb	r3, [r7, #3]
	SlaveAddr |= 1; //SlaveAddr is Slave address + r/nw bit=1
 8001722:	78fb      	ldrb	r3, [r7, #3]
 8001724:	f043 0301 	orr.w	r3, r3, #1
 8001728:	70fb      	strb	r3, [r7, #3]
	pI2Cx->DR = SlaveAddr;
 800172a:	78fa      	ldrb	r2, [r7, #3]
 800172c:	687b      	ldr	r3, [r7, #4]
 800172e:	611a      	str	r2, [r3, #16]
}
 8001730:	bf00      	nop
 8001732:	370c      	adds	r7, #12
 8001734:	46bd      	mov	sp, r7
 8001736:	bc80      	pop	{r7}
 8001738:	4770      	bx	lr

0800173a <I2C_ClearADDRFlag>:


static void I2C_ClearADDRFlag(I2C_Handle_t *pI2CHandle )
{
 800173a:	b580      	push	{r7, lr}
 800173c:	b084      	sub	sp, #16
 800173e:	af00      	add	r7, sp, #0
 8001740:	6078      	str	r0, [r7, #4]
	uint32_t dummy_read;
	//check for device mode
	if(pI2CHandle->pI2Cx->SR2 & ( 1 << I2C_SR2_MSL))
 8001742:	687b      	ldr	r3, [r7, #4]
 8001744:	681b      	ldr	r3, [r3, #0]
 8001746:	699b      	ldr	r3, [r3, #24]
 8001748:	f003 0301 	and.w	r3, r3, #1
 800174c:	2b00      	cmp	r3, #0
 800174e:	d01f      	beq.n	8001790 <I2C_ClearADDRFlag+0x56>
	{
		//device is in master mode
		if(pI2CHandle->TxRxState == I2C_BUSY_IN_RX)
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	7f1b      	ldrb	r3, [r3, #28]
 8001754:	2b01      	cmp	r3, #1
 8001756:	d112      	bne.n	800177e <I2C_ClearADDRFlag+0x44>
		{
			if(pI2CHandle->RxSize  == 1)
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	6a1b      	ldr	r3, [r3, #32]
 800175c:	2b01      	cmp	r3, #1
 800175e:	d11f      	bne.n	80017a0 <I2C_ClearADDRFlag+0x66>
			{
				//first disable the ack
				I2C_ManageAcking(pI2CHandle->pI2Cx,DISABLE);
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	2100      	movs	r1, #0
 8001766:	4618      	mov	r0, r3
 8001768:	f000 fa38 	bl	8001bdc <I2C_ManageAcking>

				//clear the ADDR flag ( read SR1 , read SR2)
				dummy_read = pI2CHandle->pI2Cx->SR1;
 800176c:	687b      	ldr	r3, [r7, #4]
 800176e:	681b      	ldr	r3, [r3, #0]
 8001770:	695b      	ldr	r3, [r3, #20]
 8001772:	60fb      	str	r3, [r7, #12]
				dummy_read = pI2CHandle->pI2Cx->SR2;
 8001774:	687b      	ldr	r3, [r7, #4]
 8001776:	681b      	ldr	r3, [r3, #0]
 8001778:	699b      	ldr	r3, [r3, #24]
 800177a:	60fb      	str	r3, [r7, #12]
		dummy_read = pI2CHandle->pI2Cx->SR2;
		(void)dummy_read;
	}


}
 800177c:	e010      	b.n	80017a0 <I2C_ClearADDRFlag+0x66>
			dummy_read = pI2CHandle->pI2Cx->SR1;
 800177e:	687b      	ldr	r3, [r7, #4]
 8001780:	681b      	ldr	r3, [r3, #0]
 8001782:	695b      	ldr	r3, [r3, #20]
 8001784:	60fb      	str	r3, [r7, #12]
			dummy_read = pI2CHandle->pI2Cx->SR2;
 8001786:	687b      	ldr	r3, [r7, #4]
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	699b      	ldr	r3, [r3, #24]
 800178c:	60fb      	str	r3, [r7, #12]
}
 800178e:	e007      	b.n	80017a0 <I2C_ClearADDRFlag+0x66>
		dummy_read = pI2CHandle->pI2Cx->SR1;
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	681b      	ldr	r3, [r3, #0]
 8001794:	695b      	ldr	r3, [r3, #20]
 8001796:	60fb      	str	r3, [r7, #12]
		dummy_read = pI2CHandle->pI2Cx->SR2;
 8001798:	687b      	ldr	r3, [r7, #4]
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	699b      	ldr	r3, [r3, #24]
 800179e:	60fb      	str	r3, [r7, #12]
}
 80017a0:	bf00      	nop
 80017a2:	3710      	adds	r7, #16
 80017a4:	46bd      	mov	sp, r7
 80017a6:	bd80      	pop	{r7, pc}

080017a8 <I2C_GenerateStopCondition>:


 void I2C_GenerateStopCondition(I2C_RegDef_t *pI2Cx)
{
 80017a8:	b480      	push	{r7}
 80017aa:	b083      	sub	sp, #12
 80017ac:	af00      	add	r7, sp, #0
 80017ae:	6078      	str	r0, [r7, #4]
	pI2Cx->CR1 |= ( 1 << I2C_CR1_STOP);
 80017b0:	687b      	ldr	r3, [r7, #4]
 80017b2:	681b      	ldr	r3, [r3, #0]
 80017b4:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	601a      	str	r2, [r3, #0]
}
 80017bc:	bf00      	nop
 80017be:	370c      	adds	r7, #12
 80017c0:	46bd      	mov	sp, r7
 80017c2:	bc80      	pop	{r7}
 80017c4:	4770      	bx	lr

080017c6 <I2C_PeripheralControl>:
 *
 * @Note              -

 */
void I2C_PeripheralControl(I2C_RegDef_t *pI2Cx, uint8_t EnOrDi)
{
 80017c6:	b480      	push	{r7}
 80017c8:	b083      	sub	sp, #12
 80017ca:	af00      	add	r7, sp, #0
 80017cc:	6078      	str	r0, [r7, #4]
 80017ce:	460b      	mov	r3, r1
 80017d0:	70fb      	strb	r3, [r7, #3]
	if(EnOrDi == ENABLE)
 80017d2:	78fb      	ldrb	r3, [r7, #3]
 80017d4:	2b01      	cmp	r3, #1
 80017d6:	d106      	bne.n	80017e6 <I2C_PeripheralControl+0x20>
	{
		pI2Cx->CR1 |= (1 << I2C_CR1_PE);
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	f043 0201 	orr.w	r2, r3, #1
 80017e0:	687b      	ldr	r3, [r7, #4]
 80017e2:	601a      	str	r2, [r3, #0]
	}else
	{
		pI2Cx->CR1 &= ~(1 << 0);
	}

}
 80017e4:	e005      	b.n	80017f2 <I2C_PeripheralControl+0x2c>
		pI2Cx->CR1 &= ~(1 << 0);
 80017e6:	687b      	ldr	r3, [r7, #4]
 80017e8:	681b      	ldr	r3, [r3, #0]
 80017ea:	f023 0201 	bic.w	r2, r3, #1
 80017ee:	687b      	ldr	r3, [r7, #4]
 80017f0:	601a      	str	r2, [r3, #0]
}
 80017f2:	bf00      	nop
 80017f4:	370c      	adds	r7, #12
 80017f6:	46bd      	mov	sp, r7
 80017f8:	bc80      	pop	{r7}
 80017fa:	4770      	bx	lr

080017fc <I2C_PeriClockControl>:
 *
 * @Note              -

 */
void I2C_PeriClockControl(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
 80017fc:	b480      	push	{r7}
 80017fe:	b083      	sub	sp, #12
 8001800:	af00      	add	r7, sp, #0
 8001802:	6078      	str	r0, [r7, #4]
 8001804:	460b      	mov	r3, r1
 8001806:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8001808:	78fb      	ldrb	r3, [r7, #3]
 800180a:	2b01      	cmp	r3, #1
 800180c:	d11f      	bne.n	800184e <I2C_PeriClockControl+0x52>
	{
		if(pI2Cx == I2C1)
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	4a11      	ldr	r2, [pc, #68]	; (8001858 <I2C_PeriClockControl+0x5c>)
 8001812:	4293      	cmp	r3, r2
 8001814:	d106      	bne.n	8001824 <I2C_PeriClockControl+0x28>
		{
			I2C1_PCLK_EN();
 8001816:	4b11      	ldr	r3, [pc, #68]	; (800185c <I2C_PeriClockControl+0x60>)
 8001818:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800181a:	4a10      	ldr	r2, [pc, #64]	; (800185c <I2C_PeriClockControl+0x60>)
 800181c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001820:	6413      	str	r3, [r2, #64]	; 0x40
	else
	{
		//TODO
	}

}
 8001822:	e014      	b.n	800184e <I2C_PeriClockControl+0x52>
		}else if (pI2Cx == I2C2)
 8001824:	687b      	ldr	r3, [r7, #4]
 8001826:	4a0e      	ldr	r2, [pc, #56]	; (8001860 <I2C_PeriClockControl+0x64>)
 8001828:	4293      	cmp	r3, r2
 800182a:	d106      	bne.n	800183a <I2C_PeriClockControl+0x3e>
			I2C2_PCLK_EN();
 800182c:	4b0b      	ldr	r3, [pc, #44]	; (800185c <I2C_PeriClockControl+0x60>)
 800182e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001830:	4a0a      	ldr	r2, [pc, #40]	; (800185c <I2C_PeriClockControl+0x60>)
 8001832:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 8001836:	6413      	str	r3, [r2, #64]	; 0x40
}
 8001838:	e009      	b.n	800184e <I2C_PeriClockControl+0x52>
		}else if (pI2Cx == I2C3)
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	4a09      	ldr	r2, [pc, #36]	; (8001864 <I2C_PeriClockControl+0x68>)
 800183e:	4293      	cmp	r3, r2
 8001840:	d105      	bne.n	800184e <I2C_PeriClockControl+0x52>
			I2C3_PCLK_EN();
 8001842:	4b06      	ldr	r3, [pc, #24]	; (800185c <I2C_PeriClockControl+0x60>)
 8001844:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001846:	4a05      	ldr	r2, [pc, #20]	; (800185c <I2C_PeriClockControl+0x60>)
 8001848:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800184c:	6413      	str	r3, [r2, #64]	; 0x40
}
 800184e:	bf00      	nop
 8001850:	370c      	adds	r7, #12
 8001852:	46bd      	mov	sp, r7
 8001854:	bc80      	pop	{r7}
 8001856:	4770      	bx	lr
 8001858:	40005400 	.word	0x40005400
 800185c:	40023800 	.word	0x40023800
 8001860:	40005800 	.word	0x40005800
 8001864:	40005c00 	.word	0x40005c00

08001868 <I2C_Init>:
 *
 * @Note              -

 */
void I2C_Init(I2C_Handle_t *pI2CHandle)
{
 8001868:	b580      	push	{r7, lr}
 800186a:	b084      	sub	sp, #16
 800186c:	af00      	add	r7, sp, #0
 800186e:	6078      	str	r0, [r7, #4]
	uint32_t tempreg = 0 ;
 8001870:	2300      	movs	r3, #0
 8001872:	60fb      	str	r3, [r7, #12]

	//enable the clock for the i2cx peripheral
	I2C_PeriClockControl(pI2CHandle->pI2Cx,ENABLE);
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	2101      	movs	r1, #1
 800187a:	4618      	mov	r0, r3
 800187c:	f7ff ffbe 	bl	80017fc <I2C_PeriClockControl>

	//ack control bit
	tempreg |= pI2CHandle->I2C_Config.I2C_AckControl << 10;
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	7a5b      	ldrb	r3, [r3, #9]
 8001884:	029b      	lsls	r3, r3, #10
 8001886:	461a      	mov	r2, r3
 8001888:	68fb      	ldr	r3, [r7, #12]
 800188a:	4313      	orrs	r3, r2
 800188c:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->CR1 = tempreg;
 800188e:	687b      	ldr	r3, [r7, #4]
 8001890:	681b      	ldr	r3, [r3, #0]
 8001892:	68fa      	ldr	r2, [r7, #12]
 8001894:	601a      	str	r2, [r3, #0]

	//configure the FREQ field of CR2
	tempreg = 0;
 8001896:	2300      	movs	r3, #0
 8001898:	60fb      	str	r3, [r7, #12]
	tempreg |= RCC_GetPCLK1Value() /1000000U ;
 800189a:	f000 f9bb 	bl	8001c14 <RCC_GetPCLK1Value>
 800189e:	4603      	mov	r3, r0
 80018a0:	4a47      	ldr	r2, [pc, #284]	; (80019c0 <I2C_Init+0x158>)
 80018a2:	fba2 2303 	umull	r2, r3, r2, r3
 80018a6:	0c9b      	lsrs	r3, r3, #18
 80018a8:	68fa      	ldr	r2, [r7, #12]
 80018aa:	4313      	orrs	r3, r2
 80018ac:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->CR2 =  (tempreg & 0x3F);
 80018ae:	687b      	ldr	r3, [r7, #4]
 80018b0:	681b      	ldr	r3, [r3, #0]
 80018b2:	68fa      	ldr	r2, [r7, #12]
 80018b4:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80018b8:	605a      	str	r2, [r3, #4]

   //program the device own address
	tempreg = 0;
 80018ba:	2300      	movs	r3, #0
 80018bc:	60fb      	str	r3, [r7, #12]
	tempreg |= pI2CHandle->I2C_Config.I2C_DeviceAddress << 1;
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	7a1b      	ldrb	r3, [r3, #8]
 80018c2:	005b      	lsls	r3, r3, #1
 80018c4:	461a      	mov	r2, r3
 80018c6:	68fb      	ldr	r3, [r7, #12]
 80018c8:	4313      	orrs	r3, r2
 80018ca:	60fb      	str	r3, [r7, #12]
	tempreg |= ( 1 << 14);
 80018cc:	68fb      	ldr	r3, [r7, #12]
 80018ce:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80018d2:	60fb      	str	r3, [r7, #12]
	pI2CHandle->pI2Cx->OAR1 = tempreg;
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	68fa      	ldr	r2, [r7, #12]
 80018da:	609a      	str	r2, [r3, #8]

	//CCR calculations
	uint16_t ccr_value = 0;
 80018dc:	2300      	movs	r3, #0
 80018de:	817b      	strh	r3, [r7, #10]
	tempreg = 0;
 80018e0:	2300      	movs	r3, #0
 80018e2:	60fb      	str	r3, [r7, #12]
	if(pI2CHandle->I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM)
 80018e4:	687b      	ldr	r3, [r7, #4]
 80018e6:	685b      	ldr	r3, [r3, #4]
 80018e8:	4a36      	ldr	r2, [pc, #216]	; (80019c4 <I2C_Init+0x15c>)
 80018ea:	4293      	cmp	r3, r2
 80018ec:	d80f      	bhi.n	800190e <I2C_Init+0xa6>
	{
		//mode is standard mode
		ccr_value = (RCC_GetPCLK1Value() / ( 2 * pI2CHandle->I2C_Config.I2C_SCLSpeed ) );
 80018ee:	f000 f991 	bl	8001c14 <RCC_GetPCLK1Value>
 80018f2:	4602      	mov	r2, r0
 80018f4:	687b      	ldr	r3, [r7, #4]
 80018f6:	685b      	ldr	r3, [r3, #4]
 80018f8:	005b      	lsls	r3, r3, #1
 80018fa:	fbb2 f3f3 	udiv	r3, r2, r3
 80018fe:	817b      	strh	r3, [r7, #10]
		tempreg |= (ccr_value & 0xFFF);
 8001900:	897b      	ldrh	r3, [r7, #10]
 8001902:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001906:	68fa      	ldr	r2, [r7, #12]
 8001908:	4313      	orrs	r3, r2
 800190a:	60fb      	str	r3, [r7, #12]
 800190c:	e02d      	b.n	800196a <I2C_Init+0x102>
	}else
	{
		//mode is fast mode
		tempreg |= ( 1 << 15);
 800190e:	68fb      	ldr	r3, [r7, #12]
 8001910:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8001914:	60fb      	str	r3, [r7, #12]
		tempreg |= (pI2CHandle->I2C_Config.I2C_FMDutyCycle << 14);
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	7a9b      	ldrb	r3, [r3, #10]
 800191a:	039b      	lsls	r3, r3, #14
 800191c:	461a      	mov	r2, r3
 800191e:	68fb      	ldr	r3, [r7, #12]
 8001920:	4313      	orrs	r3, r2
 8001922:	60fb      	str	r3, [r7, #12]
		if(pI2CHandle->I2C_Config.I2C_FMDutyCycle == I2C_FM_DUTY_2)
 8001924:	687b      	ldr	r3, [r7, #4]
 8001926:	7a9b      	ldrb	r3, [r3, #10]
 8001928:	2b00      	cmp	r3, #0
 800192a:	d10b      	bne.n	8001944 <I2C_Init+0xdc>
		{
			ccr_value = (RCC_GetPCLK1Value() / ( 3 * pI2CHandle->I2C_Config.I2C_SCLSpeed ) );
 800192c:	f000 f972 	bl	8001c14 <RCC_GetPCLK1Value>
 8001930:	4601      	mov	r1, r0
 8001932:	687b      	ldr	r3, [r7, #4]
 8001934:	685a      	ldr	r2, [r3, #4]
 8001936:	4613      	mov	r3, r2
 8001938:	005b      	lsls	r3, r3, #1
 800193a:	4413      	add	r3, r2
 800193c:	fbb1 f3f3 	udiv	r3, r1, r3
 8001940:	817b      	strh	r3, [r7, #10]
 8001942:	e00c      	b.n	800195e <I2C_Init+0xf6>
		}else
		{
			ccr_value = (RCC_GetPCLK1Value() / ( 25 * pI2CHandle->I2C_Config.I2C_SCLSpeed ) );
 8001944:	f000 f966 	bl	8001c14 <RCC_GetPCLK1Value>
 8001948:	4601      	mov	r1, r0
 800194a:	687b      	ldr	r3, [r7, #4]
 800194c:	685a      	ldr	r2, [r3, #4]
 800194e:	4613      	mov	r3, r2
 8001950:	009b      	lsls	r3, r3, #2
 8001952:	4413      	add	r3, r2
 8001954:	009a      	lsls	r2, r3, #2
 8001956:	4413      	add	r3, r2
 8001958:	fbb1 f3f3 	udiv	r3, r1, r3
 800195c:	817b      	strh	r3, [r7, #10]
		}
		tempreg |= (ccr_value & 0xFFF);
 800195e:	897b      	ldrh	r3, [r7, #10]
 8001960:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8001964:	68fa      	ldr	r2, [r7, #12]
 8001966:	4313      	orrs	r3, r2
 8001968:	60fb      	str	r3, [r7, #12]
	}
	pI2CHandle->pI2Cx->CCR = tempreg;
 800196a:	687b      	ldr	r3, [r7, #4]
 800196c:	681b      	ldr	r3, [r3, #0]
 800196e:	68fa      	ldr	r2, [r7, #12]
 8001970:	61da      	str	r2, [r3, #28]

	//TRISE Configuration
	if(pI2CHandle->I2C_Config.I2C_SCLSpeed <= I2C_SCL_SPEED_SM)
 8001972:	687b      	ldr	r3, [r7, #4]
 8001974:	685b      	ldr	r3, [r3, #4]
 8001976:	4a13      	ldr	r2, [pc, #76]	; (80019c4 <I2C_Init+0x15c>)
 8001978:	4293      	cmp	r3, r2
 800197a:	d809      	bhi.n	8001990 <I2C_Init+0x128>
	{
		//mode is standard mode

		tempreg = (RCC_GetPCLK1Value() /1000000U) + 1 ;
 800197c:	f000 f94a 	bl	8001c14 <RCC_GetPCLK1Value>
 8001980:	4603      	mov	r3, r0
 8001982:	4a0f      	ldr	r2, [pc, #60]	; (80019c0 <I2C_Init+0x158>)
 8001984:	fba2 2303 	umull	r2, r3, r2, r3
 8001988:	0c9b      	lsrs	r3, r3, #18
 800198a:	3301      	adds	r3, #1
 800198c:	60fb      	str	r3, [r7, #12]
 800198e:	e00d      	b.n	80019ac <I2C_Init+0x144>

	}else
	{
		//mode is fast mode
		tempreg = ( (RCC_GetPCLK1Value() * 300) / 1000000000U ) + 1;
 8001990:	f000 f940 	bl	8001c14 <RCC_GetPCLK1Value>
 8001994:	4603      	mov	r3, r0
 8001996:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800199a:	fb02 f303 	mul.w	r3, r2, r3
 800199e:	0a5b      	lsrs	r3, r3, #9
 80019a0:	4a09      	ldr	r2, [pc, #36]	; (80019c8 <I2C_Init+0x160>)
 80019a2:	fba2 2303 	umull	r2, r3, r2, r3
 80019a6:	09db      	lsrs	r3, r3, #7
 80019a8:	3301      	adds	r3, #1
 80019aa:	60fb      	str	r3, [r7, #12]

	}

	pI2CHandle->pI2Cx->TRISE = (tempreg & 0x3F);
 80019ac:	687b      	ldr	r3, [r7, #4]
 80019ae:	681b      	ldr	r3, [r3, #0]
 80019b0:	68fa      	ldr	r2, [r7, #12]
 80019b2:	f002 023f 	and.w	r2, r2, #63	; 0x3f
 80019b6:	621a      	str	r2, [r3, #32]

}
 80019b8:	bf00      	nop
 80019ba:	3710      	adds	r7, #16
 80019bc:	46bd      	mov	sp, r7
 80019be:	bd80      	pop	{r7, pc}
 80019c0:	431bde83 	.word	0x431bde83
 80019c4:	000186a0 	.word	0x000186a0
 80019c8:	00044b83 	.word	0x00044b83

080019cc <I2C_GetFlagStatus>:

}


uint8_t I2C_GetFlagStatus(I2C_RegDef_t *pI2Cx , uint32_t FlagName)
{
 80019cc:	b480      	push	{r7}
 80019ce:	b083      	sub	sp, #12
 80019d0:	af00      	add	r7, sp, #0
 80019d2:	6078      	str	r0, [r7, #4]
 80019d4:	6039      	str	r1, [r7, #0]
	if(pI2Cx->SR1 & FlagName)
 80019d6:	687b      	ldr	r3, [r7, #4]
 80019d8:	695a      	ldr	r2, [r3, #20]
 80019da:	683b      	ldr	r3, [r7, #0]
 80019dc:	4013      	ands	r3, r2
 80019de:	2b00      	cmp	r3, #0
 80019e0:	d001      	beq.n	80019e6 <I2C_GetFlagStatus+0x1a>
	{
		return FLAG_SET;
 80019e2:	2301      	movs	r3, #1
 80019e4:	e000      	b.n	80019e8 <I2C_GetFlagStatus+0x1c>
	}
	return FLAG_RESET;
 80019e6:	2300      	movs	r3, #0
}
 80019e8:	4618      	mov	r0, r3
 80019ea:	370c      	adds	r7, #12
 80019ec:	46bd      	mov	sp, r7
 80019ee:	bc80      	pop	{r7}
 80019f0:	4770      	bx	lr

080019f2 <I2C_MasterSendData>:



void I2C_MasterSendData(I2C_Handle_t *pI2CHandle,uint8_t *pTxbuffer, uint32_t Len, uint8_t SlaveAddr,uint8_t Sr)
{
 80019f2:	b580      	push	{r7, lr}
 80019f4:	b084      	sub	sp, #16
 80019f6:	af00      	add	r7, sp, #0
 80019f8:	60f8      	str	r0, [r7, #12]
 80019fa:	60b9      	str	r1, [r7, #8]
 80019fc:	607a      	str	r2, [r7, #4]
 80019fe:	70fb      	strb	r3, [r7, #3]
	// 1. Generate the START condition
	I2C_GenerateStartCondition(pI2CHandle->pI2Cx);
 8001a00:	68fb      	ldr	r3, [r7, #12]
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	4618      	mov	r0, r3
 8001a06:	f7ff fe5f 	bl	80016c8 <I2C_GenerateStartCondition>

	//2. confirm that start generation is completed by checking the SB flag in the SR1
	//   Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while( !  I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_SB)   );
 8001a0a:	bf00      	nop
 8001a0c:	68fb      	ldr	r3, [r7, #12]
 8001a0e:	681b      	ldr	r3, [r3, #0]
 8001a10:	2101      	movs	r1, #1
 8001a12:	4618      	mov	r0, r3
 8001a14:	f7ff ffda 	bl	80019cc <I2C_GetFlagStatus>
 8001a18:	4603      	mov	r3, r0
 8001a1a:	2b00      	cmp	r3, #0
 8001a1c:	d0f6      	beq.n	8001a0c <I2C_MasterSendData+0x1a>

	//3. Send the address of the slave with r/nw bit set to w(0) (total 8 bits )
	I2C_ExecuteAddressPhaseWrite(pI2CHandle->pI2Cx,SlaveAddr);
 8001a1e:	68fb      	ldr	r3, [r7, #12]
 8001a20:	681b      	ldr	r3, [r3, #0]
 8001a22:	78fa      	ldrb	r2, [r7, #3]
 8001a24:	4611      	mov	r1, r2
 8001a26:	4618      	mov	r0, r3
 8001a28:	f7ff fe5d 	bl	80016e6 <I2C_ExecuteAddressPhaseWrite>

	//4. Confirm that address phase is completed by checking the ADDR flag in teh SR1
	while( !  I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_ADDR)   );
 8001a2c:	bf00      	nop
 8001a2e:	68fb      	ldr	r3, [r7, #12]
 8001a30:	681b      	ldr	r3, [r3, #0]
 8001a32:	2102      	movs	r1, #2
 8001a34:	4618      	mov	r0, r3
 8001a36:	f7ff ffc9 	bl	80019cc <I2C_GetFlagStatus>
 8001a3a:	4603      	mov	r3, r0
 8001a3c:	2b00      	cmp	r3, #0
 8001a3e:	d0f6      	beq.n	8001a2e <I2C_MasterSendData+0x3c>

	//5. clear the ADDR flag according to its software sequence
	//   Note: Until ADDR is cleared SCL will be stretched (pulled to LOW)
	I2C_ClearADDRFlag(pI2CHandle);
 8001a40:	68f8      	ldr	r0, [r7, #12]
 8001a42:	f7ff fe7a 	bl	800173a <I2C_ClearADDRFlag>

	//6. send the data until len becomes 0

	while(Len > 0)
 8001a46:	e014      	b.n	8001a72 <I2C_MasterSendData+0x80>
	{
		while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_TXE) ); //Wait till TXE is set
 8001a48:	bf00      	nop
 8001a4a:	68fb      	ldr	r3, [r7, #12]
 8001a4c:	681b      	ldr	r3, [r3, #0]
 8001a4e:	2180      	movs	r1, #128	; 0x80
 8001a50:	4618      	mov	r0, r3
 8001a52:	f7ff ffbb 	bl	80019cc <I2C_GetFlagStatus>
 8001a56:	4603      	mov	r3, r0
 8001a58:	2b00      	cmp	r3, #0
 8001a5a:	d0f6      	beq.n	8001a4a <I2C_MasterSendData+0x58>
		pI2CHandle->pI2Cx->DR = *pTxbuffer;
 8001a5c:	68bb      	ldr	r3, [r7, #8]
 8001a5e:	781a      	ldrb	r2, [r3, #0]
 8001a60:	68fb      	ldr	r3, [r7, #12]
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	611a      	str	r2, [r3, #16]
		pTxbuffer++;
 8001a66:	68bb      	ldr	r3, [r7, #8]
 8001a68:	3301      	adds	r3, #1
 8001a6a:	60bb      	str	r3, [r7, #8]
		Len--;
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	3b01      	subs	r3, #1
 8001a70:	607b      	str	r3, [r7, #4]
	while(Len > 0)
 8001a72:	687b      	ldr	r3, [r7, #4]
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	d1e7      	bne.n	8001a48 <I2C_MasterSendData+0x56>

	//7. when Len becomes zero wait for TXE=1 and BTF=1 before generating the STOP condition
	//   Note: TXE=1 , BTF=1 , means that both SR and DR are empty and next transmission should begin
	//   when BTF=1 SCL will be stretched (pulled to LOW)

	while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_TXE) );
 8001a78:	bf00      	nop
 8001a7a:	68fb      	ldr	r3, [r7, #12]
 8001a7c:	681b      	ldr	r3, [r3, #0]
 8001a7e:	2180      	movs	r1, #128	; 0x80
 8001a80:	4618      	mov	r0, r3
 8001a82:	f7ff ffa3 	bl	80019cc <I2C_GetFlagStatus>
 8001a86:	4603      	mov	r3, r0
 8001a88:	2b00      	cmp	r3, #0
 8001a8a:	d0f6      	beq.n	8001a7a <I2C_MasterSendData+0x88>

	while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_BTF) );
 8001a8c:	bf00      	nop
 8001a8e:	68fb      	ldr	r3, [r7, #12]
 8001a90:	681b      	ldr	r3, [r3, #0]
 8001a92:	2104      	movs	r1, #4
 8001a94:	4618      	mov	r0, r3
 8001a96:	f7ff ff99 	bl	80019cc <I2C_GetFlagStatus>
 8001a9a:	4603      	mov	r3, r0
 8001a9c:	2b00      	cmp	r3, #0
 8001a9e:	d0f6      	beq.n	8001a8e <I2C_MasterSendData+0x9c>


	//8. Generate STOP condition and master need not to wait for the completion of stop condition.
	//   Note: generating STOP, automatically clears the BTF
	if(Sr == I2C_DISABLE_SR )
 8001aa0:	7e3b      	ldrb	r3, [r7, #24]
 8001aa2:	2b00      	cmp	r3, #0
 8001aa4:	d104      	bne.n	8001ab0 <I2C_MasterSendData+0xbe>
		I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001aa6:	68fb      	ldr	r3, [r7, #12]
 8001aa8:	681b      	ldr	r3, [r3, #0]
 8001aaa:	4618      	mov	r0, r3
 8001aac:	f7ff fe7c 	bl	80017a8 <I2C_GenerateStopCondition>

}
 8001ab0:	bf00      	nop
 8001ab2:	3710      	adds	r7, #16
 8001ab4:	46bd      	mov	sp, r7
 8001ab6:	bd80      	pop	{r7, pc}

08001ab8 <I2C_MasterReceiveData>:


void I2C_MasterReceiveData(I2C_Handle_t *pI2CHandle,uint8_t *pRxBuffer, uint8_t Len, uint8_t SlaveAddr,uint8_t Sr)
{
 8001ab8:	b580      	push	{r7, lr}
 8001aba:	b086      	sub	sp, #24
 8001abc:	af00      	add	r7, sp, #0
 8001abe:	60f8      	str	r0, [r7, #12]
 8001ac0:	60b9      	str	r1, [r7, #8]
 8001ac2:	4611      	mov	r1, r2
 8001ac4:	461a      	mov	r2, r3
 8001ac6:	460b      	mov	r3, r1
 8001ac8:	71fb      	strb	r3, [r7, #7]
 8001aca:	4613      	mov	r3, r2
 8001acc:	71bb      	strb	r3, [r7, #6]

	//1. Generate the START condition
	I2C_GenerateStartCondition(pI2CHandle->pI2Cx);
 8001ace:	68fb      	ldr	r3, [r7, #12]
 8001ad0:	681b      	ldr	r3, [r3, #0]
 8001ad2:	4618      	mov	r0, r3
 8001ad4:	f7ff fdf8 	bl	80016c8 <I2C_GenerateStartCondition>

	//2. confirm that start generation is completed by checking the SB flag in the SR1
	//   Note: Until SB is cleared SCL will be stretched (pulled to LOW)
	while( !  I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_SB)   );
 8001ad8:	bf00      	nop
 8001ada:	68fb      	ldr	r3, [r7, #12]
 8001adc:	681b      	ldr	r3, [r3, #0]
 8001ade:	2101      	movs	r1, #1
 8001ae0:	4618      	mov	r0, r3
 8001ae2:	f7ff ff73 	bl	80019cc <I2C_GetFlagStatus>
 8001ae6:	4603      	mov	r3, r0
 8001ae8:	2b00      	cmp	r3, #0
 8001aea:	d0f6      	beq.n	8001ada <I2C_MasterReceiveData+0x22>

	//3. Send the address of the slave with r/nw bit set to R(1) (total 8 bits )
	I2C_ExecuteAddressPhaseRead(pI2CHandle->pI2Cx,SlaveAddr);
 8001aec:	68fb      	ldr	r3, [r7, #12]
 8001aee:	681b      	ldr	r3, [r3, #0]
 8001af0:	79ba      	ldrb	r2, [r7, #6]
 8001af2:	4611      	mov	r1, r2
 8001af4:	4618      	mov	r0, r3
 8001af6:	f7ff fe0b 	bl	8001710 <I2C_ExecuteAddressPhaseRead>

	//4. wait until address phase is completed by checking the ADDR flag in teh SR1
	while( !  I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_ADDR)   );
 8001afa:	bf00      	nop
 8001afc:	68fb      	ldr	r3, [r7, #12]
 8001afe:	681b      	ldr	r3, [r3, #0]
 8001b00:	2102      	movs	r1, #2
 8001b02:	4618      	mov	r0, r3
 8001b04:	f7ff ff62 	bl	80019cc <I2C_GetFlagStatus>
 8001b08:	4603      	mov	r3, r0
 8001b0a:	2b00      	cmp	r3, #0
 8001b0c:	d0f6      	beq.n	8001afc <I2C_MasterReceiveData+0x44>


	//procedure to read only 1 byte from slave
	if(Len == 1)
 8001b0e:	79fb      	ldrb	r3, [r7, #7]
 8001b10:	2b01      	cmp	r3, #1
 8001b12:	d121      	bne.n	8001b58 <I2C_MasterReceiveData+0xa0>
	{
		//Disable Acking
		I2C_ManageAcking(pI2CHandle->pI2Cx,I2C_ACK_DISABLE);
 8001b14:	68fb      	ldr	r3, [r7, #12]
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	2100      	movs	r1, #0
 8001b1a:	4618      	mov	r0, r3
 8001b1c:	f000 f85e 	bl	8001bdc <I2C_ManageAcking>


		//clear the ADDR flag
		I2C_ClearADDRFlag(pI2CHandle);
 8001b20:	68f8      	ldr	r0, [r7, #12]
 8001b22:	f7ff fe0a 	bl	800173a <I2C_ClearADDRFlag>

		//wait until  RXNE becomes 1
		while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_RXNE) );
 8001b26:	bf00      	nop
 8001b28:	68fb      	ldr	r3, [r7, #12]
 8001b2a:	681b      	ldr	r3, [r3, #0]
 8001b2c:	2140      	movs	r1, #64	; 0x40
 8001b2e:	4618      	mov	r0, r3
 8001b30:	f7ff ff4c 	bl	80019cc <I2C_GetFlagStatus>
 8001b34:	4603      	mov	r3, r0
 8001b36:	2b00      	cmp	r3, #0
 8001b38:	d0f6      	beq.n	8001b28 <I2C_MasterReceiveData+0x70>

		//generate STOP condition
		if(Sr == I2C_DISABLE_SR )
 8001b3a:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001b3e:	2b00      	cmp	r3, #0
 8001b40:	d104      	bne.n	8001b4c <I2C_MasterReceiveData+0x94>
			I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001b42:	68fb      	ldr	r3, [r7, #12]
 8001b44:	681b      	ldr	r3, [r3, #0]
 8001b46:	4618      	mov	r0, r3
 8001b48:	f7ff fe2e 	bl	80017a8 <I2C_GenerateStopCondition>

		//read data in to buffer
		*pRxBuffer = pI2CHandle->pI2Cx->DR;
 8001b4c:	68fb      	ldr	r3, [r7, #12]
 8001b4e:	681b      	ldr	r3, [r3, #0]
 8001b50:	691b      	ldr	r3, [r3, #16]
 8001b52:	b2da      	uxtb	r2, r3
 8001b54:	68bb      	ldr	r3, [r7, #8]
 8001b56:	701a      	strb	r2, [r3, #0]

	}


    //procedure to read data from slave when Len > 1
	if(Len > 1)
 8001b58:	79fb      	ldrb	r3, [r7, #7]
 8001b5a:	2b01      	cmp	r3, #1
 8001b5c:	d930      	bls.n	8001bc0 <I2C_MasterReceiveData+0x108>
	{
		//clear the ADDR flag
		I2C_ClearADDRFlag(pI2CHandle);
 8001b5e:	68f8      	ldr	r0, [r7, #12]
 8001b60:	f7ff fdeb 	bl	800173a <I2C_ClearADDRFlag>

		//read the data until Len becomes zero
		for ( uint32_t i = Len ; i > 0 ; i--)
 8001b64:	79fb      	ldrb	r3, [r7, #7]
 8001b66:	617b      	str	r3, [r7, #20]
 8001b68:	e027      	b.n	8001bba <I2C_MasterReceiveData+0x102>
		{
			//wait until RXNE becomes 1
			while(! I2C_GetFlagStatus(pI2CHandle->pI2Cx,I2C_FLAG_RXNE) );
 8001b6a:	bf00      	nop
 8001b6c:	68fb      	ldr	r3, [r7, #12]
 8001b6e:	681b      	ldr	r3, [r3, #0]
 8001b70:	2140      	movs	r1, #64	; 0x40
 8001b72:	4618      	mov	r0, r3
 8001b74:	f7ff ff2a 	bl	80019cc <I2C_GetFlagStatus>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d0f6      	beq.n	8001b6c <I2C_MasterReceiveData+0xb4>

			if(i == 2) //if last 2 bytes are remaining
 8001b7e:	697b      	ldr	r3, [r7, #20]
 8001b80:	2b02      	cmp	r3, #2
 8001b82:	d10e      	bne.n	8001ba2 <I2C_MasterReceiveData+0xea>
			{
				//Disable Acking
				I2C_ManageAcking(pI2CHandle->pI2Cx,I2C_ACK_DISABLE);
 8001b84:	68fb      	ldr	r3, [r7, #12]
 8001b86:	681b      	ldr	r3, [r3, #0]
 8001b88:	2100      	movs	r1, #0
 8001b8a:	4618      	mov	r0, r3
 8001b8c:	f000 f826 	bl	8001bdc <I2C_ManageAcking>

				//generate STOP condition
				if(Sr == I2C_DISABLE_SR )
 8001b90:	f897 3020 	ldrb.w	r3, [r7, #32]
 8001b94:	2b00      	cmp	r3, #0
 8001b96:	d104      	bne.n	8001ba2 <I2C_MasterReceiveData+0xea>
					I2C_GenerateStopCondition(pI2CHandle->pI2Cx);
 8001b98:	68fb      	ldr	r3, [r7, #12]
 8001b9a:	681b      	ldr	r3, [r3, #0]
 8001b9c:	4618      	mov	r0, r3
 8001b9e:	f7ff fe03 	bl	80017a8 <I2C_GenerateStopCondition>

			}

			//read the data from data register in to buffer
			*pRxBuffer = pI2CHandle->pI2Cx->DR;
 8001ba2:	68fb      	ldr	r3, [r7, #12]
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	691b      	ldr	r3, [r3, #16]
 8001ba8:	b2da      	uxtb	r2, r3
 8001baa:	68bb      	ldr	r3, [r7, #8]
 8001bac:	701a      	strb	r2, [r3, #0]

			//increment the buffer address
			pRxBuffer++;
 8001bae:	68bb      	ldr	r3, [r7, #8]
 8001bb0:	3301      	adds	r3, #1
 8001bb2:	60bb      	str	r3, [r7, #8]
		for ( uint32_t i = Len ; i > 0 ; i--)
 8001bb4:	697b      	ldr	r3, [r7, #20]
 8001bb6:	3b01      	subs	r3, #1
 8001bb8:	617b      	str	r3, [r7, #20]
 8001bba:	697b      	ldr	r3, [r7, #20]
 8001bbc:	2b00      	cmp	r3, #0
 8001bbe:	d1d4      	bne.n	8001b6a <I2C_MasterReceiveData+0xb2>
		}

	}

	//re-enable ACKing
	if(pI2CHandle->I2C_Config.I2C_AckControl == I2C_ACK_ENABLE)
 8001bc0:	68fb      	ldr	r3, [r7, #12]
 8001bc2:	7a5b      	ldrb	r3, [r3, #9]
 8001bc4:	2b01      	cmp	r3, #1
 8001bc6:	d105      	bne.n	8001bd4 <I2C_MasterReceiveData+0x11c>
	{
		I2C_ManageAcking(pI2CHandle->pI2Cx,I2C_ACK_ENABLE);
 8001bc8:	68fb      	ldr	r3, [r7, #12]
 8001bca:	681b      	ldr	r3, [r3, #0]
 8001bcc:	2101      	movs	r1, #1
 8001bce:	4618      	mov	r0, r3
 8001bd0:	f000 f804 	bl	8001bdc <I2C_ManageAcking>
	}

}
 8001bd4:	bf00      	nop
 8001bd6:	3718      	adds	r7, #24
 8001bd8:	46bd      	mov	sp, r7
 8001bda:	bd80      	pop	{r7, pc}

08001bdc <I2C_ManageAcking>:


void I2C_ManageAcking(I2C_RegDef_t *pI2Cx, uint8_t EnorDi)
{
 8001bdc:	b480      	push	{r7}
 8001bde:	b083      	sub	sp, #12
 8001be0:	af00      	add	r7, sp, #0
 8001be2:	6078      	str	r0, [r7, #4]
 8001be4:	460b      	mov	r3, r1
 8001be6:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == I2C_ACK_ENABLE)
 8001be8:	78fb      	ldrb	r3, [r7, #3]
 8001bea:	2b01      	cmp	r3, #1
 8001bec:	d106      	bne.n	8001bfc <I2C_ManageAcking+0x20>
	{
		//enable the ack
		pI2Cx->CR1 |= ( 1 << I2C_CR1_ACK);
 8001bee:	687b      	ldr	r3, [r7, #4]
 8001bf0:	681b      	ldr	r3, [r3, #0]
 8001bf2:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 8001bf6:	687b      	ldr	r3, [r7, #4]
 8001bf8:	601a      	str	r2, [r3, #0]
	}else
	{
		//disable the ack
		pI2Cx->CR1 &= ~( 1 << I2C_CR1_ACK);
	}
}
 8001bfa:	e005      	b.n	8001c08 <I2C_ManageAcking+0x2c>
		pI2Cx->CR1 &= ~( 1 << I2C_CR1_ACK);
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	601a      	str	r2, [r3, #0]
}
 8001c08:	bf00      	nop
 8001c0a:	370c      	adds	r7, #12
 8001c0c:	46bd      	mov	sp, r7
 8001c0e:	bc80      	pop	{r7}
 8001c10:	4770      	bx	lr
	...

08001c14 <RCC_GetPCLK1Value>:
uint8_t APB1_PreScaler[4] = { 2, 4 , 8, 16};



uint32_t RCC_GetPCLK1Value(void)
{
 8001c14:	b580      	push	{r7, lr}
 8001c16:	b084      	sub	sp, #16
 8001c18:	af00      	add	r7, sp, #0
	uint32_t pclk1,SystemClk;

	uint8_t clksrc,temp,ahbp,apb1p;

	clksrc = ((RCC->CFGR >> 2) & 0x3);
 8001c1a:	4b25      	ldr	r3, [pc, #148]	; (8001cb0 <RCC_GetPCLK1Value+0x9c>)
 8001c1c:	689b      	ldr	r3, [r3, #8]
 8001c1e:	089b      	lsrs	r3, r3, #2
 8001c20:	b2db      	uxtb	r3, r3
 8001c22:	f003 0303 	and.w	r3, r3, #3
 8001c26:	727b      	strb	r3, [r7, #9]

	if(clksrc == 0 )
 8001c28:	7a7b      	ldrb	r3, [r7, #9]
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	d102      	bne.n	8001c34 <RCC_GetPCLK1Value+0x20>
	{
		SystemClk = 16000000;
 8001c2e:	4b21      	ldr	r3, [pc, #132]	; (8001cb4 <RCC_GetPCLK1Value+0xa0>)
 8001c30:	60fb      	str	r3, [r7, #12]
 8001c32:	e00b      	b.n	8001c4c <RCC_GetPCLK1Value+0x38>
	}else if(clksrc == 1)
 8001c34:	7a7b      	ldrb	r3, [r7, #9]
 8001c36:	2b01      	cmp	r3, #1
 8001c38:	d102      	bne.n	8001c40 <RCC_GetPCLK1Value+0x2c>
	{
		SystemClk = 8000000;
 8001c3a:	4b1f      	ldr	r3, [pc, #124]	; (8001cb8 <RCC_GetPCLK1Value+0xa4>)
 8001c3c:	60fb      	str	r3, [r7, #12]
 8001c3e:	e005      	b.n	8001c4c <RCC_GetPCLK1Value+0x38>
	}else if (clksrc == 2)
 8001c40:	7a7b      	ldrb	r3, [r7, #9]
 8001c42:	2b02      	cmp	r3, #2
 8001c44:	d102      	bne.n	8001c4c <RCC_GetPCLK1Value+0x38>
	{
		SystemClk = RCC_GetPLLOutputClock();
 8001c46:	f000 f83d 	bl	8001cc4 <RCC_GetPLLOutputClock>
 8001c4a:	60f8      	str	r0, [r7, #12]
	}

	//for ahb
	temp = ((RCC->CFGR >> 4 ) & 0xF);
 8001c4c:	4b18      	ldr	r3, [pc, #96]	; (8001cb0 <RCC_GetPCLK1Value+0x9c>)
 8001c4e:	689b      	ldr	r3, [r3, #8]
 8001c50:	091b      	lsrs	r3, r3, #4
 8001c52:	b2db      	uxtb	r3, r3
 8001c54:	f003 030f 	and.w	r3, r3, #15
 8001c58:	723b      	strb	r3, [r7, #8]

	if(temp < 8)
 8001c5a:	7a3b      	ldrb	r3, [r7, #8]
 8001c5c:	2b07      	cmp	r3, #7
 8001c5e:	d802      	bhi.n	8001c66 <RCC_GetPCLK1Value+0x52>
	{
		ahbp = 1;
 8001c60:	2301      	movs	r3, #1
 8001c62:	72fb      	strb	r3, [r7, #11]
 8001c64:	e005      	b.n	8001c72 <RCC_GetPCLK1Value+0x5e>
	}else
	{
		ahbp = AHB_PreScaler[temp-8];
 8001c66:	7a3b      	ldrb	r3, [r7, #8]
 8001c68:	3b08      	subs	r3, #8
 8001c6a:	4a14      	ldr	r2, [pc, #80]	; (8001cbc <RCC_GetPCLK1Value+0xa8>)
 8001c6c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8001c70:	72fb      	strb	r3, [r7, #11]
	}



	//apb1
	temp = ((RCC->CFGR >> 10 ) & 0x7);
 8001c72:	4b0f      	ldr	r3, [pc, #60]	; (8001cb0 <RCC_GetPCLK1Value+0x9c>)
 8001c74:	689b      	ldr	r3, [r3, #8]
 8001c76:	0a9b      	lsrs	r3, r3, #10
 8001c78:	b2db      	uxtb	r3, r3
 8001c7a:	f003 0307 	and.w	r3, r3, #7
 8001c7e:	723b      	strb	r3, [r7, #8]

	if(temp < 4)
 8001c80:	7a3b      	ldrb	r3, [r7, #8]
 8001c82:	2b03      	cmp	r3, #3
 8001c84:	d802      	bhi.n	8001c8c <RCC_GetPCLK1Value+0x78>
	{
		apb1p = 1;
 8001c86:	2301      	movs	r3, #1
 8001c88:	72bb      	strb	r3, [r7, #10]
 8001c8a:	e004      	b.n	8001c96 <RCC_GetPCLK1Value+0x82>
	}else
	{
		apb1p = APB1_PreScaler[temp-4];
 8001c8c:	7a3b      	ldrb	r3, [r7, #8]
 8001c8e:	3b04      	subs	r3, #4
 8001c90:	4a0b      	ldr	r2, [pc, #44]	; (8001cc0 <RCC_GetPCLK1Value+0xac>)
 8001c92:	5cd3      	ldrb	r3, [r2, r3]
 8001c94:	72bb      	strb	r3, [r7, #10]
	}

	pclk1 =  (SystemClk / ahbp) /apb1p;
 8001c96:	7afb      	ldrb	r3, [r7, #11]
 8001c98:	68fa      	ldr	r2, [r7, #12]
 8001c9a:	fbb2 f2f3 	udiv	r2, r2, r3
 8001c9e:	7abb      	ldrb	r3, [r7, #10]
 8001ca0:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ca4:	607b      	str	r3, [r7, #4]

	return pclk1;
 8001ca6:	687b      	ldr	r3, [r7, #4]
}
 8001ca8:	4618      	mov	r0, r3
 8001caa:	3710      	adds	r7, #16
 8001cac:	46bd      	mov	sp, r7
 8001cae:	bd80      	pop	{r7, pc}
 8001cb0:	40023800 	.word	0x40023800
 8001cb4:	00f42400 	.word	0x00f42400
 8001cb8:	007a1200 	.word	0x007a1200
 8001cbc:	20000000 	.word	0x20000000
 8001cc0:	20000010 	.word	0x20000010

08001cc4 <RCC_GetPLLOutputClock>:

	return pclk2;
}

uint32_t  RCC_GetPLLOutputClock()
{
 8001cc4:	b480      	push	{r7}
 8001cc6:	af00      	add	r7, sp, #0

	return 0;
 8001cc8:	2300      	movs	r3, #0
}
 8001cca:	4618      	mov	r0, r3
 8001ccc:	46bd      	mov	sp, r7
 8001cce:	bc80      	pop	{r7}
 8001cd0:	4770      	bx	lr
	...

08001cd4 <init_systick_timer>:
/* Enable this macro if you want to test RTC on LCD */
//#define PRINT_LCD


void init_systick_timer(uint32_t tick_hz)
{
 8001cd4:	b480      	push	{r7}
 8001cd6:	b087      	sub	sp, #28
 8001cd8:	af00      	add	r7, sp, #0
 8001cda:	6078      	str	r0, [r7, #4]
	uint32_t *pSRVR = (uint32_t*)0xE000E014;
 8001cdc:	4b14      	ldr	r3, [pc, #80]	; (8001d30 <init_systick_timer+0x5c>)
 8001cde:	617b      	str	r3, [r7, #20]
	uint32_t *pSCSR = (uint32_t*)0xE000E010;
 8001ce0:	4b14      	ldr	r3, [pc, #80]	; (8001d34 <init_systick_timer+0x60>)
 8001ce2:	613b      	str	r3, [r7, #16]

    /* calculation of reload value */
    uint32_t count_value = (SYSTICK_TIM_CLK/tick_hz)-1;
 8001ce4:	4a14      	ldr	r2, [pc, #80]	; (8001d38 <init_systick_timer+0x64>)
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cec:	3b01      	subs	r3, #1
 8001cee:	60fb      	str	r3, [r7, #12]

    //Clear the value of SVR
    *pSRVR &= ~(0x00FFFFFFFF);
 8001cf0:	697b      	ldr	r3, [r7, #20]
 8001cf2:	2200      	movs	r2, #0
 8001cf4:	601a      	str	r2, [r3, #0]

    //load the value in to SVR
    *pSRVR |= count_value;
 8001cf6:	697b      	ldr	r3, [r7, #20]
 8001cf8:	681a      	ldr	r2, [r3, #0]
 8001cfa:	68fb      	ldr	r3, [r7, #12]
 8001cfc:	431a      	orrs	r2, r3
 8001cfe:	697b      	ldr	r3, [r7, #20]
 8001d00:	601a      	str	r2, [r3, #0]

    //do some settings
    *pSCSR |= ( 1 << 1); //Enables SysTick exception request:
 8001d02:	693b      	ldr	r3, [r7, #16]
 8001d04:	681b      	ldr	r3, [r3, #0]
 8001d06:	f043 0202 	orr.w	r2, r3, #2
 8001d0a:	693b      	ldr	r3, [r7, #16]
 8001d0c:	601a      	str	r2, [r3, #0]
    *pSCSR |= ( 1 << 2);  //Indicates the clock source, processor clock source
 8001d0e:	693b      	ldr	r3, [r7, #16]
 8001d10:	681b      	ldr	r3, [r3, #0]
 8001d12:	f043 0204 	orr.w	r2, r3, #4
 8001d16:	693b      	ldr	r3, [r7, #16]
 8001d18:	601a      	str	r2, [r3, #0]

    //enable the systick
    *pSCSR |= ( 1 << 0); //enables the counter
 8001d1a:	693b      	ldr	r3, [r7, #16]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	f043 0201 	orr.w	r2, r3, #1
 8001d22:	693b      	ldr	r3, [r7, #16]
 8001d24:	601a      	str	r2, [r3, #0]

}
 8001d26:	bf00      	nop
 8001d28:	371c      	adds	r7, #28
 8001d2a:	46bd      	mov	sp, r7
 8001d2c:	bc80      	pop	{r7}
 8001d2e:	4770      	bx	lr
 8001d30:	e000e014 	.word	0xe000e014
 8001d34:	e000e010 	.word	0xe000e010
 8001d38:	00f42400 	.word	0x00f42400

08001d3c <get_day_of_week>:


char* get_day_of_week(uint8_t i)
{
 8001d3c:	b4b0      	push	{r4, r5, r7}
 8001d3e:	b08b      	sub	sp, #44	; 0x2c
 8001d40:	af00      	add	r7, sp, #0
 8001d42:	4603      	mov	r3, r0
 8001d44:	71fb      	strb	r3, [r7, #7]
	char* days[] = { "Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"};
 8001d46:	4b0b      	ldr	r3, [pc, #44]	; (8001d74 <get_day_of_week+0x38>)
 8001d48:	f107 040c 	add.w	r4, r7, #12
 8001d4c:	461d      	mov	r5, r3
 8001d4e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001d50:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001d52:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8001d56:	e884 0007 	stmia.w	r4, {r0, r1, r2}

	return days[i-1];
 8001d5a:	79fb      	ldrb	r3, [r7, #7]
 8001d5c:	3b01      	subs	r3, #1
 8001d5e:	009b      	lsls	r3, r3, #2
 8001d60:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001d64:	4413      	add	r3, r2
 8001d66:	f853 3c1c 	ldr.w	r3, [r3, #-28]
}
 8001d6a:	4618      	mov	r0, r3
 8001d6c:	372c      	adds	r7, #44	; 0x2c
 8001d6e:	46bd      	mov	sp, r7
 8001d70:	bcb0      	pop	{r4, r5, r7}
 8001d72:	4770      	bx	lr
 8001d74:	08007194 	.word	0x08007194

08001d78 <number_to_string>:


void number_to_string(uint8_t num , char* buf)
{
 8001d78:	b480      	push	{r7}
 8001d7a:	b083      	sub	sp, #12
 8001d7c:	af00      	add	r7, sp, #0
 8001d7e:	4603      	mov	r3, r0
 8001d80:	6039      	str	r1, [r7, #0]
 8001d82:	71fb      	strb	r3, [r7, #7]

	if(num < 10){
 8001d84:	79fb      	ldrb	r3, [r7, #7]
 8001d86:	2b09      	cmp	r3, #9
 8001d88:	d809      	bhi.n	8001d9e <number_to_string+0x26>
		buf[0] = '0';
 8001d8a:	683b      	ldr	r3, [r7, #0]
 8001d8c:	2230      	movs	r2, #48	; 0x30
 8001d8e:	701a      	strb	r2, [r3, #0]
		buf[1] = num+48;
 8001d90:	683b      	ldr	r3, [r7, #0]
 8001d92:	3301      	adds	r3, #1
 8001d94:	79fa      	ldrb	r2, [r7, #7]
 8001d96:	3230      	adds	r2, #48	; 0x30
 8001d98:	b2d2      	uxtb	r2, r2
 8001d9a:	701a      	strb	r2, [r3, #0]
	}else if(num >= 10 && num < 99)
	{
		buf[0] = (num/10) + 48;
		buf[1]= (num % 10) + 48;
	}
}
 8001d9c:	e01f      	b.n	8001dde <number_to_string+0x66>
	}else if(num >= 10 && num < 99)
 8001d9e:	79fb      	ldrb	r3, [r7, #7]
 8001da0:	2b09      	cmp	r3, #9
 8001da2:	d91c      	bls.n	8001dde <number_to_string+0x66>
 8001da4:	79fb      	ldrb	r3, [r7, #7]
 8001da6:	2b62      	cmp	r3, #98	; 0x62
 8001da8:	d819      	bhi.n	8001dde <number_to_string+0x66>
		buf[0] = (num/10) + 48;
 8001daa:	79fb      	ldrb	r3, [r7, #7]
 8001dac:	4a0e      	ldr	r2, [pc, #56]	; (8001de8 <number_to_string+0x70>)
 8001dae:	fba2 2303 	umull	r2, r3, r2, r3
 8001db2:	08db      	lsrs	r3, r3, #3
 8001db4:	b2db      	uxtb	r3, r3
 8001db6:	3330      	adds	r3, #48	; 0x30
 8001db8:	b2da      	uxtb	r2, r3
 8001dba:	683b      	ldr	r3, [r7, #0]
 8001dbc:	701a      	strb	r2, [r3, #0]
		buf[1]= (num % 10) + 48;
 8001dbe:	79fa      	ldrb	r2, [r7, #7]
 8001dc0:	4b09      	ldr	r3, [pc, #36]	; (8001de8 <number_to_string+0x70>)
 8001dc2:	fba3 1302 	umull	r1, r3, r3, r2
 8001dc6:	08d9      	lsrs	r1, r3, #3
 8001dc8:	460b      	mov	r3, r1
 8001dca:	009b      	lsls	r3, r3, #2
 8001dcc:	440b      	add	r3, r1
 8001dce:	005b      	lsls	r3, r3, #1
 8001dd0:	1ad3      	subs	r3, r2, r3
 8001dd2:	b2da      	uxtb	r2, r3
 8001dd4:	683b      	ldr	r3, [r7, #0]
 8001dd6:	3301      	adds	r3, #1
 8001dd8:	3230      	adds	r2, #48	; 0x30
 8001dda:	b2d2      	uxtb	r2, r2
 8001ddc:	701a      	strb	r2, [r3, #0]
}
 8001dde:	bf00      	nop
 8001de0:	370c      	adds	r7, #12
 8001de2:	46bd      	mov	sp, r7
 8001de4:	bc80      	pop	{r7}
 8001de6:	4770      	bx	lr
 8001de8:	cccccccd 	.word	0xcccccccd

08001dec <time_to_string>:



//hh:mm:ss
char* time_to_string(RTC_time_t *rtc_time)
{
 8001dec:	b580      	push	{r7, lr}
 8001dee:	b082      	sub	sp, #8
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	6078      	str	r0, [r7, #4]
	static char buf[9];

	buf[2]= ':';
 8001df4:	4b0f      	ldr	r3, [pc, #60]	; (8001e34 <time_to_string+0x48>)
 8001df6:	223a      	movs	r2, #58	; 0x3a
 8001df8:	709a      	strb	r2, [r3, #2]
	buf[5]= ':';
 8001dfa:	4b0e      	ldr	r3, [pc, #56]	; (8001e34 <time_to_string+0x48>)
 8001dfc:	223a      	movs	r2, #58	; 0x3a
 8001dfe:	715a      	strb	r2, [r3, #5]

	number_to_string(rtc_time->hours,buf);
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	789b      	ldrb	r3, [r3, #2]
 8001e04:	490b      	ldr	r1, [pc, #44]	; (8001e34 <time_to_string+0x48>)
 8001e06:	4618      	mov	r0, r3
 8001e08:	f7ff ffb6 	bl	8001d78 <number_to_string>
	number_to_string(rtc_time->minutes,&buf[3]);
 8001e0c:	687b      	ldr	r3, [r7, #4]
 8001e0e:	785b      	ldrb	r3, [r3, #1]
 8001e10:	4909      	ldr	r1, [pc, #36]	; (8001e38 <time_to_string+0x4c>)
 8001e12:	4618      	mov	r0, r3
 8001e14:	f7ff ffb0 	bl	8001d78 <number_to_string>
	number_to_string(rtc_time->seconds,&buf[6]);
 8001e18:	687b      	ldr	r3, [r7, #4]
 8001e1a:	781b      	ldrb	r3, [r3, #0]
 8001e1c:	4907      	ldr	r1, [pc, #28]	; (8001e3c <time_to_string+0x50>)
 8001e1e:	4618      	mov	r0, r3
 8001e20:	f7ff ffaa 	bl	8001d78 <number_to_string>

	buf[8] = '\0';
 8001e24:	4b03      	ldr	r3, [pc, #12]	; (8001e34 <time_to_string+0x48>)
 8001e26:	2200      	movs	r2, #0
 8001e28:	721a      	strb	r2, [r3, #8]

	return buf;
 8001e2a:	4b02      	ldr	r3, [pc, #8]	; (8001e34 <time_to_string+0x48>)

}
 8001e2c:	4618      	mov	r0, r3
 8001e2e:	3708      	adds	r7, #8
 8001e30:	46bd      	mov	sp, r7
 8001e32:	bd80      	pop	{r7, pc}
 8001e34:	200009e4 	.word	0x200009e4
 8001e38:	200009e7 	.word	0x200009e7
 8001e3c:	200009ea 	.word	0x200009ea

08001e40 <date_to_string>:

//dd/mm/yy
char* date_to_string(RTC_date_t *rtc_date)
{
 8001e40:	b580      	push	{r7, lr}
 8001e42:	b082      	sub	sp, #8
 8001e44:	af00      	add	r7, sp, #0
 8001e46:	6078      	str	r0, [r7, #4]
	static char buf[9];

	buf[2]= '/';
 8001e48:	4b0f      	ldr	r3, [pc, #60]	; (8001e88 <date_to_string+0x48>)
 8001e4a:	222f      	movs	r2, #47	; 0x2f
 8001e4c:	709a      	strb	r2, [r3, #2]
	buf[5]= '/';
 8001e4e:	4b0e      	ldr	r3, [pc, #56]	; (8001e88 <date_to_string+0x48>)
 8001e50:	222f      	movs	r2, #47	; 0x2f
 8001e52:	715a      	strb	r2, [r3, #5]

	number_to_string(rtc_date->date,buf);
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	781b      	ldrb	r3, [r3, #0]
 8001e58:	490b      	ldr	r1, [pc, #44]	; (8001e88 <date_to_string+0x48>)
 8001e5a:	4618      	mov	r0, r3
 8001e5c:	f7ff ff8c 	bl	8001d78 <number_to_string>
	number_to_string(rtc_date->month,&buf[3]);
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	785b      	ldrb	r3, [r3, #1]
 8001e64:	4909      	ldr	r1, [pc, #36]	; (8001e8c <date_to_string+0x4c>)
 8001e66:	4618      	mov	r0, r3
 8001e68:	f7ff ff86 	bl	8001d78 <number_to_string>
	number_to_string(rtc_date->year,&buf[6]);
 8001e6c:	687b      	ldr	r3, [r7, #4]
 8001e6e:	789b      	ldrb	r3, [r3, #2]
 8001e70:	4907      	ldr	r1, [pc, #28]	; (8001e90 <date_to_string+0x50>)
 8001e72:	4618      	mov	r0, r3
 8001e74:	f7ff ff80 	bl	8001d78 <number_to_string>

	buf[8]= '\0';
 8001e78:	4b03      	ldr	r3, [pc, #12]	; (8001e88 <date_to_string+0x48>)
 8001e7a:	2200      	movs	r2, #0
 8001e7c:	721a      	strb	r2, [r3, #8]

	return buf;
 8001e7e:	4b02      	ldr	r3, [pc, #8]	; (8001e88 <date_to_string+0x48>)

}
 8001e80:	4618      	mov	r0, r3
 8001e82:	3708      	adds	r7, #8
 8001e84:	46bd      	mov	sp, r7
 8001e86:	bd80      	pop	{r7, pc}
 8001e88:	200009f0 	.word	0x200009f0
 8001e8c:	200009f3 	.word	0x200009f3
 8001e90:	200009f6 	.word	0x200009f6

08001e94 <main>:
}

extern void initialise_monitor_handles(void);//////

int main(void)
{
 8001e94:	b590      	push	{r4, r7, lr}
 8001e96:	b085      	sub	sp, #20
 8001e98:	af00      	add	r7, sp, #0
	/* semihosting test*/
	initialise_monitor_handles();
 8001e9a:	f005 f8a7 	bl	8006fec <initialise_monitor_handles>

	RTC_time_t current_time;
	RTC_date_t current_date;

#ifndef PRINT_LCD
	printf("RTC test\n");
 8001e9e:	4836      	ldr	r0, [pc, #216]	; (8001f78 <main+0xe4>)
 8001ea0:	f000 f9ac 	bl	80021fc <puts>

	lcd_display_clear();
	lcd_display_return_home();
#endif

	if(ds1307_init()){
 8001ea4:	f7ff f80a 	bl	8000ebc <ds1307_init>
 8001ea8:	4603      	mov	r3, r0
 8001eaa:	2b00      	cmp	r3, #0
 8001eac:	d00e      	beq.n	8001ecc <main+0x38>
		printf("RTC init has failed\n");
 8001eae:	4833      	ldr	r0, [pc, #204]	; (8001f7c <main+0xe8>)
 8001eb0:	f000 f9a4 	bl	80021fc <puts>
		printf("RTC init has failed\n");
 8001eb4:	4831      	ldr	r0, [pc, #196]	; (8001f7c <main+0xe8>)
 8001eb6:	f000 f9a1 	bl	80021fc <puts>
		printf("RTC init has failed\n");
 8001eba:	4830      	ldr	r0, [pc, #192]	; (8001f7c <main+0xe8>)
 8001ebc:	f000 f99e 	bl	80021fc <puts>
		printf("RTC init has failed\n");
 8001ec0:	482e      	ldr	r0, [pc, #184]	; (8001f7c <main+0xe8>)
 8001ec2:	f000 f99b 	bl	80021fc <puts>
		printf("RTC init has failed\n");
 8001ec6:	482d      	ldr	r0, [pc, #180]	; (8001f7c <main+0xe8>)
 8001ec8:	f000 f998 	bl	80021fc <puts>
		//while(1);
	}

	init_systick_timer(1);
 8001ecc:	2001      	movs	r0, #1
 8001ece:	f7ff ff01 	bl	8001cd4 <init_systick_timer>

	current_date.day = FRIDAY;
 8001ed2:	2306      	movs	r3, #6
 8001ed4:	71fb      	strb	r3, [r7, #7]
	current_date.date = 15;
 8001ed6:	230f      	movs	r3, #15
 8001ed8:	713b      	strb	r3, [r7, #4]
	current_date.month = 1;
 8001eda:	2301      	movs	r3, #1
 8001edc:	717b      	strb	r3, [r7, #5]
	current_date.year = 21;
 8001ede:	2315      	movs	r3, #21
 8001ee0:	71bb      	strb	r3, [r7, #6]

	current_time.hours = 11;
 8001ee2:	230b      	movs	r3, #11
 8001ee4:	72bb      	strb	r3, [r7, #10]
	current_time.minutes = 59;
 8001ee6:	233b      	movs	r3, #59	; 0x3b
 8001ee8:	727b      	strb	r3, [r7, #9]
	current_time.seconds = 30;
 8001eea:	231e      	movs	r3, #30
 8001eec:	723b      	strb	r3, [r7, #8]
	current_time.time_format = TIME_FORMAT_12HRS_PM;
 8001eee:	2301      	movs	r3, #1
 8001ef0:	72fb      	strb	r3, [r7, #11]

	ds1307_set_current_date(&current_date);
 8001ef2:	1d3b      	adds	r3, r7, #4
 8001ef4:	4618      	mov	r0, r3
 8001ef6:	f7ff f848 	bl	8000f8a <ds1307_set_current_date>
	ds1307_set_current_time(&current_time);
 8001efa:	f107 0308 	add.w	r3, r7, #8
 8001efe:	4618      	mov	r0, r3
 8001f00:	f7fe fffa 	bl	8000ef8 <ds1307_set_current_time>

	ds1307_get_current_time(&current_time);
 8001f04:	f107 0308 	add.w	r3, r7, #8
 8001f08:	4618      	mov	r0, r3
 8001f0a:	f7ff f86e 	bl	8000fea <ds1307_get_current_time>
	ds1307_get_current_date(&current_date);
 8001f0e:	1d3b      	adds	r3, r7, #4
 8001f10:	4618      	mov	r0, r3
 8001f12:	f7ff f8b3 	bl	800107c <ds1307_get_current_date>

	char *am_pm;
	if(current_time.time_format != TIME_FORMAT_24HRS){
 8001f16:	7afb      	ldrb	r3, [r7, #11]
 8001f18:	2b02      	cmp	r3, #2
 8001f1a:	d012      	beq.n	8001f42 <main+0xae>
		am_pm = (current_time.time_format) ? "PM" : "AM";
 8001f1c:	7afb      	ldrb	r3, [r7, #11]
 8001f1e:	2b00      	cmp	r3, #0
 8001f20:	d001      	beq.n	8001f26 <main+0x92>
 8001f22:	4b17      	ldr	r3, [pc, #92]	; (8001f80 <main+0xec>)
 8001f24:	e000      	b.n	8001f28 <main+0x94>
 8001f26:	4b17      	ldr	r3, [pc, #92]	; (8001f84 <main+0xf0>)
 8001f28:	60fb      	str	r3, [r7, #12]
#ifndef PRINT_LCD
		printf("Current time = %s %s\n",time_to_string(&current_time),am_pm); // 04:25:41 PM
 8001f2a:	f107 0308 	add.w	r3, r7, #8
 8001f2e:	4618      	mov	r0, r3
 8001f30:	f7ff ff5c 	bl	8001dec <time_to_string>
 8001f34:	4603      	mov	r3, r0
 8001f36:	68fa      	ldr	r2, [r7, #12]
 8001f38:	4619      	mov	r1, r3
 8001f3a:	4813      	ldr	r0, [pc, #76]	; (8001f88 <main+0xf4>)
 8001f3c:	f000 f906 	bl	800214c <printf>
 8001f40:	e009      	b.n	8001f56 <main+0xc2>
		lcd_print_string(time_to_string(&current_time));
		lcd_print_string(am_pm);
#endif
	}else{
#ifndef PRINT_LCD
		printf("Current time = %s\n",time_to_string(&current_time)); // 04:25:41
 8001f42:	f107 0308 	add.w	r3, r7, #8
 8001f46:	4618      	mov	r0, r3
 8001f48:	f7ff ff50 	bl	8001dec <time_to_string>
 8001f4c:	4603      	mov	r3, r0
 8001f4e:	4619      	mov	r1, r3
 8001f50:	480e      	ldr	r0, [pc, #56]	; (8001f8c <main+0xf8>)
 8001f52:	f000 f8fb 	bl	800214c <printf>
		lcd_print_string(time_to_string(&current_time));
#endif
	}

#ifndef PRINT_LCD
	printf("Current date = %s <%s>\n",date_to_string(&current_date), get_day_of_week(current_date.day));
 8001f56:	1d3b      	adds	r3, r7, #4
 8001f58:	4618      	mov	r0, r3
 8001f5a:	f7ff ff71 	bl	8001e40 <date_to_string>
 8001f5e:	4604      	mov	r4, r0
 8001f60:	79fb      	ldrb	r3, [r7, #7]
 8001f62:	4618      	mov	r0, r3
 8001f64:	f7ff feea 	bl	8001d3c <get_day_of_week>
 8001f68:	4603      	mov	r3, r0
 8001f6a:	461a      	mov	r2, r3
 8001f6c:	4621      	mov	r1, r4
 8001f6e:	4808      	ldr	r0, [pc, #32]	; (8001f90 <main+0xfc>)
 8001f70:	f000 f8ec 	bl	800214c <printf>
	lcd_set_cursor(2, 1);
	lcd_print_string(date_to_string(&current_date));
#endif


	while(1);
 8001f74:	e7fe      	b.n	8001f74 <main+0xe0>
 8001f76:	bf00      	nop
 8001f78:	080071b0 	.word	0x080071b0
 8001f7c:	080071bc 	.word	0x080071bc
 8001f80:	080071d0 	.word	0x080071d0
 8001f84:	080071d4 	.word	0x080071d4
 8001f88:	080071d8 	.word	0x080071d8
 8001f8c:	080071f0 	.word	0x080071f0
 8001f90:	08007204 	.word	0x08007204

08001f94 <SysTick_Handler>:
	return 0;
}


void SysTick_Handler(void)
{
 8001f94:	b590      	push	{r4, r7, lr}
 8001f96:	b085      	sub	sp, #20
 8001f98:	af00      	add	r7, sp, #0
	RTC_time_t current_time;
	RTC_date_t current_date;

	ds1307_get_current_time(&current_time);
 8001f9a:	f107 0308 	add.w	r3, r7, #8
 8001f9e:	4618      	mov	r0, r3
 8001fa0:	f7ff f823 	bl	8000fea <ds1307_get_current_time>

	char *am_pm;
	if(current_time.time_format != TIME_FORMAT_24HRS){
 8001fa4:	7afb      	ldrb	r3, [r7, #11]
 8001fa6:	2b02      	cmp	r3, #2
 8001fa8:	d012      	beq.n	8001fd0 <SysTick_Handler+0x3c>
		am_pm = (current_time.time_format) ? "PM" : "AM";
 8001faa:	7afb      	ldrb	r3, [r7, #11]
 8001fac:	2b00      	cmp	r3, #0
 8001fae:	d001      	beq.n	8001fb4 <SysTick_Handler+0x20>
 8001fb0:	4b18      	ldr	r3, [pc, #96]	; (8002014 <SysTick_Handler+0x80>)
 8001fb2:	e000      	b.n	8001fb6 <SysTick_Handler+0x22>
 8001fb4:	4b18      	ldr	r3, [pc, #96]	; (8002018 <SysTick_Handler+0x84>)
 8001fb6:	60fb      	str	r3, [r7, #12]
#ifndef PRINT_LCD
		printf("Current time = %s %s\n",time_to_string(&current_time),am_pm); // 04:25:41 PM
 8001fb8:	f107 0308 	add.w	r3, r7, #8
 8001fbc:	4618      	mov	r0, r3
 8001fbe:	f7ff ff15 	bl	8001dec <time_to_string>
 8001fc2:	4603      	mov	r3, r0
 8001fc4:	68fa      	ldr	r2, [r7, #12]
 8001fc6:	4619      	mov	r1, r3
 8001fc8:	4814      	ldr	r0, [pc, #80]	; (800201c <SysTick_Handler+0x88>)
 8001fca:	f000 f8bf 	bl	800214c <printf>
 8001fce:	e009      	b.n	8001fe4 <SysTick_Handler+0x50>
		lcd_print_string(am_pm);
#endif

	}else{
#ifndef PRINT_LCD
		printf("Current time = %s\n",time_to_string(&current_time)); // 04:25:41
 8001fd0:	f107 0308 	add.w	r3, r7, #8
 8001fd4:	4618      	mov	r0, r3
 8001fd6:	f7ff ff09 	bl	8001dec <time_to_string>
 8001fda:	4603      	mov	r3, r0
 8001fdc:	4619      	mov	r1, r3
 8001fde:	4810      	ldr	r0, [pc, #64]	; (8002020 <SysTick_Handler+0x8c>)
 8001fe0:	f000 f8b4 	bl	800214c <printf>
		lcd_set_cursor(1, 1);
		lcd_print_string(time_to_string(&current_time));
#endif
	}

	ds1307_get_current_date(&current_date);
 8001fe4:	1d3b      	adds	r3, r7, #4
 8001fe6:	4618      	mov	r0, r3
 8001fe8:	f7ff f848 	bl	800107c <ds1307_get_current_date>

#ifndef PRINT_LCD
	printf("Current date = %s <%s>\n",date_to_string(&current_date), get_day_of_week(current_date.day));
 8001fec:	1d3b      	adds	r3, r7, #4
 8001fee:	4618      	mov	r0, r3
 8001ff0:	f7ff ff26 	bl	8001e40 <date_to_string>
 8001ff4:	4604      	mov	r4, r0
 8001ff6:	79fb      	ldrb	r3, [r7, #7]
 8001ff8:	4618      	mov	r0, r3
 8001ffa:	f7ff fe9f 	bl	8001d3c <get_day_of_week>
 8001ffe:	4603      	mov	r3, r0
 8002000:	461a      	mov	r2, r3
 8002002:	4621      	mov	r1, r4
 8002004:	4807      	ldr	r0, [pc, #28]	; (8002024 <SysTick_Handler+0x90>)
 8002006:	f000 f8a1 	bl	800214c <printf>
	lcd_print_string(get_day_of_week(current_date.day));
	lcd_print_char('>');
#endif


}
 800200a:	bf00      	nop
 800200c:	3714      	adds	r7, #20
 800200e:	46bd      	mov	sp, r7
 8002010:	bd90      	pop	{r4, r7, pc}
 8002012:	bf00      	nop
 8002014:	080071d0 	.word	0x080071d0
 8002018:	080071d4 	.word	0x080071d4
 800201c:	080071d8 	.word	0x080071d8
 8002020:	080071f0 	.word	0x080071f0
 8002024:	08007204 	.word	0x08007204

08002028 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8002028:	b580      	push	{r7, lr}
 800202a:	b086      	sub	sp, #24
 800202c:	af00      	add	r7, sp, #0
 800202e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8002030:	4a14      	ldr	r2, [pc, #80]	; (8002084 <_sbrk+0x5c>)
 8002032:	4b15      	ldr	r3, [pc, #84]	; (8002088 <_sbrk+0x60>)
 8002034:	1ad3      	subs	r3, r2, r3
 8002036:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8002038:	697b      	ldr	r3, [r7, #20]
 800203a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800203c:	4b13      	ldr	r3, [pc, #76]	; (800208c <_sbrk+0x64>)
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	2b00      	cmp	r3, #0
 8002042:	d102      	bne.n	800204a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8002044:	4b11      	ldr	r3, [pc, #68]	; (800208c <_sbrk+0x64>)
 8002046:	4a12      	ldr	r2, [pc, #72]	; (8002090 <_sbrk+0x68>)
 8002048:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800204a:	4b10      	ldr	r3, [pc, #64]	; (800208c <_sbrk+0x64>)
 800204c:	681a      	ldr	r2, [r3, #0]
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	4413      	add	r3, r2
 8002052:	693a      	ldr	r2, [r7, #16]
 8002054:	429a      	cmp	r2, r3
 8002056:	d207      	bcs.n	8002068 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8002058:	f000 f846 	bl	80020e8 <__errno>
 800205c:	4603      	mov	r3, r0
 800205e:	220c      	movs	r2, #12
 8002060:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8002062:	f04f 33ff 	mov.w	r3, #4294967295
 8002066:	e009      	b.n	800207c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8002068:	4b08      	ldr	r3, [pc, #32]	; (800208c <_sbrk+0x64>)
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800206e:	4b07      	ldr	r3, [pc, #28]	; (800208c <_sbrk+0x64>)
 8002070:	681a      	ldr	r2, [r3, #0]
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	4413      	add	r3, r2
 8002076:	4a05      	ldr	r2, [pc, #20]	; (800208c <_sbrk+0x64>)
 8002078:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800207a:	68fb      	ldr	r3, [r7, #12]
}
 800207c:	4618      	mov	r0, r3
 800207e:	3718      	adds	r7, #24
 8002080:	46bd      	mov	sp, r7
 8002082:	bd80      	pop	{r7, pc}
 8002084:	20020000 	.word	0x20020000
 8002088:	00000400 	.word	0x00000400
 800208c:	200009fc 	.word	0x200009fc
 8002090:	20000b18 	.word	0x20000b18

08002094 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8002094:	480d      	ldr	r0, [pc, #52]	; (80020cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8002096:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8002098:	480d      	ldr	r0, [pc, #52]	; (80020d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800209a:	490e      	ldr	r1, [pc, #56]	; (80020d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 800209c:	4a0e      	ldr	r2, [pc, #56]	; (80020d8 <LoopForever+0xe>)
  movs r3, #0
 800209e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80020a0:	e002      	b.n	80020a8 <LoopCopyDataInit>

080020a2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80020a2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80020a4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80020a6:	3304      	adds	r3, #4

080020a8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80020a8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80020aa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80020ac:	d3f9      	bcc.n	80020a2 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80020ae:	4a0b      	ldr	r2, [pc, #44]	; (80020dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80020b0:	4c0b      	ldr	r4, [pc, #44]	; (80020e0 <LoopForever+0x16>)
  movs r3, #0
 80020b2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80020b4:	e001      	b.n	80020ba <LoopFillZerobss>

080020b6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80020b6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80020b8:	3204      	adds	r2, #4

080020ba <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80020ba:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80020bc:	d3fb      	bcc.n	80020b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80020be:	f3af 8000 	nop.w
/* Call static constructors */
  bl __libc_init_array
 80020c2:	f000 f817 	bl	80020f4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80020c6:	f7ff fee5 	bl	8001e94 <main>

080020ca <LoopForever>:

LoopForever:
    b LoopForever
 80020ca:	e7fe      	b.n	80020ca <LoopForever>
  ldr   r0, =_estack
 80020cc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80020d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80020d4:	200009c8 	.word	0x200009c8
  ldr r2, =_sidata
 80020d8:	080075ec 	.word	0x080075ec
  ldr r2, =_sbss
 80020dc:	200009c8 	.word	0x200009c8
  ldr r4, =_ebss
 80020e0:	20000b18 	.word	0x20000b18

080020e4 <ADC_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80020e4:	e7fe      	b.n	80020e4 <ADC_IRQHandler>
	...

080020e8 <__errno>:
 80020e8:	4b01      	ldr	r3, [pc, #4]	; (80020f0 <__errno+0x8>)
 80020ea:	6818      	ldr	r0, [r3, #0]
 80020ec:	4770      	bx	lr
 80020ee:	bf00      	nop
 80020f0:	20000014 	.word	0x20000014

080020f4 <__libc_init_array>:
 80020f4:	b570      	push	{r4, r5, r6, lr}
 80020f6:	4d0d      	ldr	r5, [pc, #52]	; (800212c <__libc_init_array+0x38>)
 80020f8:	4c0d      	ldr	r4, [pc, #52]	; (8002130 <__libc_init_array+0x3c>)
 80020fa:	1b64      	subs	r4, r4, r5
 80020fc:	10a4      	asrs	r4, r4, #2
 80020fe:	2600      	movs	r6, #0
 8002100:	42a6      	cmp	r6, r4
 8002102:	d109      	bne.n	8002118 <__libc_init_array+0x24>
 8002104:	4d0b      	ldr	r5, [pc, #44]	; (8002134 <__libc_init_array+0x40>)
 8002106:	4c0c      	ldr	r4, [pc, #48]	; (8002138 <__libc_init_array+0x44>)
 8002108:	f005 f814 	bl	8007134 <_init>
 800210c:	1b64      	subs	r4, r4, r5
 800210e:	10a4      	asrs	r4, r4, #2
 8002110:	2600      	movs	r6, #0
 8002112:	42a6      	cmp	r6, r4
 8002114:	d105      	bne.n	8002122 <__libc_init_array+0x2e>
 8002116:	bd70      	pop	{r4, r5, r6, pc}
 8002118:	f855 3b04 	ldr.w	r3, [r5], #4
 800211c:	4798      	blx	r3
 800211e:	3601      	adds	r6, #1
 8002120:	e7ee      	b.n	8002100 <__libc_init_array+0xc>
 8002122:	f855 3b04 	ldr.w	r3, [r5], #4
 8002126:	4798      	blx	r3
 8002128:	3601      	adds	r6, #1
 800212a:	e7f2      	b.n	8002112 <__libc_init_array+0x1e>
 800212c:	080075e0 	.word	0x080075e0
 8002130:	080075e0 	.word	0x080075e0
 8002134:	080075e0 	.word	0x080075e0
 8002138:	080075e8 	.word	0x080075e8

0800213c <memset>:
 800213c:	4402      	add	r2, r0
 800213e:	4603      	mov	r3, r0
 8002140:	4293      	cmp	r3, r2
 8002142:	d100      	bne.n	8002146 <memset+0xa>
 8002144:	4770      	bx	lr
 8002146:	f803 1b01 	strb.w	r1, [r3], #1
 800214a:	e7f9      	b.n	8002140 <memset+0x4>

0800214c <printf>:
 800214c:	b40f      	push	{r0, r1, r2, r3}
 800214e:	b507      	push	{r0, r1, r2, lr}
 8002150:	4906      	ldr	r1, [pc, #24]	; (800216c <printf+0x20>)
 8002152:	ab04      	add	r3, sp, #16
 8002154:	6808      	ldr	r0, [r1, #0]
 8002156:	f853 2b04 	ldr.w	r2, [r3], #4
 800215a:	6881      	ldr	r1, [r0, #8]
 800215c:	9301      	str	r3, [sp, #4]
 800215e:	f000 f855 	bl	800220c <_vfprintf_r>
 8002162:	b003      	add	sp, #12
 8002164:	f85d eb04 	ldr.w	lr, [sp], #4
 8002168:	b004      	add	sp, #16
 800216a:	4770      	bx	lr
 800216c:	20000014 	.word	0x20000014

08002170 <_puts_r>:
 8002170:	b530      	push	{r4, r5, lr}
 8002172:	4605      	mov	r5, r0
 8002174:	b089      	sub	sp, #36	; 0x24
 8002176:	4608      	mov	r0, r1
 8002178:	460c      	mov	r4, r1
 800217a:	f7fe f839 	bl	80001f0 <strlen>
 800217e:	4b1e      	ldr	r3, [pc, #120]	; (80021f8 <_puts_r+0x88>)
 8002180:	9306      	str	r3, [sp, #24]
 8002182:	2301      	movs	r3, #1
 8002184:	e9cd 4004 	strd	r4, r0, [sp, #16]
 8002188:	9307      	str	r3, [sp, #28]
 800218a:	4418      	add	r0, r3
 800218c:	ab04      	add	r3, sp, #16
 800218e:	9301      	str	r3, [sp, #4]
 8002190:	2302      	movs	r3, #2
 8002192:	9302      	str	r3, [sp, #8]
 8002194:	6bab      	ldr	r3, [r5, #56]	; 0x38
 8002196:	68ac      	ldr	r4, [r5, #8]
 8002198:	9003      	str	r0, [sp, #12]
 800219a:	b913      	cbnz	r3, 80021a2 <_puts_r+0x32>
 800219c:	4628      	mov	r0, r5
 800219e:	f002 fa3f 	bl	8004620 <__sinit>
 80021a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80021a4:	07db      	lsls	r3, r3, #31
 80021a6:	d405      	bmi.n	80021b4 <_puts_r+0x44>
 80021a8:	89a3      	ldrh	r3, [r4, #12]
 80021aa:	0598      	lsls	r0, r3, #22
 80021ac:	d402      	bmi.n	80021b4 <_puts_r+0x44>
 80021ae:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80021b0:	f002 fcf6 	bl	8004ba0 <__retarget_lock_acquire_recursive>
 80021b4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80021b8:	0499      	lsls	r1, r3, #18
 80021ba:	d406      	bmi.n	80021ca <_puts_r+0x5a>
 80021bc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80021c0:	81a3      	strh	r3, [r4, #12]
 80021c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80021c4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80021c8:	6663      	str	r3, [r4, #100]	; 0x64
 80021ca:	4628      	mov	r0, r5
 80021cc:	aa01      	add	r2, sp, #4
 80021ce:	4621      	mov	r1, r4
 80021d0:	f002 fb76 	bl	80048c0 <__sfvwrite_r>
 80021d4:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80021d6:	2800      	cmp	r0, #0
 80021d8:	bf14      	ite	ne
 80021da:	f04f 35ff 	movne.w	r5, #4294967295
 80021de:	250a      	moveq	r5, #10
 80021e0:	07da      	lsls	r2, r3, #31
 80021e2:	d405      	bmi.n	80021f0 <_puts_r+0x80>
 80021e4:	89a3      	ldrh	r3, [r4, #12]
 80021e6:	059b      	lsls	r3, r3, #22
 80021e8:	d402      	bmi.n	80021f0 <_puts_r+0x80>
 80021ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80021ec:	f002 fcd9 	bl	8004ba2 <__retarget_lock_release_recursive>
 80021f0:	4628      	mov	r0, r5
 80021f2:	b009      	add	sp, #36	; 0x24
 80021f4:	bd30      	pop	{r4, r5, pc}
 80021f6:	bf00      	nop
 80021f8:	080074ae 	.word	0x080074ae

080021fc <puts>:
 80021fc:	4b02      	ldr	r3, [pc, #8]	; (8002208 <puts+0xc>)
 80021fe:	4601      	mov	r1, r0
 8002200:	6818      	ldr	r0, [r3, #0]
 8002202:	f7ff bfb5 	b.w	8002170 <_puts_r>
 8002206:	bf00      	nop
 8002208:	20000014 	.word	0x20000014

0800220c <_vfprintf_r>:
 800220c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002210:	b0d3      	sub	sp, #332	; 0x14c
 8002212:	468a      	mov	sl, r1
 8002214:	4691      	mov	r9, r2
 8002216:	461c      	mov	r4, r3
 8002218:	461e      	mov	r6, r3
 800221a:	4683      	mov	fp, r0
 800221c:	f002 fcba 	bl	8004b94 <_localeconv_r>
 8002220:	6803      	ldr	r3, [r0, #0]
 8002222:	9318      	str	r3, [sp, #96]	; 0x60
 8002224:	4618      	mov	r0, r3
 8002226:	f7fd ffe3 	bl	80001f0 <strlen>
 800222a:	9012      	str	r0, [sp, #72]	; 0x48
 800222c:	f1bb 0f00 	cmp.w	fp, #0
 8002230:	d005      	beq.n	800223e <_vfprintf_r+0x32>
 8002232:	f8db 3038 	ldr.w	r3, [fp, #56]	; 0x38
 8002236:	b913      	cbnz	r3, 800223e <_vfprintf_r+0x32>
 8002238:	4658      	mov	r0, fp
 800223a:	f002 f9f1 	bl	8004620 <__sinit>
 800223e:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 8002242:	07da      	lsls	r2, r3, #31
 8002244:	d407      	bmi.n	8002256 <_vfprintf_r+0x4a>
 8002246:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800224a:	059b      	lsls	r3, r3, #22
 800224c:	d403      	bmi.n	8002256 <_vfprintf_r+0x4a>
 800224e:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 8002252:	f002 fca5 	bl	8004ba0 <__retarget_lock_acquire_recursive>
 8002256:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800225a:	049f      	lsls	r7, r3, #18
 800225c:	d409      	bmi.n	8002272 <_vfprintf_r+0x66>
 800225e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002262:	f8aa 300c 	strh.w	r3, [sl, #12]
 8002266:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 800226a:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800226e:	f8ca 3064 	str.w	r3, [sl, #100]	; 0x64
 8002272:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002276:	071d      	lsls	r5, r3, #28
 8002278:	d502      	bpl.n	8002280 <_vfprintf_r+0x74>
 800227a:	f8da 3010 	ldr.w	r3, [sl, #16]
 800227e:	b9c3      	cbnz	r3, 80022b2 <_vfprintf_r+0xa6>
 8002280:	4651      	mov	r1, sl
 8002282:	4658      	mov	r0, fp
 8002284:	f001 fa24 	bl	80036d0 <__swsetup_r>
 8002288:	b198      	cbz	r0, 80022b2 <_vfprintf_r+0xa6>
 800228a:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 800228e:	07dc      	lsls	r4, r3, #31
 8002290:	d506      	bpl.n	80022a0 <_vfprintf_r+0x94>
 8002292:	f04f 33ff 	mov.w	r3, #4294967295
 8002296:	9313      	str	r3, [sp, #76]	; 0x4c
 8002298:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800229a:	b053      	add	sp, #332	; 0x14c
 800229c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80022a0:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 80022a4:	0598      	lsls	r0, r3, #22
 80022a6:	d4f4      	bmi.n	8002292 <_vfprintf_r+0x86>
 80022a8:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 80022ac:	f002 fc79 	bl	8004ba2 <__retarget_lock_release_recursive>
 80022b0:	e7ef      	b.n	8002292 <_vfprintf_r+0x86>
 80022b2:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 80022b6:	f003 021a 	and.w	r2, r3, #26
 80022ba:	2a0a      	cmp	r2, #10
 80022bc:	d115      	bne.n	80022ea <_vfprintf_r+0xde>
 80022be:	f9ba 200e 	ldrsh.w	r2, [sl, #14]
 80022c2:	2a00      	cmp	r2, #0
 80022c4:	db11      	blt.n	80022ea <_vfprintf_r+0xde>
 80022c6:	f8da 2064 	ldr.w	r2, [sl, #100]	; 0x64
 80022ca:	07d1      	lsls	r1, r2, #31
 80022cc:	d405      	bmi.n	80022da <_vfprintf_r+0xce>
 80022ce:	059a      	lsls	r2, r3, #22
 80022d0:	d403      	bmi.n	80022da <_vfprintf_r+0xce>
 80022d2:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 80022d6:	f002 fc64 	bl	8004ba2 <__retarget_lock_release_recursive>
 80022da:	4623      	mov	r3, r4
 80022dc:	464a      	mov	r2, r9
 80022de:	4651      	mov	r1, sl
 80022e0:	4658      	mov	r0, fp
 80022e2:	f001 f9b5 	bl	8003650 <__sbprintf>
 80022e6:	9013      	str	r0, [sp, #76]	; 0x4c
 80022e8:	e7d6      	b.n	8002298 <_vfprintf_r+0x8c>
 80022ea:	2500      	movs	r5, #0
 80022ec:	2200      	movs	r2, #0
 80022ee:	2300      	movs	r3, #0
 80022f0:	e9cd 5527 	strd	r5, r5, [sp, #156]	; 0x9c
 80022f4:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80022f8:	e9cd 551a 	strd	r5, r5, [sp, #104]	; 0x68
 80022fc:	ac29      	add	r4, sp, #164	; 0xa4
 80022fe:	9426      	str	r4, [sp, #152]	; 0x98
 8002300:	9508      	str	r5, [sp, #32]
 8002302:	950e      	str	r5, [sp, #56]	; 0x38
 8002304:	9516      	str	r5, [sp, #88]	; 0x58
 8002306:	9519      	str	r5, [sp, #100]	; 0x64
 8002308:	9513      	str	r5, [sp, #76]	; 0x4c
 800230a:	464b      	mov	r3, r9
 800230c:	461d      	mov	r5, r3
 800230e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8002312:	b10a      	cbz	r2, 8002318 <_vfprintf_r+0x10c>
 8002314:	2a25      	cmp	r2, #37	; 0x25
 8002316:	d1f9      	bne.n	800230c <_vfprintf_r+0x100>
 8002318:	ebb5 0709 	subs.w	r7, r5, r9
 800231c:	d00d      	beq.n	800233a <_vfprintf_r+0x12e>
 800231e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002320:	443b      	add	r3, r7
 8002322:	9328      	str	r3, [sp, #160]	; 0xa0
 8002324:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002326:	3301      	adds	r3, #1
 8002328:	2b07      	cmp	r3, #7
 800232a:	e9c4 9700 	strd	r9, r7, [r4]
 800232e:	9327      	str	r3, [sp, #156]	; 0x9c
 8002330:	dc7a      	bgt.n	8002428 <_vfprintf_r+0x21c>
 8002332:	3408      	adds	r4, #8
 8002334:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8002336:	443b      	add	r3, r7
 8002338:	9313      	str	r3, [sp, #76]	; 0x4c
 800233a:	782b      	ldrb	r3, [r5, #0]
 800233c:	2b00      	cmp	r3, #0
 800233e:	f001 813f 	beq.w	80035c0 <_vfprintf_r+0x13b4>
 8002342:	2300      	movs	r3, #0
 8002344:	f04f 32ff 	mov.w	r2, #4294967295
 8002348:	3501      	adds	r5, #1
 800234a:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800234e:	9207      	str	r2, [sp, #28]
 8002350:	9314      	str	r3, [sp, #80]	; 0x50
 8002352:	4698      	mov	r8, r3
 8002354:	270a      	movs	r7, #10
 8002356:	212b      	movs	r1, #43	; 0x2b
 8002358:	462a      	mov	r2, r5
 800235a:	f812 3b01 	ldrb.w	r3, [r2], #1
 800235e:	930b      	str	r3, [sp, #44]	; 0x2c
 8002360:	4613      	mov	r3, r2
 8002362:	930f      	str	r3, [sp, #60]	; 0x3c
 8002364:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002366:	3b20      	subs	r3, #32
 8002368:	2b5a      	cmp	r3, #90	; 0x5a
 800236a:	f200 85a8 	bhi.w	8002ebe <_vfprintf_r+0xcb2>
 800236e:	e8df f013 	tbh	[pc, r3, lsl #1]
 8002372:	007e      	.short	0x007e
 8002374:	05a605a6 	.word	0x05a605a6
 8002378:	05a60086 	.word	0x05a60086
 800237c:	05a605a6 	.word	0x05a605a6
 8002380:	05a60065 	.word	0x05a60065
 8002384:	008905a6 	.word	0x008905a6
 8002388:	05a60093 	.word	0x05a60093
 800238c:	00960090 	.word	0x00960090
 8002390:	00b205a6 	.word	0x00b205a6
 8002394:	00b500b5 	.word	0x00b500b5
 8002398:	00b500b5 	.word	0x00b500b5
 800239c:	00b500b5 	.word	0x00b500b5
 80023a0:	00b500b5 	.word	0x00b500b5
 80023a4:	05a600b5 	.word	0x05a600b5
 80023a8:	05a605a6 	.word	0x05a605a6
 80023ac:	05a605a6 	.word	0x05a605a6
 80023b0:	05a605a6 	.word	0x05a605a6
 80023b4:	05a60120 	.word	0x05a60120
 80023b8:	00f500e2 	.word	0x00f500e2
 80023bc:	01200120 	.word	0x01200120
 80023c0:	05a60120 	.word	0x05a60120
 80023c4:	05a605a6 	.word	0x05a605a6
 80023c8:	00c505a6 	.word	0x00c505a6
 80023cc:	05a605a6 	.word	0x05a605a6
 80023d0:	05a60486 	.word	0x05a60486
 80023d4:	05a605a6 	.word	0x05a605a6
 80023d8:	05a604cd 	.word	0x05a604cd
 80023dc:	05a604ee 	.word	0x05a604ee
 80023e0:	050d05a6 	.word	0x050d05a6
 80023e4:	05a605a6 	.word	0x05a605a6
 80023e8:	05a605a6 	.word	0x05a605a6
 80023ec:	05a605a6 	.word	0x05a605a6
 80023f0:	05a605a6 	.word	0x05a605a6
 80023f4:	05a60120 	.word	0x05a60120
 80023f8:	00f700e2 	.word	0x00f700e2
 80023fc:	01200120 	.word	0x01200120
 8002400:	00c80120 	.word	0x00c80120
 8002404:	00dc00f7 	.word	0x00dc00f7
 8002408:	00d505a6 	.word	0x00d505a6
 800240c:	046305a6 	.word	0x046305a6
 8002410:	04bc0488 	.word	0x04bc0488
 8002414:	05a600dc 	.word	0x05a600dc
 8002418:	007c04cd 	.word	0x007c04cd
 800241c:	05a604f0 	.word	0x05a604f0
 8002420:	052a05a6 	.word	0x052a05a6
 8002424:	007c05a6 	.word	0x007c05a6
 8002428:	aa26      	add	r2, sp, #152	; 0x98
 800242a:	4651      	mov	r1, sl
 800242c:	4658      	mov	r0, fp
 800242e:	f003 fc16 	bl	8005c5e <__sprint_r>
 8002432:	2800      	cmp	r0, #0
 8002434:	f040 8127 	bne.w	8002686 <_vfprintf_r+0x47a>
 8002438:	ac29      	add	r4, sp, #164	; 0xa4
 800243a:	e77b      	b.n	8002334 <_vfprintf_r+0x128>
 800243c:	4658      	mov	r0, fp
 800243e:	f002 fba9 	bl	8004b94 <_localeconv_r>
 8002442:	6843      	ldr	r3, [r0, #4]
 8002444:	9319      	str	r3, [sp, #100]	; 0x64
 8002446:	4618      	mov	r0, r3
 8002448:	f7fd fed2 	bl	80001f0 <strlen>
 800244c:	9016      	str	r0, [sp, #88]	; 0x58
 800244e:	4658      	mov	r0, fp
 8002450:	f002 fba0 	bl	8004b94 <_localeconv_r>
 8002454:	6883      	ldr	r3, [r0, #8]
 8002456:	930e      	str	r3, [sp, #56]	; 0x38
 8002458:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800245a:	212b      	movs	r1, #43	; 0x2b
 800245c:	b12b      	cbz	r3, 800246a <_vfprintf_r+0x25e>
 800245e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002460:	b11b      	cbz	r3, 800246a <_vfprintf_r+0x25e>
 8002462:	781b      	ldrb	r3, [r3, #0]
 8002464:	b10b      	cbz	r3, 800246a <_vfprintf_r+0x25e>
 8002466:	f448 6880 	orr.w	r8, r8, #1024	; 0x400
 800246a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800246c:	e774      	b.n	8002358 <_vfprintf_r+0x14c>
 800246e:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 8002472:	2b00      	cmp	r3, #0
 8002474:	d1f9      	bne.n	800246a <_vfprintf_r+0x25e>
 8002476:	2320      	movs	r3, #32
 8002478:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 800247c:	e7f5      	b.n	800246a <_vfprintf_r+0x25e>
 800247e:	f048 0801 	orr.w	r8, r8, #1
 8002482:	e7f2      	b.n	800246a <_vfprintf_r+0x25e>
 8002484:	f856 3b04 	ldr.w	r3, [r6], #4
 8002488:	9314      	str	r3, [sp, #80]	; 0x50
 800248a:	2b00      	cmp	r3, #0
 800248c:	daed      	bge.n	800246a <_vfprintf_r+0x25e>
 800248e:	425b      	negs	r3, r3
 8002490:	9314      	str	r3, [sp, #80]	; 0x50
 8002492:	f048 0804 	orr.w	r8, r8, #4
 8002496:	e7e8      	b.n	800246a <_vfprintf_r+0x25e>
 8002498:	f88d 107b 	strb.w	r1, [sp, #123]	; 0x7b
 800249c:	e7e5      	b.n	800246a <_vfprintf_r+0x25e>
 800249e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80024a0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80024a4:	920b      	str	r2, [sp, #44]	; 0x2c
 80024a6:	2a2a      	cmp	r2, #42	; 0x2a
 80024a8:	d112      	bne.n	80024d0 <_vfprintf_r+0x2c4>
 80024aa:	f856 0b04 	ldr.w	r0, [r6], #4
 80024ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80024b0:	ea40 72e0 	orr.w	r2, r0, r0, asr #31
 80024b4:	9207      	str	r2, [sp, #28]
 80024b6:	e7d8      	b.n	800246a <_vfprintf_r+0x25e>
 80024b8:	9807      	ldr	r0, [sp, #28]
 80024ba:	fb07 2200 	mla	r2, r7, r0, r2
 80024be:	9207      	str	r2, [sp, #28]
 80024c0:	f813 2b01 	ldrb.w	r2, [r3], #1
 80024c4:	920b      	str	r2, [sp, #44]	; 0x2c
 80024c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80024c8:	3a30      	subs	r2, #48	; 0x30
 80024ca:	2a09      	cmp	r2, #9
 80024cc:	d9f4      	bls.n	80024b8 <_vfprintf_r+0x2ac>
 80024ce:	e748      	b.n	8002362 <_vfprintf_r+0x156>
 80024d0:	2200      	movs	r2, #0
 80024d2:	9207      	str	r2, [sp, #28]
 80024d4:	e7f7      	b.n	80024c6 <_vfprintf_r+0x2ba>
 80024d6:	f048 0880 	orr.w	r8, r8, #128	; 0x80
 80024da:	e7c6      	b.n	800246a <_vfprintf_r+0x25e>
 80024dc:	2200      	movs	r2, #0
 80024de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80024e0:	9214      	str	r2, [sp, #80]	; 0x50
 80024e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80024e4:	9814      	ldr	r0, [sp, #80]	; 0x50
 80024e6:	3a30      	subs	r2, #48	; 0x30
 80024e8:	fb07 2200 	mla	r2, r7, r0, r2
 80024ec:	9214      	str	r2, [sp, #80]	; 0x50
 80024ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80024f2:	920b      	str	r2, [sp, #44]	; 0x2c
 80024f4:	3a30      	subs	r2, #48	; 0x30
 80024f6:	2a09      	cmp	r2, #9
 80024f8:	d9f3      	bls.n	80024e2 <_vfprintf_r+0x2d6>
 80024fa:	e732      	b.n	8002362 <_vfprintf_r+0x156>
 80024fc:	f048 0808 	orr.w	r8, r8, #8
 8002500:	e7b3      	b.n	800246a <_vfprintf_r+0x25e>
 8002502:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002504:	781b      	ldrb	r3, [r3, #0]
 8002506:	2b68      	cmp	r3, #104	; 0x68
 8002508:	bf01      	itttt	eq
 800250a:	9b0f      	ldreq	r3, [sp, #60]	; 0x3c
 800250c:	3301      	addeq	r3, #1
 800250e:	930f      	streq	r3, [sp, #60]	; 0x3c
 8002510:	f448 7800 	orreq.w	r8, r8, #512	; 0x200
 8002514:	bf18      	it	ne
 8002516:	f048 0840 	orrne.w	r8, r8, #64	; 0x40
 800251a:	e7a6      	b.n	800246a <_vfprintf_r+0x25e>
 800251c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800251e:	781b      	ldrb	r3, [r3, #0]
 8002520:	2b6c      	cmp	r3, #108	; 0x6c
 8002522:	d105      	bne.n	8002530 <_vfprintf_r+0x324>
 8002524:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002526:	3301      	adds	r3, #1
 8002528:	930f      	str	r3, [sp, #60]	; 0x3c
 800252a:	f048 0820 	orr.w	r8, r8, #32
 800252e:	e79c      	b.n	800246a <_vfprintf_r+0x25e>
 8002530:	f048 0810 	orr.w	r8, r8, #16
 8002534:	e799      	b.n	800246a <_vfprintf_r+0x25e>
 8002536:	4632      	mov	r2, r6
 8002538:	2000      	movs	r0, #0
 800253a:	f852 3b04 	ldr.w	r3, [r2], #4
 800253e:	920a      	str	r2, [sp, #40]	; 0x28
 8002540:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 8002544:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 8002548:	2301      	movs	r3, #1
 800254a:	e9cd 000c 	strd	r0, r0, [sp, #48]	; 0x30
 800254e:	4607      	mov	r7, r0
 8002550:	9307      	str	r3, [sp, #28]
 8002552:	4606      	mov	r6, r0
 8002554:	4605      	mov	r5, r0
 8002556:	f10d 09e4 	add.w	r9, sp, #228	; 0xe4
 800255a:	e1b4      	b.n	80028c6 <_vfprintf_r+0x6ba>
 800255c:	f048 0810 	orr.w	r8, r8, #16
 8002560:	f018 0f20 	tst.w	r8, #32
 8002564:	d012      	beq.n	800258c <_vfprintf_r+0x380>
 8002566:	3607      	adds	r6, #7
 8002568:	f026 0307 	bic.w	r3, r6, #7
 800256c:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 8002570:	930a      	str	r3, [sp, #40]	; 0x28
 8002572:	2e00      	cmp	r6, #0
 8002574:	f177 0300 	sbcs.w	r3, r7, #0
 8002578:	da06      	bge.n	8002588 <_vfprintf_r+0x37c>
 800257a:	4276      	negs	r6, r6
 800257c:	f04f 032d 	mov.w	r3, #45	; 0x2d
 8002580:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
 8002584:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002588:	2301      	movs	r3, #1
 800258a:	e389      	b.n	8002ca0 <_vfprintf_r+0xa94>
 800258c:	1d33      	adds	r3, r6, #4
 800258e:	f018 0f10 	tst.w	r8, #16
 8002592:	930a      	str	r3, [sp, #40]	; 0x28
 8002594:	d002      	beq.n	800259c <_vfprintf_r+0x390>
 8002596:	6836      	ldr	r6, [r6, #0]
 8002598:	17f7      	asrs	r7, r6, #31
 800259a:	e7ea      	b.n	8002572 <_vfprintf_r+0x366>
 800259c:	f018 0f40 	tst.w	r8, #64	; 0x40
 80025a0:	6836      	ldr	r6, [r6, #0]
 80025a2:	d001      	beq.n	80025a8 <_vfprintf_r+0x39c>
 80025a4:	b236      	sxth	r6, r6
 80025a6:	e7f7      	b.n	8002598 <_vfprintf_r+0x38c>
 80025a8:	f418 7f00 	tst.w	r8, #512	; 0x200
 80025ac:	bf18      	it	ne
 80025ae:	b276      	sxtbne	r6, r6
 80025b0:	e7f2      	b.n	8002598 <_vfprintf_r+0x38c>
 80025b2:	3607      	adds	r6, #7
 80025b4:	f026 0307 	bic.w	r3, r6, #7
 80025b8:	4619      	mov	r1, r3
 80025ba:	e8f1 2302 	ldrd	r2, r3, [r1], #8
 80025be:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80025c2:	e9dd 6310 	ldrd	r6, r3, [sp, #64]	; 0x40
 80025c6:	f023 4500 	bic.w	r5, r3, #2147483648	; 0x80000000
 80025ca:	910a      	str	r1, [sp, #40]	; 0x28
 80025cc:	4b3d      	ldr	r3, [pc, #244]	; (80026c4 <_vfprintf_r+0x4b8>)
 80025ce:	f04f 32ff 	mov.w	r2, #4294967295
 80025d2:	4630      	mov	r0, r6
 80025d4:	4629      	mov	r1, r5
 80025d6:	f7fe fab9 	bl	8000b4c <__aeabi_dcmpun>
 80025da:	bb00      	cbnz	r0, 800261e <_vfprintf_r+0x412>
 80025dc:	4b39      	ldr	r3, [pc, #228]	; (80026c4 <_vfprintf_r+0x4b8>)
 80025de:	f04f 32ff 	mov.w	r2, #4294967295
 80025e2:	4630      	mov	r0, r6
 80025e4:	4629      	mov	r1, r5
 80025e6:	f7fe fa93 	bl	8000b10 <__aeabi_dcmple>
 80025ea:	b9c0      	cbnz	r0, 800261e <_vfprintf_r+0x412>
 80025ec:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80025f0:	2200      	movs	r2, #0
 80025f2:	2300      	movs	r3, #0
 80025f4:	f7fe fa82 	bl	8000afc <__aeabi_dcmplt>
 80025f8:	b110      	cbz	r0, 8002600 <_vfprintf_r+0x3f4>
 80025fa:	232d      	movs	r3, #45	; 0x2d
 80025fc:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 8002600:	4a31      	ldr	r2, [pc, #196]	; (80026c8 <_vfprintf_r+0x4bc>)
 8002602:	4832      	ldr	r0, [pc, #200]	; (80026cc <_vfprintf_r+0x4c0>)
 8002604:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002606:	2b47      	cmp	r3, #71	; 0x47
 8002608:	bfd4      	ite	le
 800260a:	4691      	movle	r9, r2
 800260c:	4681      	movgt	r9, r0
 800260e:	2303      	movs	r3, #3
 8002610:	f028 0880 	bic.w	r8, r8, #128	; 0x80
 8002614:	2700      	movs	r7, #0
 8002616:	9307      	str	r3, [sp, #28]
 8002618:	463e      	mov	r6, r7
 800261a:	f001 b80f 	b.w	800363c <_vfprintf_r+0x1430>
 800261e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8002622:	4610      	mov	r0, r2
 8002624:	4619      	mov	r1, r3
 8002626:	f7fe fa91 	bl	8000b4c <__aeabi_dcmpun>
 800262a:	4607      	mov	r7, r0
 800262c:	b140      	cbz	r0, 8002640 <_vfprintf_r+0x434>
 800262e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002630:	4a27      	ldr	r2, [pc, #156]	; (80026d0 <_vfprintf_r+0x4c4>)
 8002632:	4828      	ldr	r0, [pc, #160]	; (80026d4 <_vfprintf_r+0x4c8>)
 8002634:	2b00      	cmp	r3, #0
 8002636:	bfbc      	itt	lt
 8002638:	232d      	movlt	r3, #45	; 0x2d
 800263a:	f88d 307b 	strblt.w	r3, [sp, #123]	; 0x7b
 800263e:	e7e1      	b.n	8002604 <_vfprintf_r+0x3f8>
 8002640:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002642:	f023 0320 	bic.w	r3, r3, #32
 8002646:	2b41      	cmp	r3, #65	; 0x41
 8002648:	930c      	str	r3, [sp, #48]	; 0x30
 800264a:	d12e      	bne.n	80026aa <_vfprintf_r+0x49e>
 800264c:	2330      	movs	r3, #48	; 0x30
 800264e:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8002652:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002654:	2b61      	cmp	r3, #97	; 0x61
 8002656:	bf0c      	ite	eq
 8002658:	2378      	moveq	r3, #120	; 0x78
 800265a:	2358      	movne	r3, #88	; 0x58
 800265c:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 8002660:	9b07      	ldr	r3, [sp, #28]
 8002662:	2b63      	cmp	r3, #99	; 0x63
 8002664:	f048 0802 	orr.w	r8, r8, #2
 8002668:	dd36      	ble.n	80026d8 <_vfprintf_r+0x4cc>
 800266a:	1c59      	adds	r1, r3, #1
 800266c:	4658      	mov	r0, fp
 800266e:	f002 fb05 	bl	8004c7c <_malloc_r>
 8002672:	4681      	mov	r9, r0
 8002674:	2800      	cmp	r0, #0
 8002676:	f040 8203 	bne.w	8002a80 <_vfprintf_r+0x874>
 800267a:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 800267e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002682:	f8aa 300c 	strh.w	r3, [sl, #12]
 8002686:	f8da 3064 	ldr.w	r3, [sl, #100]	; 0x64
 800268a:	07d9      	lsls	r1, r3, #31
 800268c:	d407      	bmi.n	800269e <_vfprintf_r+0x492>
 800268e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 8002692:	059a      	lsls	r2, r3, #22
 8002694:	d403      	bmi.n	800269e <_vfprintf_r+0x492>
 8002696:	f8da 0058 	ldr.w	r0, [sl, #88]	; 0x58
 800269a:	f002 fa82 	bl	8004ba2 <__retarget_lock_release_recursive>
 800269e:	f8ba 300c 	ldrh.w	r3, [sl, #12]
 80026a2:	065b      	lsls	r3, r3, #25
 80026a4:	f57f adf8 	bpl.w	8002298 <_vfprintf_r+0x8c>
 80026a8:	e5f3      	b.n	8002292 <_vfprintf_r+0x86>
 80026aa:	9b07      	ldr	r3, [sp, #28]
 80026ac:	3301      	adds	r3, #1
 80026ae:	f000 81e9 	beq.w	8002a84 <_vfprintf_r+0x878>
 80026b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80026b4:	2b47      	cmp	r3, #71	; 0x47
 80026b6:	d111      	bne.n	80026dc <_vfprintf_r+0x4d0>
 80026b8:	9b07      	ldr	r3, [sp, #28]
 80026ba:	b97b      	cbnz	r3, 80026dc <_vfprintf_r+0x4d0>
 80026bc:	461f      	mov	r7, r3
 80026be:	2301      	movs	r3, #1
 80026c0:	9307      	str	r3, [sp, #28]
 80026c2:	e00b      	b.n	80026dc <_vfprintf_r+0x4d0>
 80026c4:	7fefffff 	.word	0x7fefffff
 80026c8:	08007220 	.word	0x08007220
 80026cc:	08007224 	.word	0x08007224
 80026d0:	08007228 	.word	0x08007228
 80026d4:	0800722c 	.word	0x0800722c
 80026d8:	f10d 09e4 	add.w	r9, sp, #228	; 0xe4
 80026dc:	f448 7380 	orr.w	r3, r8, #256	; 0x100
 80026e0:	9315      	str	r3, [sp, #84]	; 0x54
 80026e2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80026e4:	1e1d      	subs	r5, r3, #0
 80026e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80026e8:	9308      	str	r3, [sp, #32]
 80026ea:	bfbb      	ittet	lt
 80026ec:	462b      	movlt	r3, r5
 80026ee:	f103 4500 	addlt.w	r5, r3, #2147483648	; 0x80000000
 80026f2:	2300      	movge	r3, #0
 80026f4:	232d      	movlt	r3, #45	; 0x2d
 80026f6:	931c      	str	r3, [sp, #112]	; 0x70
 80026f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80026fa:	2b41      	cmp	r3, #65	; 0x41
 80026fc:	f040 81da 	bne.w	8002ab4 <_vfprintf_r+0x8a8>
 8002700:	aa20      	add	r2, sp, #128	; 0x80
 8002702:	9808      	ldr	r0, [sp, #32]
 8002704:	4629      	mov	r1, r5
 8002706:	f003 fa03 	bl	8005b10 <frexp>
 800270a:	2200      	movs	r2, #0
 800270c:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8002710:	f7fd ff82 	bl	8000618 <__aeabi_dmul>
 8002714:	4602      	mov	r2, r0
 8002716:	460b      	mov	r3, r1
 8002718:	e9cd 2308 	strd	r2, r3, [sp, #32]
 800271c:	2200      	movs	r2, #0
 800271e:	2300      	movs	r3, #0
 8002720:	f7fe f9e2 	bl	8000ae8 <__aeabi_dcmpeq>
 8002724:	b108      	cbz	r0, 800272a <_vfprintf_r+0x51e>
 8002726:	2301      	movs	r3, #1
 8002728:	9320      	str	r3, [sp, #128]	; 0x80
 800272a:	4bb3      	ldr	r3, [pc, #716]	; (80029f8 <_vfprintf_r+0x7ec>)
 800272c:	4eb3      	ldr	r6, [pc, #716]	; (80029fc <_vfprintf_r+0x7f0>)
 800272e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8002730:	2a61      	cmp	r2, #97	; 0x61
 8002732:	bf18      	it	ne
 8002734:	461e      	movne	r6, r3
 8002736:	9b07      	ldr	r3, [sp, #28]
 8002738:	9617      	str	r6, [sp, #92]	; 0x5c
 800273a:	464d      	mov	r5, r9
 800273c:	1e5e      	subs	r6, r3, #1
 800273e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8002742:	4baf      	ldr	r3, [pc, #700]	; (8002a00 <_vfprintf_r+0x7f4>)
 8002744:	2200      	movs	r2, #0
 8002746:	f7fd ff67 	bl	8000618 <__aeabi_dmul>
 800274a:	4602      	mov	r2, r0
 800274c:	460b      	mov	r3, r1
 800274e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002752:	f7fe fa11 	bl	8000b78 <__aeabi_d2iz>
 8002756:	901d      	str	r0, [sp, #116]	; 0x74
 8002758:	f7fd fef4 	bl	8000544 <__aeabi_i2d>
 800275c:	4602      	mov	r2, r0
 800275e:	460b      	mov	r3, r1
 8002760:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8002764:	f7fd fda0 	bl	80002a8 <__aeabi_dsub>
 8002768:	4602      	mov	r2, r0
 800276a:	460b      	mov	r3, r1
 800276c:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8002770:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002772:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8002774:	960d      	str	r6, [sp, #52]	; 0x34
 8002776:	5c9b      	ldrb	r3, [r3, r2]
 8002778:	f805 3b01 	strb.w	r3, [r5], #1
 800277c:	1c73      	adds	r3, r6, #1
 800277e:	d006      	beq.n	800278e <_vfprintf_r+0x582>
 8002780:	2200      	movs	r2, #0
 8002782:	2300      	movs	r3, #0
 8002784:	3e01      	subs	r6, #1
 8002786:	f7fe f9af 	bl	8000ae8 <__aeabi_dcmpeq>
 800278a:	2800      	cmp	r0, #0
 800278c:	d0d7      	beq.n	800273e <_vfprintf_r+0x532>
 800278e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8002792:	4b9c      	ldr	r3, [pc, #624]	; (8002a04 <_vfprintf_r+0x7f8>)
 8002794:	2200      	movs	r2, #0
 8002796:	f7fe f9cf 	bl	8000b38 <__aeabi_dcmpgt>
 800279a:	b960      	cbnz	r0, 80027b6 <_vfprintf_r+0x5aa>
 800279c:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 80027a0:	4b98      	ldr	r3, [pc, #608]	; (8002a04 <_vfprintf_r+0x7f8>)
 80027a2:	2200      	movs	r2, #0
 80027a4:	f7fe f9a0 	bl	8000ae8 <__aeabi_dcmpeq>
 80027a8:	2800      	cmp	r0, #0
 80027aa:	f000 817e 	beq.w	8002aaa <_vfprintf_r+0x89e>
 80027ae:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80027b0:	07da      	lsls	r2, r3, #31
 80027b2:	f140 817a 	bpl.w	8002aaa <_vfprintf_r+0x89e>
 80027b6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80027b8:	9524      	str	r5, [sp, #144]	; 0x90
 80027ba:	7bd9      	ldrb	r1, [r3, #15]
 80027bc:	2030      	movs	r0, #48	; 0x30
 80027be:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80027c0:	1e53      	subs	r3, r2, #1
 80027c2:	9324      	str	r3, [sp, #144]	; 0x90
 80027c4:	f812 3c01 	ldrb.w	r3, [r2, #-1]
 80027c8:	428b      	cmp	r3, r1
 80027ca:	f000 815d 	beq.w	8002a88 <_vfprintf_r+0x87c>
 80027ce:	2b39      	cmp	r3, #57	; 0x39
 80027d0:	bf0b      	itete	eq
 80027d2:	9b17      	ldreq	r3, [sp, #92]	; 0x5c
 80027d4:	3301      	addne	r3, #1
 80027d6:	7a9b      	ldrbeq	r3, [r3, #10]
 80027d8:	b2db      	uxtbne	r3, r3
 80027da:	f802 3c01 	strb.w	r3, [r2, #-1]
 80027de:	eba5 0309 	sub.w	r3, r5, r9
 80027e2:	9308      	str	r3, [sp, #32]
 80027e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80027e6:	9d20      	ldr	r5, [sp, #128]	; 0x80
 80027e8:	2b47      	cmp	r3, #71	; 0x47
 80027ea:	f040 81b0 	bne.w	8002b4e <_vfprintf_r+0x942>
 80027ee:	1ceb      	adds	r3, r5, #3
 80027f0:	db03      	blt.n	80027fa <_vfprintf_r+0x5ee>
 80027f2:	9b07      	ldr	r3, [sp, #28]
 80027f4:	429d      	cmp	r5, r3
 80027f6:	f340 81d5 	ble.w	8002ba4 <_vfprintf_r+0x998>
 80027fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80027fc:	3b02      	subs	r3, #2
 80027fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8002800:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002802:	f89d 202c 	ldrb.w	r2, [sp, #44]	; 0x2c
 8002806:	f021 0120 	bic.w	r1, r1, #32
 800280a:	2941      	cmp	r1, #65	; 0x41
 800280c:	bf08      	it	eq
 800280e:	320f      	addeq	r2, #15
 8002810:	f105 33ff 	add.w	r3, r5, #4294967295
 8002814:	bf06      	itte	eq
 8002816:	b2d2      	uxtbeq	r2, r2
 8002818:	2101      	moveq	r1, #1
 800281a:	2100      	movne	r1, #0
 800281c:	2b00      	cmp	r3, #0
 800281e:	9320      	str	r3, [sp, #128]	; 0x80
 8002820:	bfb8      	it	lt
 8002822:	f1c5 0301 	rsblt	r3, r5, #1
 8002826:	f88d 2088 	strb.w	r2, [sp, #136]	; 0x88
 800282a:	bfb4      	ite	lt
 800282c:	222d      	movlt	r2, #45	; 0x2d
 800282e:	222b      	movge	r2, #43	; 0x2b
 8002830:	2b09      	cmp	r3, #9
 8002832:	f88d 2089 	strb.w	r2, [sp, #137]	; 0x89
 8002836:	f340 81a3 	ble.w	8002b80 <_vfprintf_r+0x974>
 800283a:	f10d 0297 	add.w	r2, sp, #151	; 0x97
 800283e:	260a      	movs	r6, #10
 8002840:	4611      	mov	r1, r2
 8002842:	fb93 f5f6 	sdiv	r5, r3, r6
 8002846:	fb06 3015 	mls	r0, r6, r5, r3
 800284a:	3030      	adds	r0, #48	; 0x30
 800284c:	f801 0c01 	strb.w	r0, [r1, #-1]
 8002850:	4618      	mov	r0, r3
 8002852:	2863      	cmp	r0, #99	; 0x63
 8002854:	f102 32ff 	add.w	r2, r2, #4294967295
 8002858:	462b      	mov	r3, r5
 800285a:	dcf1      	bgt.n	8002840 <_vfprintf_r+0x634>
 800285c:	3330      	adds	r3, #48	; 0x30
 800285e:	1e88      	subs	r0, r1, #2
 8002860:	f802 3c01 	strb.w	r3, [r2, #-1]
 8002864:	f10d 0597 	add.w	r5, sp, #151	; 0x97
 8002868:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 800286c:	4603      	mov	r3, r0
 800286e:	42ab      	cmp	r3, r5
 8002870:	f0c0 8181 	bcc.w	8002b76 <_vfprintf_r+0x96a>
 8002874:	f10d 0299 	add.w	r2, sp, #153	; 0x99
 8002878:	1a52      	subs	r2, r2, r1
 800287a:	42a8      	cmp	r0, r5
 800287c:	bf88      	it	hi
 800287e:	2200      	movhi	r2, #0
 8002880:	f10d 038a 	add.w	r3, sp, #138	; 0x8a
 8002884:	441a      	add	r2, r3
 8002886:	ab22      	add	r3, sp, #136	; 0x88
 8002888:	1ad3      	subs	r3, r2, r3
 800288a:	9a08      	ldr	r2, [sp, #32]
 800288c:	931a      	str	r3, [sp, #104]	; 0x68
 800288e:	2a01      	cmp	r2, #1
 8002890:	4413      	add	r3, r2
 8002892:	9307      	str	r3, [sp, #28]
 8002894:	dc02      	bgt.n	800289c <_vfprintf_r+0x690>
 8002896:	f018 0f01 	tst.w	r8, #1
 800289a:	d003      	beq.n	80028a4 <_vfprintf_r+0x698>
 800289c:	9b07      	ldr	r3, [sp, #28]
 800289e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80028a0:	4413      	add	r3, r2
 80028a2:	9307      	str	r3, [sp, #28]
 80028a4:	f428 6380 	bic.w	r3, r8, #1024	; 0x400
 80028a8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80028ac:	9315      	str	r3, [sp, #84]	; 0x54
 80028ae:	2300      	movs	r3, #0
 80028b0:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 80028b4:	461d      	mov	r5, r3
 80028b6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80028b8:	b113      	cbz	r3, 80028c0 <_vfprintf_r+0x6b4>
 80028ba:	232d      	movs	r3, #45	; 0x2d
 80028bc:	f88d 307b 	strb.w	r3, [sp, #123]	; 0x7b
 80028c0:	f8dd 8054 	ldr.w	r8, [sp, #84]	; 0x54
 80028c4:	2600      	movs	r6, #0
 80028c6:	9b07      	ldr	r3, [sp, #28]
 80028c8:	42b3      	cmp	r3, r6
 80028ca:	bfb8      	it	lt
 80028cc:	4633      	movlt	r3, r6
 80028ce:	9315      	str	r3, [sp, #84]	; 0x54
 80028d0:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 80028d4:	b113      	cbz	r3, 80028dc <_vfprintf_r+0x6d0>
 80028d6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80028d8:	3301      	adds	r3, #1
 80028da:	9315      	str	r3, [sp, #84]	; 0x54
 80028dc:	f018 0302 	ands.w	r3, r8, #2
 80028e0:	931c      	str	r3, [sp, #112]	; 0x70
 80028e2:	bf1e      	ittt	ne
 80028e4:	9b15      	ldrne	r3, [sp, #84]	; 0x54
 80028e6:	3302      	addne	r3, #2
 80028e8:	9315      	strne	r3, [sp, #84]	; 0x54
 80028ea:	f018 0384 	ands.w	r3, r8, #132	; 0x84
 80028ee:	931d      	str	r3, [sp, #116]	; 0x74
 80028f0:	d122      	bne.n	8002938 <_vfprintf_r+0x72c>
 80028f2:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 80028f6:	1a9b      	subs	r3, r3, r2
 80028f8:	2b00      	cmp	r3, #0
 80028fa:	9317      	str	r3, [sp, #92]	; 0x5c
 80028fc:	dd1c      	ble.n	8002938 <_vfprintf_r+0x72c>
 80028fe:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8002900:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8002904:	2810      	cmp	r0, #16
 8002906:	4840      	ldr	r0, [pc, #256]	; (8002a08 <_vfprintf_r+0x7fc>)
 8002908:	6020      	str	r0, [r4, #0]
 800290a:	f103 0301 	add.w	r3, r3, #1
 800290e:	f104 0108 	add.w	r1, r4, #8
 8002912:	f300 82e0 	bgt.w	8002ed6 <_vfprintf_r+0xcca>
 8002916:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8002918:	6060      	str	r0, [r4, #4]
 800291a:	4402      	add	r2, r0
 800291c:	2b07      	cmp	r3, #7
 800291e:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002922:	f340 82ed 	ble.w	8002f00 <_vfprintf_r+0xcf4>
 8002926:	aa26      	add	r2, sp, #152	; 0x98
 8002928:	4651      	mov	r1, sl
 800292a:	4658      	mov	r0, fp
 800292c:	f003 f997 	bl	8005c5e <__sprint_r>
 8002930:	2800      	cmp	r0, #0
 8002932:	f040 8623 	bne.w	800357c <_vfprintf_r+0x1370>
 8002936:	ac29      	add	r4, sp, #164	; 0xa4
 8002938:	f89d 307b 	ldrb.w	r3, [sp, #123]	; 0x7b
 800293c:	b173      	cbz	r3, 800295c <_vfprintf_r+0x750>
 800293e:	f10d 037b 	add.w	r3, sp, #123	; 0x7b
 8002942:	6023      	str	r3, [r4, #0]
 8002944:	2301      	movs	r3, #1
 8002946:	6063      	str	r3, [r4, #4]
 8002948:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800294a:	3301      	adds	r3, #1
 800294c:	9328      	str	r3, [sp, #160]	; 0xa0
 800294e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002950:	3301      	adds	r3, #1
 8002952:	2b07      	cmp	r3, #7
 8002954:	9327      	str	r3, [sp, #156]	; 0x9c
 8002956:	f300 82d5 	bgt.w	8002f04 <_vfprintf_r+0xcf8>
 800295a:	3408      	adds	r4, #8
 800295c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800295e:	b16b      	cbz	r3, 800297c <_vfprintf_r+0x770>
 8002960:	ab1f      	add	r3, sp, #124	; 0x7c
 8002962:	6023      	str	r3, [r4, #0]
 8002964:	2302      	movs	r3, #2
 8002966:	6063      	str	r3, [r4, #4]
 8002968:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800296a:	3302      	adds	r3, #2
 800296c:	9328      	str	r3, [sp, #160]	; 0xa0
 800296e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002970:	3301      	adds	r3, #1
 8002972:	2b07      	cmp	r3, #7
 8002974:	9327      	str	r3, [sp, #156]	; 0x9c
 8002976:	f300 82cf 	bgt.w	8002f18 <_vfprintf_r+0xd0c>
 800297a:	3408      	adds	r4, #8
 800297c:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800297e:	2b80      	cmp	r3, #128	; 0x80
 8002980:	d122      	bne.n	80029c8 <_vfprintf_r+0x7bc>
 8002982:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 8002986:	1a9b      	subs	r3, r3, r2
 8002988:	2b00      	cmp	r3, #0
 800298a:	9317      	str	r3, [sp, #92]	; 0x5c
 800298c:	dd1c      	ble.n	80029c8 <_vfprintf_r+0x7bc>
 800298e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8002990:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8002994:	2810      	cmp	r0, #16
 8002996:	481d      	ldr	r0, [pc, #116]	; (8002a0c <_vfprintf_r+0x800>)
 8002998:	6020      	str	r0, [r4, #0]
 800299a:	f103 0301 	add.w	r3, r3, #1
 800299e:	f104 0108 	add.w	r1, r4, #8
 80029a2:	f300 82c3 	bgt.w	8002f2c <_vfprintf_r+0xd20>
 80029a6:	9817      	ldr	r0, [sp, #92]	; 0x5c
 80029a8:	6060      	str	r0, [r4, #4]
 80029aa:	4402      	add	r2, r0
 80029ac:	2b07      	cmp	r3, #7
 80029ae:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 80029b2:	f340 82d0 	ble.w	8002f56 <_vfprintf_r+0xd4a>
 80029b6:	aa26      	add	r2, sp, #152	; 0x98
 80029b8:	4651      	mov	r1, sl
 80029ba:	4658      	mov	r0, fp
 80029bc:	f003 f94f 	bl	8005c5e <__sprint_r>
 80029c0:	2800      	cmp	r0, #0
 80029c2:	f040 85db 	bne.w	800357c <_vfprintf_r+0x1370>
 80029c6:	ac29      	add	r4, sp, #164	; 0xa4
 80029c8:	9b07      	ldr	r3, [sp, #28]
 80029ca:	1af6      	subs	r6, r6, r3
 80029cc:	2e00      	cmp	r6, #0
 80029ce:	dd28      	ble.n	8002a22 <_vfprintf_r+0x816>
 80029d0:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 80029d4:	480d      	ldr	r0, [pc, #52]	; (8002a0c <_vfprintf_r+0x800>)
 80029d6:	6020      	str	r0, [r4, #0]
 80029d8:	2e10      	cmp	r6, #16
 80029da:	f103 0301 	add.w	r3, r3, #1
 80029de:	f104 0108 	add.w	r1, r4, #8
 80029e2:	f300 82ba 	bgt.w	8002f5a <_vfprintf_r+0xd4e>
 80029e6:	6066      	str	r6, [r4, #4]
 80029e8:	2b07      	cmp	r3, #7
 80029ea:	4416      	add	r6, r2
 80029ec:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 80029f0:	f340 82c6 	ble.w	8002f80 <_vfprintf_r+0xd74>
 80029f4:	e00c      	b.n	8002a10 <_vfprintf_r+0x804>
 80029f6:	bf00      	nop
 80029f8:	08007241 	.word	0x08007241
 80029fc:	08007230 	.word	0x08007230
 8002a00:	40300000 	.word	0x40300000
 8002a04:	3fe00000 	.word	0x3fe00000
 8002a08:	08007254 	.word	0x08007254
 8002a0c:	08007264 	.word	0x08007264
 8002a10:	aa26      	add	r2, sp, #152	; 0x98
 8002a12:	4651      	mov	r1, sl
 8002a14:	4658      	mov	r0, fp
 8002a16:	f003 f922 	bl	8005c5e <__sprint_r>
 8002a1a:	2800      	cmp	r0, #0
 8002a1c:	f040 85ae 	bne.w	800357c <_vfprintf_r+0x1370>
 8002a20:	ac29      	add	r4, sp, #164	; 0xa4
 8002a22:	f418 7f80 	tst.w	r8, #256	; 0x100
 8002a26:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8002a28:	f040 82b0 	bne.w	8002f8c <_vfprintf_r+0xd80>
 8002a2c:	9b07      	ldr	r3, [sp, #28]
 8002a2e:	f8c4 9000 	str.w	r9, [r4]
 8002a32:	441e      	add	r6, r3
 8002a34:	6063      	str	r3, [r4, #4]
 8002a36:	9628      	str	r6, [sp, #160]	; 0xa0
 8002a38:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002a3a:	3301      	adds	r3, #1
 8002a3c:	2b07      	cmp	r3, #7
 8002a3e:	9327      	str	r3, [sp, #156]	; 0x9c
 8002a40:	f300 82ea 	bgt.w	8003018 <_vfprintf_r+0xe0c>
 8002a44:	3408      	adds	r4, #8
 8002a46:	f018 0f04 	tst.w	r8, #4
 8002a4a:	f040 8578 	bne.w	800353e <_vfprintf_r+0x1332>
 8002a4e:	e9dd 3213 	ldrd	r3, r2, [sp, #76]	; 0x4c
 8002a52:	9915      	ldr	r1, [sp, #84]	; 0x54
 8002a54:	428a      	cmp	r2, r1
 8002a56:	bfac      	ite	ge
 8002a58:	189b      	addge	r3, r3, r2
 8002a5a:	185b      	addlt	r3, r3, r1
 8002a5c:	9313      	str	r3, [sp, #76]	; 0x4c
 8002a5e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002a60:	b13b      	cbz	r3, 8002a72 <_vfprintf_r+0x866>
 8002a62:	aa26      	add	r2, sp, #152	; 0x98
 8002a64:	4651      	mov	r1, sl
 8002a66:	4658      	mov	r0, fp
 8002a68:	f003 f8f9 	bl	8005c5e <__sprint_r>
 8002a6c:	2800      	cmp	r0, #0
 8002a6e:	f040 8585 	bne.w	800357c <_vfprintf_r+0x1370>
 8002a72:	2300      	movs	r3, #0
 8002a74:	9327      	str	r3, [sp, #156]	; 0x9c
 8002a76:	2f00      	cmp	r7, #0
 8002a78:	f040 859c 	bne.w	80035b4 <_vfprintf_r+0x13a8>
 8002a7c:	ac29      	add	r4, sp, #164	; 0xa4
 8002a7e:	e0e7      	b.n	8002c50 <_vfprintf_r+0xa44>
 8002a80:	4607      	mov	r7, r0
 8002a82:	e62b      	b.n	80026dc <_vfprintf_r+0x4d0>
 8002a84:	2306      	movs	r3, #6
 8002a86:	e61b      	b.n	80026c0 <_vfprintf_r+0x4b4>
 8002a88:	f802 0c01 	strb.w	r0, [r2, #-1]
 8002a8c:	e697      	b.n	80027be <_vfprintf_r+0x5b2>
 8002a8e:	f803 0b01 	strb.w	r0, [r3], #1
 8002a92:	1aca      	subs	r2, r1, r3
 8002a94:	2a00      	cmp	r2, #0
 8002a96:	dafa      	bge.n	8002a8e <_vfprintf_r+0x882>
 8002a98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002a9a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002a9c:	3201      	adds	r2, #1
 8002a9e:	f103 0301 	add.w	r3, r3, #1
 8002aa2:	bfb8      	it	lt
 8002aa4:	2300      	movlt	r3, #0
 8002aa6:	441d      	add	r5, r3
 8002aa8:	e699      	b.n	80027de <_vfprintf_r+0x5d2>
 8002aaa:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002aac:	462b      	mov	r3, r5
 8002aae:	18a9      	adds	r1, r5, r2
 8002ab0:	2030      	movs	r0, #48	; 0x30
 8002ab2:	e7ee      	b.n	8002a92 <_vfprintf_r+0x886>
 8002ab4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002ab6:	2b46      	cmp	r3, #70	; 0x46
 8002ab8:	d005      	beq.n	8002ac6 <_vfprintf_r+0x8ba>
 8002aba:	2b45      	cmp	r3, #69	; 0x45
 8002abc:	d11b      	bne.n	8002af6 <_vfprintf_r+0x8ea>
 8002abe:	9b07      	ldr	r3, [sp, #28]
 8002ac0:	1c5e      	adds	r6, r3, #1
 8002ac2:	2302      	movs	r3, #2
 8002ac4:	e001      	b.n	8002aca <_vfprintf_r+0x8be>
 8002ac6:	9e07      	ldr	r6, [sp, #28]
 8002ac8:	2303      	movs	r3, #3
 8002aca:	aa24      	add	r2, sp, #144	; 0x90
 8002acc:	9204      	str	r2, [sp, #16]
 8002ace:	aa21      	add	r2, sp, #132	; 0x84
 8002ad0:	9203      	str	r2, [sp, #12]
 8002ad2:	aa20      	add	r2, sp, #128	; 0x80
 8002ad4:	e9cd 6201 	strd	r6, r2, [sp, #4]
 8002ad8:	9300      	str	r3, [sp, #0]
 8002ada:	9a08      	ldr	r2, [sp, #32]
 8002adc:	462b      	mov	r3, r5
 8002ade:	4658      	mov	r0, fp
 8002ae0:	f000 feea 	bl	80038b8 <_dtoa_r>
 8002ae4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002ae6:	2b47      	cmp	r3, #71	; 0x47
 8002ae8:	4681      	mov	r9, r0
 8002aea:	d106      	bne.n	8002afa <_vfprintf_r+0x8ee>
 8002aec:	f018 0f01 	tst.w	r8, #1
 8002af0:	d103      	bne.n	8002afa <_vfprintf_r+0x8ee>
 8002af2:	9d24      	ldr	r5, [sp, #144]	; 0x90
 8002af4:	e673      	b.n	80027de <_vfprintf_r+0x5d2>
 8002af6:	9e07      	ldr	r6, [sp, #28]
 8002af8:	e7e3      	b.n	8002ac2 <_vfprintf_r+0x8b6>
 8002afa:	eb09 0306 	add.w	r3, r9, r6
 8002afe:	930d      	str	r3, [sp, #52]	; 0x34
 8002b00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b02:	2b46      	cmp	r3, #70	; 0x46
 8002b04:	d111      	bne.n	8002b2a <_vfprintf_r+0x91e>
 8002b06:	f899 3000 	ldrb.w	r3, [r9]
 8002b0a:	2b30      	cmp	r3, #48	; 0x30
 8002b0c:	d109      	bne.n	8002b22 <_vfprintf_r+0x916>
 8002b0e:	9808      	ldr	r0, [sp, #32]
 8002b10:	2200      	movs	r2, #0
 8002b12:	2300      	movs	r3, #0
 8002b14:	4629      	mov	r1, r5
 8002b16:	f7fd ffe7 	bl	8000ae8 <__aeabi_dcmpeq>
 8002b1a:	b910      	cbnz	r0, 8002b22 <_vfprintf_r+0x916>
 8002b1c:	f1c6 0601 	rsb	r6, r6, #1
 8002b20:	9620      	str	r6, [sp, #128]	; 0x80
 8002b22:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8002b24:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002b26:	441a      	add	r2, r3
 8002b28:	920d      	str	r2, [sp, #52]	; 0x34
 8002b2a:	9808      	ldr	r0, [sp, #32]
 8002b2c:	2200      	movs	r2, #0
 8002b2e:	2300      	movs	r3, #0
 8002b30:	4629      	mov	r1, r5
 8002b32:	f7fd ffd9 	bl	8000ae8 <__aeabi_dcmpeq>
 8002b36:	b108      	cbz	r0, 8002b3c <_vfprintf_r+0x930>
 8002b38:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002b3a:	9324      	str	r3, [sp, #144]	; 0x90
 8002b3c:	2230      	movs	r2, #48	; 0x30
 8002b3e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8002b40:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002b42:	4299      	cmp	r1, r3
 8002b44:	d9d5      	bls.n	8002af2 <_vfprintf_r+0x8e6>
 8002b46:	1c59      	adds	r1, r3, #1
 8002b48:	9124      	str	r1, [sp, #144]	; 0x90
 8002b4a:	701a      	strb	r2, [r3, #0]
 8002b4c:	e7f7      	b.n	8002b3e <_vfprintf_r+0x932>
 8002b4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002b50:	2b46      	cmp	r3, #70	; 0x46
 8002b52:	f47f ae55 	bne.w	8002800 <_vfprintf_r+0x5f4>
 8002b56:	9a07      	ldr	r2, [sp, #28]
 8002b58:	f008 0301 	and.w	r3, r8, #1
 8002b5c:	2d00      	cmp	r5, #0
 8002b5e:	ea43 0302 	orr.w	r3, r3, r2
 8002b62:	dd1a      	ble.n	8002b9a <_vfprintf_r+0x98e>
 8002b64:	2b00      	cmp	r3, #0
 8002b66:	d034      	beq.n	8002bd2 <_vfprintf_r+0x9c6>
 8002b68:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002b6a:	18eb      	adds	r3, r5, r3
 8002b6c:	441a      	add	r2, r3
 8002b6e:	9207      	str	r2, [sp, #28]
 8002b70:	2366      	movs	r3, #102	; 0x66
 8002b72:	930b      	str	r3, [sp, #44]	; 0x2c
 8002b74:	e033      	b.n	8002bde <_vfprintf_r+0x9d2>
 8002b76:	f813 6b01 	ldrb.w	r6, [r3], #1
 8002b7a:	f802 6b01 	strb.w	r6, [r2], #1
 8002b7e:	e676      	b.n	800286e <_vfprintf_r+0x662>
 8002b80:	b941      	cbnz	r1, 8002b94 <_vfprintf_r+0x988>
 8002b82:	2230      	movs	r2, #48	; 0x30
 8002b84:	f88d 208a 	strb.w	r2, [sp, #138]	; 0x8a
 8002b88:	f10d 028b 	add.w	r2, sp, #139	; 0x8b
 8002b8c:	3330      	adds	r3, #48	; 0x30
 8002b8e:	f802 3b01 	strb.w	r3, [r2], #1
 8002b92:	e678      	b.n	8002886 <_vfprintf_r+0x67a>
 8002b94:	f10d 028a 	add.w	r2, sp, #138	; 0x8a
 8002b98:	e7f8      	b.n	8002b8c <_vfprintf_r+0x980>
 8002b9a:	b1e3      	cbz	r3, 8002bd6 <_vfprintf_r+0x9ca>
 8002b9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002b9e:	9a07      	ldr	r2, [sp, #28]
 8002ba0:	3301      	adds	r3, #1
 8002ba2:	e7e3      	b.n	8002b6c <_vfprintf_r+0x960>
 8002ba4:	9b08      	ldr	r3, [sp, #32]
 8002ba6:	429d      	cmp	r5, r3
 8002ba8:	db07      	blt.n	8002bba <_vfprintf_r+0x9ae>
 8002baa:	f018 0f01 	tst.w	r8, #1
 8002bae:	d02d      	beq.n	8002c0c <_vfprintf_r+0xa00>
 8002bb0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002bb2:	18eb      	adds	r3, r5, r3
 8002bb4:	9307      	str	r3, [sp, #28]
 8002bb6:	2367      	movs	r3, #103	; 0x67
 8002bb8:	e7db      	b.n	8002b72 <_vfprintf_r+0x966>
 8002bba:	9b08      	ldr	r3, [sp, #32]
 8002bbc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002bbe:	2d00      	cmp	r5, #0
 8002bc0:	4413      	add	r3, r2
 8002bc2:	9307      	str	r3, [sp, #28]
 8002bc4:	dcf7      	bgt.n	8002bb6 <_vfprintf_r+0x9aa>
 8002bc6:	9a07      	ldr	r2, [sp, #28]
 8002bc8:	f1c5 0301 	rsb	r3, r5, #1
 8002bcc:	441a      	add	r2, r3
 8002bce:	4613      	mov	r3, r2
 8002bd0:	e7f0      	b.n	8002bb4 <_vfprintf_r+0x9a8>
 8002bd2:	9507      	str	r5, [sp, #28]
 8002bd4:	e7cc      	b.n	8002b70 <_vfprintf_r+0x964>
 8002bd6:	2366      	movs	r3, #102	; 0x66
 8002bd8:	930b      	str	r3, [sp, #44]	; 0x2c
 8002bda:	2301      	movs	r3, #1
 8002bdc:	9307      	str	r3, [sp, #28]
 8002bde:	f418 6380 	ands.w	r3, r8, #1024	; 0x400
 8002be2:	930d      	str	r3, [sp, #52]	; 0x34
 8002be4:	d025      	beq.n	8002c32 <_vfprintf_r+0xa26>
 8002be6:	2300      	movs	r3, #0
 8002be8:	2d00      	cmp	r5, #0
 8002bea:	e9cd 330c 	strd	r3, r3, [sp, #48]	; 0x30
 8002bee:	f77f ae62 	ble.w	80028b6 <_vfprintf_r+0x6aa>
 8002bf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002bf4:	781b      	ldrb	r3, [r3, #0]
 8002bf6:	2bff      	cmp	r3, #255	; 0xff
 8002bf8:	d10a      	bne.n	8002c10 <_vfprintf_r+0xa04>
 8002bfa:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8002bfe:	9907      	ldr	r1, [sp, #28]
 8002c00:	4413      	add	r3, r2
 8002c02:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8002c04:	fb02 1303 	mla	r3, r2, r3, r1
 8002c08:	9307      	str	r3, [sp, #28]
 8002c0a:	e654      	b.n	80028b6 <_vfprintf_r+0x6aa>
 8002c0c:	9507      	str	r5, [sp, #28]
 8002c0e:	e7d2      	b.n	8002bb6 <_vfprintf_r+0x9aa>
 8002c10:	42ab      	cmp	r3, r5
 8002c12:	daf2      	bge.n	8002bfa <_vfprintf_r+0x9ee>
 8002c14:	1aed      	subs	r5, r5, r3
 8002c16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002c18:	785b      	ldrb	r3, [r3, #1]
 8002c1a:	b133      	cbz	r3, 8002c2a <_vfprintf_r+0xa1e>
 8002c1c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002c1e:	3301      	adds	r3, #1
 8002c20:	930d      	str	r3, [sp, #52]	; 0x34
 8002c22:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002c24:	3301      	adds	r3, #1
 8002c26:	930e      	str	r3, [sp, #56]	; 0x38
 8002c28:	e7e3      	b.n	8002bf2 <_vfprintf_r+0x9e6>
 8002c2a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002c2c:	3301      	adds	r3, #1
 8002c2e:	930c      	str	r3, [sp, #48]	; 0x30
 8002c30:	e7df      	b.n	8002bf2 <_vfprintf_r+0x9e6>
 8002c32:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002c34:	930c      	str	r3, [sp, #48]	; 0x30
 8002c36:	e63e      	b.n	80028b6 <_vfprintf_r+0x6aa>
 8002c38:	4632      	mov	r2, r6
 8002c3a:	f018 0f20 	tst.w	r8, #32
 8002c3e:	f852 3b04 	ldr.w	r3, [r2], #4
 8002c42:	920a      	str	r2, [sp, #40]	; 0x28
 8002c44:	d009      	beq.n	8002c5a <_vfprintf_r+0xa4e>
 8002c46:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002c48:	4610      	mov	r0, r2
 8002c4a:	17d1      	asrs	r1, r2, #31
 8002c4c:	e9c3 0100 	strd	r0, r1, [r3]
 8002c50:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8002c52:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8002c56:	f7ff bb58 	b.w	800230a <_vfprintf_r+0xfe>
 8002c5a:	f018 0f10 	tst.w	r8, #16
 8002c5e:	d002      	beq.n	8002c66 <_vfprintf_r+0xa5a>
 8002c60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002c62:	601a      	str	r2, [r3, #0]
 8002c64:	e7f4      	b.n	8002c50 <_vfprintf_r+0xa44>
 8002c66:	f018 0f40 	tst.w	r8, #64	; 0x40
 8002c6a:	d002      	beq.n	8002c72 <_vfprintf_r+0xa66>
 8002c6c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002c6e:	801a      	strh	r2, [r3, #0]
 8002c70:	e7ee      	b.n	8002c50 <_vfprintf_r+0xa44>
 8002c72:	f418 7f00 	tst.w	r8, #512	; 0x200
 8002c76:	d0f3      	beq.n	8002c60 <_vfprintf_r+0xa54>
 8002c78:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8002c7a:	701a      	strb	r2, [r3, #0]
 8002c7c:	e7e8      	b.n	8002c50 <_vfprintf_r+0xa44>
 8002c7e:	f048 0810 	orr.w	r8, r8, #16
 8002c82:	f018 0f20 	tst.w	r8, #32
 8002c86:	d01e      	beq.n	8002cc6 <_vfprintf_r+0xaba>
 8002c88:	3607      	adds	r6, #7
 8002c8a:	f026 0307 	bic.w	r3, r6, #7
 8002c8e:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 8002c92:	930a      	str	r3, [sp, #40]	; 0x28
 8002c94:	f428 6880 	bic.w	r8, r8, #1024	; 0x400
 8002c98:	2300      	movs	r3, #0
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	f88d 207b 	strb.w	r2, [sp, #123]	; 0x7b
 8002ca0:	9a07      	ldr	r2, [sp, #28]
 8002ca2:	3201      	adds	r2, #1
 8002ca4:	f000 849b 	beq.w	80035de <_vfprintf_r+0x13d2>
 8002ca8:	f028 0280 	bic.w	r2, r8, #128	; 0x80
 8002cac:	920c      	str	r2, [sp, #48]	; 0x30
 8002cae:	ea56 0207 	orrs.w	r2, r6, r7
 8002cb2:	f040 849a 	bne.w	80035ea <_vfprintf_r+0x13de>
 8002cb6:	9a07      	ldr	r2, [sp, #28]
 8002cb8:	2a00      	cmp	r2, #0
 8002cba:	f000 80f5 	beq.w	8002ea8 <_vfprintf_r+0xc9c>
 8002cbe:	2b01      	cmp	r3, #1
 8002cc0:	f040 8496 	bne.w	80035f0 <_vfprintf_r+0x13e4>
 8002cc4:	e097      	b.n	8002df6 <_vfprintf_r+0xbea>
 8002cc6:	1d33      	adds	r3, r6, #4
 8002cc8:	f018 0f10 	tst.w	r8, #16
 8002ccc:	930a      	str	r3, [sp, #40]	; 0x28
 8002cce:	d001      	beq.n	8002cd4 <_vfprintf_r+0xac8>
 8002cd0:	6836      	ldr	r6, [r6, #0]
 8002cd2:	e003      	b.n	8002cdc <_vfprintf_r+0xad0>
 8002cd4:	f018 0f40 	tst.w	r8, #64	; 0x40
 8002cd8:	d002      	beq.n	8002ce0 <_vfprintf_r+0xad4>
 8002cda:	8836      	ldrh	r6, [r6, #0]
 8002cdc:	2700      	movs	r7, #0
 8002cde:	e7d9      	b.n	8002c94 <_vfprintf_r+0xa88>
 8002ce0:	f418 7f00 	tst.w	r8, #512	; 0x200
 8002ce4:	d0f4      	beq.n	8002cd0 <_vfprintf_r+0xac4>
 8002ce6:	7836      	ldrb	r6, [r6, #0]
 8002ce8:	e7f8      	b.n	8002cdc <_vfprintf_r+0xad0>
 8002cea:	4633      	mov	r3, r6
 8002cec:	2278      	movs	r2, #120	; 0x78
 8002cee:	f853 6b04 	ldr.w	r6, [r3], #4
 8002cf2:	930a      	str	r3, [sp, #40]	; 0x28
 8002cf4:	f647 0330 	movw	r3, #30768	; 0x7830
 8002cf8:	f8ad 307c 	strh.w	r3, [sp, #124]	; 0x7c
 8002cfc:	4ba1      	ldr	r3, [pc, #644]	; (8002f84 <_vfprintf_r+0xd78>)
 8002cfe:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d00:	2700      	movs	r7, #0
 8002d02:	f048 0802 	orr.w	r8, r8, #2
 8002d06:	2302      	movs	r3, #2
 8002d08:	920b      	str	r2, [sp, #44]	; 0x2c
 8002d0a:	e7c6      	b.n	8002c9a <_vfprintf_r+0xa8e>
 8002d0c:	4633      	mov	r3, r6
 8002d0e:	2500      	movs	r5, #0
 8002d10:	f853 9b04 	ldr.w	r9, [r3], #4
 8002d14:	930a      	str	r3, [sp, #40]	; 0x28
 8002d16:	9b07      	ldr	r3, [sp, #28]
 8002d18:	f88d 507b 	strb.w	r5, [sp, #123]	; 0x7b
 8002d1c:	1c5e      	adds	r6, r3, #1
 8002d1e:	d010      	beq.n	8002d42 <_vfprintf_r+0xb36>
 8002d20:	461a      	mov	r2, r3
 8002d22:	4629      	mov	r1, r5
 8002d24:	4648      	mov	r0, r9
 8002d26:	f7fd fa6b 	bl	8000200 <memchr>
 8002d2a:	4607      	mov	r7, r0
 8002d2c:	2800      	cmp	r0, #0
 8002d2e:	f43f ac73 	beq.w	8002618 <_vfprintf_r+0x40c>
 8002d32:	eba0 0309 	sub.w	r3, r0, r9
 8002d36:	e9cd 550c 	strd	r5, r5, [sp, #48]	; 0x30
 8002d3a:	9307      	str	r3, [sp, #28]
 8002d3c:	462f      	mov	r7, r5
 8002d3e:	462e      	mov	r6, r5
 8002d40:	e5c1      	b.n	80028c6 <_vfprintf_r+0x6ba>
 8002d42:	4648      	mov	r0, r9
 8002d44:	f7fd fa54 	bl	80001f0 <strlen>
 8002d48:	462f      	mov	r7, r5
 8002d4a:	9007      	str	r0, [sp, #28]
 8002d4c:	e464      	b.n	8002618 <_vfprintf_r+0x40c>
 8002d4e:	f048 0810 	orr.w	r8, r8, #16
 8002d52:	f018 0f20 	tst.w	r8, #32
 8002d56:	d007      	beq.n	8002d68 <_vfprintf_r+0xb5c>
 8002d58:	3607      	adds	r6, #7
 8002d5a:	f026 0307 	bic.w	r3, r6, #7
 8002d5e:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 8002d62:	930a      	str	r3, [sp, #40]	; 0x28
 8002d64:	2301      	movs	r3, #1
 8002d66:	e798      	b.n	8002c9a <_vfprintf_r+0xa8e>
 8002d68:	1d33      	adds	r3, r6, #4
 8002d6a:	f018 0f10 	tst.w	r8, #16
 8002d6e:	930a      	str	r3, [sp, #40]	; 0x28
 8002d70:	d001      	beq.n	8002d76 <_vfprintf_r+0xb6a>
 8002d72:	6836      	ldr	r6, [r6, #0]
 8002d74:	e003      	b.n	8002d7e <_vfprintf_r+0xb72>
 8002d76:	f018 0f40 	tst.w	r8, #64	; 0x40
 8002d7a:	d002      	beq.n	8002d82 <_vfprintf_r+0xb76>
 8002d7c:	8836      	ldrh	r6, [r6, #0]
 8002d7e:	2700      	movs	r7, #0
 8002d80:	e7f0      	b.n	8002d64 <_vfprintf_r+0xb58>
 8002d82:	f418 7f00 	tst.w	r8, #512	; 0x200
 8002d86:	d0f4      	beq.n	8002d72 <_vfprintf_r+0xb66>
 8002d88:	7836      	ldrb	r6, [r6, #0]
 8002d8a:	e7f8      	b.n	8002d7e <_vfprintf_r+0xb72>
 8002d8c:	4b7e      	ldr	r3, [pc, #504]	; (8002f88 <_vfprintf_r+0xd7c>)
 8002d8e:	931b      	str	r3, [sp, #108]	; 0x6c
 8002d90:	f018 0f20 	tst.w	r8, #32
 8002d94:	d019      	beq.n	8002dca <_vfprintf_r+0xbbe>
 8002d96:	3607      	adds	r6, #7
 8002d98:	f026 0307 	bic.w	r3, r6, #7
 8002d9c:	e8f3 6702 	ldrd	r6, r7, [r3], #8
 8002da0:	930a      	str	r3, [sp, #40]	; 0x28
 8002da2:	f018 0f01 	tst.w	r8, #1
 8002da6:	d00a      	beq.n	8002dbe <_vfprintf_r+0xbb2>
 8002da8:	ea56 0307 	orrs.w	r3, r6, r7
 8002dac:	d007      	beq.n	8002dbe <_vfprintf_r+0xbb2>
 8002dae:	2330      	movs	r3, #48	; 0x30
 8002db0:	f88d 307c 	strb.w	r3, [sp, #124]	; 0x7c
 8002db4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002db6:	f88d 307d 	strb.w	r3, [sp, #125]	; 0x7d
 8002dba:	f048 0802 	orr.w	r8, r8, #2
 8002dbe:	f428 6880 	bic.w	r8, r8, #1024	; 0x400
 8002dc2:	2302      	movs	r3, #2
 8002dc4:	e769      	b.n	8002c9a <_vfprintf_r+0xa8e>
 8002dc6:	4b6f      	ldr	r3, [pc, #444]	; (8002f84 <_vfprintf_r+0xd78>)
 8002dc8:	e7e1      	b.n	8002d8e <_vfprintf_r+0xb82>
 8002dca:	1d33      	adds	r3, r6, #4
 8002dcc:	f018 0f10 	tst.w	r8, #16
 8002dd0:	930a      	str	r3, [sp, #40]	; 0x28
 8002dd2:	d001      	beq.n	8002dd8 <_vfprintf_r+0xbcc>
 8002dd4:	6836      	ldr	r6, [r6, #0]
 8002dd6:	e003      	b.n	8002de0 <_vfprintf_r+0xbd4>
 8002dd8:	f018 0f40 	tst.w	r8, #64	; 0x40
 8002ddc:	d002      	beq.n	8002de4 <_vfprintf_r+0xbd8>
 8002dde:	8836      	ldrh	r6, [r6, #0]
 8002de0:	2700      	movs	r7, #0
 8002de2:	e7de      	b.n	8002da2 <_vfprintf_r+0xb96>
 8002de4:	f418 7f00 	tst.w	r8, #512	; 0x200
 8002de8:	d0f4      	beq.n	8002dd4 <_vfprintf_r+0xbc8>
 8002dea:	7836      	ldrb	r6, [r6, #0]
 8002dec:	e7f8      	b.n	8002de0 <_vfprintf_r+0xbd4>
 8002dee:	2f00      	cmp	r7, #0
 8002df0:	bf08      	it	eq
 8002df2:	2e0a      	cmpeq	r6, #10
 8002df4:	d206      	bcs.n	8002e04 <_vfprintf_r+0xbf8>
 8002df6:	3630      	adds	r6, #48	; 0x30
 8002df8:	f88d 6147 	strb.w	r6, [sp, #327]	; 0x147
 8002dfc:	f20d 1947 	addw	r9, sp, #327	; 0x147
 8002e00:	f000 bc14 	b.w	800362c <_vfprintf_r+0x1420>
 8002e04:	2300      	movs	r3, #0
 8002e06:	9308      	str	r3, [sp, #32]
 8002e08:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002e0a:	ad52      	add	r5, sp, #328	; 0x148
 8002e0c:	f403 6880 	and.w	r8, r3, #1024	; 0x400
 8002e10:	220a      	movs	r2, #10
 8002e12:	2300      	movs	r3, #0
 8002e14:	4630      	mov	r0, r6
 8002e16:	4639      	mov	r1, r7
 8002e18:	f7fd fed6 	bl	8000bc8 <__aeabi_uldivmod>
 8002e1c:	9b08      	ldr	r3, [sp, #32]
 8002e1e:	3230      	adds	r2, #48	; 0x30
 8002e20:	3301      	adds	r3, #1
 8002e22:	f105 39ff 	add.w	r9, r5, #4294967295
 8002e26:	f805 2c01 	strb.w	r2, [r5, #-1]
 8002e2a:	9308      	str	r3, [sp, #32]
 8002e2c:	f1b8 0f00 	cmp.w	r8, #0
 8002e30:	d019      	beq.n	8002e66 <_vfprintf_r+0xc5a>
 8002e32:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002e34:	9a08      	ldr	r2, [sp, #32]
 8002e36:	781b      	ldrb	r3, [r3, #0]
 8002e38:	429a      	cmp	r2, r3
 8002e3a:	d114      	bne.n	8002e66 <_vfprintf_r+0xc5a>
 8002e3c:	2aff      	cmp	r2, #255	; 0xff
 8002e3e:	d012      	beq.n	8002e66 <_vfprintf_r+0xc5a>
 8002e40:	2f00      	cmp	r7, #0
 8002e42:	bf08      	it	eq
 8002e44:	2e0a      	cmpeq	r6, #10
 8002e46:	d30e      	bcc.n	8002e66 <_vfprintf_r+0xc5a>
 8002e48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002e4a:	9919      	ldr	r1, [sp, #100]	; 0x64
 8002e4c:	eba9 0903 	sub.w	r9, r9, r3
 8002e50:	461a      	mov	r2, r3
 8002e52:	4648      	mov	r0, r9
 8002e54:	f002 fee3 	bl	8005c1e <strncpy>
 8002e58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002e5a:	785d      	ldrb	r5, [r3, #1]
 8002e5c:	b195      	cbz	r5, 8002e84 <_vfprintf_r+0xc78>
 8002e5e:	3301      	adds	r3, #1
 8002e60:	930e      	str	r3, [sp, #56]	; 0x38
 8002e62:	2300      	movs	r3, #0
 8002e64:	9308      	str	r3, [sp, #32]
 8002e66:	220a      	movs	r2, #10
 8002e68:	2300      	movs	r3, #0
 8002e6a:	4630      	mov	r0, r6
 8002e6c:	4639      	mov	r1, r7
 8002e6e:	f7fd feab 	bl	8000bc8 <__aeabi_uldivmod>
 8002e72:	2f00      	cmp	r7, #0
 8002e74:	bf08      	it	eq
 8002e76:	2e0a      	cmpeq	r6, #10
 8002e78:	f0c0 83d8 	bcc.w	800362c <_vfprintf_r+0x1420>
 8002e7c:	4606      	mov	r6, r0
 8002e7e:	460f      	mov	r7, r1
 8002e80:	464d      	mov	r5, r9
 8002e82:	e7c5      	b.n	8002e10 <_vfprintf_r+0xc04>
 8002e84:	9508      	str	r5, [sp, #32]
 8002e86:	e7ee      	b.n	8002e66 <_vfprintf_r+0xc5a>
 8002e88:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002e8a:	f006 030f 	and.w	r3, r6, #15
 8002e8e:	5cd3      	ldrb	r3, [r2, r3]
 8002e90:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8002e94:	0933      	lsrs	r3, r6, #4
 8002e96:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
 8002e9a:	093a      	lsrs	r2, r7, #4
 8002e9c:	461e      	mov	r6, r3
 8002e9e:	4617      	mov	r7, r2
 8002ea0:	ea56 0307 	orrs.w	r3, r6, r7
 8002ea4:	d1f0      	bne.n	8002e88 <_vfprintf_r+0xc7c>
 8002ea6:	e3c1      	b.n	800362c <_vfprintf_r+0x1420>
 8002ea8:	b933      	cbnz	r3, 8002eb8 <_vfprintf_r+0xcac>
 8002eaa:	f018 0f01 	tst.w	r8, #1
 8002eae:	d003      	beq.n	8002eb8 <_vfprintf_r+0xcac>
 8002eb0:	2330      	movs	r3, #48	; 0x30
 8002eb2:	f88d 3147 	strb.w	r3, [sp, #327]	; 0x147
 8002eb6:	e7a1      	b.n	8002dfc <_vfprintf_r+0xbf0>
 8002eb8:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 8002ebc:	e3b6      	b.n	800362c <_vfprintf_r+0x1420>
 8002ebe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002ec0:	2b00      	cmp	r3, #0
 8002ec2:	f000 837d 	beq.w	80035c0 <_vfprintf_r+0x13b4>
 8002ec6:	2000      	movs	r0, #0
 8002ec8:	f88d 30e4 	strb.w	r3, [sp, #228]	; 0xe4
 8002ecc:	f88d 007b 	strb.w	r0, [sp, #123]	; 0x7b
 8002ed0:	960a      	str	r6, [sp, #40]	; 0x28
 8002ed2:	f7ff bb39 	b.w	8002548 <_vfprintf_r+0x33c>
 8002ed6:	2010      	movs	r0, #16
 8002ed8:	4402      	add	r2, r0
 8002eda:	2b07      	cmp	r3, #7
 8002edc:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002ee0:	6060      	str	r0, [r4, #4]
 8002ee2:	dd08      	ble.n	8002ef6 <_vfprintf_r+0xcea>
 8002ee4:	aa26      	add	r2, sp, #152	; 0x98
 8002ee6:	4651      	mov	r1, sl
 8002ee8:	4658      	mov	r0, fp
 8002eea:	f002 feb8 	bl	8005c5e <__sprint_r>
 8002eee:	2800      	cmp	r0, #0
 8002ef0:	f040 8344 	bne.w	800357c <_vfprintf_r+0x1370>
 8002ef4:	a929      	add	r1, sp, #164	; 0xa4
 8002ef6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002ef8:	3b10      	subs	r3, #16
 8002efa:	9317      	str	r3, [sp, #92]	; 0x5c
 8002efc:	460c      	mov	r4, r1
 8002efe:	e4fe      	b.n	80028fe <_vfprintf_r+0x6f2>
 8002f00:	460c      	mov	r4, r1
 8002f02:	e519      	b.n	8002938 <_vfprintf_r+0x72c>
 8002f04:	aa26      	add	r2, sp, #152	; 0x98
 8002f06:	4651      	mov	r1, sl
 8002f08:	4658      	mov	r0, fp
 8002f0a:	f002 fea8 	bl	8005c5e <__sprint_r>
 8002f0e:	2800      	cmp	r0, #0
 8002f10:	f040 8334 	bne.w	800357c <_vfprintf_r+0x1370>
 8002f14:	ac29      	add	r4, sp, #164	; 0xa4
 8002f16:	e521      	b.n	800295c <_vfprintf_r+0x750>
 8002f18:	aa26      	add	r2, sp, #152	; 0x98
 8002f1a:	4651      	mov	r1, sl
 8002f1c:	4658      	mov	r0, fp
 8002f1e:	f002 fe9e 	bl	8005c5e <__sprint_r>
 8002f22:	2800      	cmp	r0, #0
 8002f24:	f040 832a 	bne.w	800357c <_vfprintf_r+0x1370>
 8002f28:	ac29      	add	r4, sp, #164	; 0xa4
 8002f2a:	e527      	b.n	800297c <_vfprintf_r+0x770>
 8002f2c:	2010      	movs	r0, #16
 8002f2e:	4402      	add	r2, r0
 8002f30:	2b07      	cmp	r3, #7
 8002f32:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002f36:	6060      	str	r0, [r4, #4]
 8002f38:	dd08      	ble.n	8002f4c <_vfprintf_r+0xd40>
 8002f3a:	aa26      	add	r2, sp, #152	; 0x98
 8002f3c:	4651      	mov	r1, sl
 8002f3e:	4658      	mov	r0, fp
 8002f40:	f002 fe8d 	bl	8005c5e <__sprint_r>
 8002f44:	2800      	cmp	r0, #0
 8002f46:	f040 8319 	bne.w	800357c <_vfprintf_r+0x1370>
 8002f4a:	a929      	add	r1, sp, #164	; 0xa4
 8002f4c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8002f4e:	3b10      	subs	r3, #16
 8002f50:	9317      	str	r3, [sp, #92]	; 0x5c
 8002f52:	460c      	mov	r4, r1
 8002f54:	e51b      	b.n	800298e <_vfprintf_r+0x782>
 8002f56:	460c      	mov	r4, r1
 8002f58:	e536      	b.n	80029c8 <_vfprintf_r+0x7bc>
 8002f5a:	2010      	movs	r0, #16
 8002f5c:	4402      	add	r2, r0
 8002f5e:	2b07      	cmp	r3, #7
 8002f60:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8002f64:	6060      	str	r0, [r4, #4]
 8002f66:	dd08      	ble.n	8002f7a <_vfprintf_r+0xd6e>
 8002f68:	aa26      	add	r2, sp, #152	; 0x98
 8002f6a:	4651      	mov	r1, sl
 8002f6c:	4658      	mov	r0, fp
 8002f6e:	f002 fe76 	bl	8005c5e <__sprint_r>
 8002f72:	2800      	cmp	r0, #0
 8002f74:	f040 8302 	bne.w	800357c <_vfprintf_r+0x1370>
 8002f78:	a929      	add	r1, sp, #164	; 0xa4
 8002f7a:	3e10      	subs	r6, #16
 8002f7c:	460c      	mov	r4, r1
 8002f7e:	e527      	b.n	80029d0 <_vfprintf_r+0x7c4>
 8002f80:	460c      	mov	r4, r1
 8002f82:	e54e      	b.n	8002a22 <_vfprintf_r+0x816>
 8002f84:	08007230 	.word	0x08007230
 8002f88:	08007241 	.word	0x08007241
 8002f8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8002f8e:	2b65      	cmp	r3, #101	; 0x65
 8002f90:	f340 8238 	ble.w	8003404 <_vfprintf_r+0x11f8>
 8002f94:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8002f98:	2200      	movs	r2, #0
 8002f9a:	2300      	movs	r3, #0
 8002f9c:	f7fd fda4 	bl	8000ae8 <__aeabi_dcmpeq>
 8002fa0:	2800      	cmp	r0, #0
 8002fa2:	d06a      	beq.n	800307a <_vfprintf_r+0xe6e>
 8002fa4:	4b6e      	ldr	r3, [pc, #440]	; (8003160 <_vfprintf_r+0xf54>)
 8002fa6:	6023      	str	r3, [r4, #0]
 8002fa8:	2301      	movs	r3, #1
 8002faa:	441e      	add	r6, r3
 8002fac:	6063      	str	r3, [r4, #4]
 8002fae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002fb0:	9628      	str	r6, [sp, #160]	; 0xa0
 8002fb2:	3301      	adds	r3, #1
 8002fb4:	2b07      	cmp	r3, #7
 8002fb6:	9327      	str	r3, [sp, #156]	; 0x9c
 8002fb8:	dc38      	bgt.n	800302c <_vfprintf_r+0xe20>
 8002fba:	3408      	adds	r4, #8
 8002fbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8002fbe:	9a08      	ldr	r2, [sp, #32]
 8002fc0:	4293      	cmp	r3, r2
 8002fc2:	db03      	blt.n	8002fcc <_vfprintf_r+0xdc0>
 8002fc4:	f018 0f01 	tst.w	r8, #1
 8002fc8:	f43f ad3d 	beq.w	8002a46 <_vfprintf_r+0x83a>
 8002fcc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8002fce:	6023      	str	r3, [r4, #0]
 8002fd0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002fd2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8002fd4:	6063      	str	r3, [r4, #4]
 8002fd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8002fd8:	4413      	add	r3, r2
 8002fda:	9328      	str	r3, [sp, #160]	; 0xa0
 8002fdc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8002fde:	3301      	adds	r3, #1
 8002fe0:	2b07      	cmp	r3, #7
 8002fe2:	9327      	str	r3, [sp, #156]	; 0x9c
 8002fe4:	dc2c      	bgt.n	8003040 <_vfprintf_r+0xe34>
 8002fe6:	3408      	adds	r4, #8
 8002fe8:	9b08      	ldr	r3, [sp, #32]
 8002fea:	1e5d      	subs	r5, r3, #1
 8002fec:	2d00      	cmp	r5, #0
 8002fee:	f77f ad2a 	ble.w	8002a46 <_vfprintf_r+0x83a>
 8002ff2:	4e5c      	ldr	r6, [pc, #368]	; (8003164 <_vfprintf_r+0xf58>)
 8002ff4:	f04f 0910 	mov.w	r9, #16
 8002ff8:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8002ffc:	2d10      	cmp	r5, #16
 8002ffe:	f103 0301 	add.w	r3, r3, #1
 8003002:	f104 0108 	add.w	r1, r4, #8
 8003006:	6026      	str	r6, [r4, #0]
 8003008:	dc24      	bgt.n	8003054 <_vfprintf_r+0xe48>
 800300a:	6065      	str	r5, [r4, #4]
 800300c:	2b07      	cmp	r3, #7
 800300e:	4415      	add	r5, r2
 8003010:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 8003014:	f340 8290 	ble.w	8003538 <_vfprintf_r+0x132c>
 8003018:	aa26      	add	r2, sp, #152	; 0x98
 800301a:	4651      	mov	r1, sl
 800301c:	4658      	mov	r0, fp
 800301e:	f002 fe1e 	bl	8005c5e <__sprint_r>
 8003022:	2800      	cmp	r0, #0
 8003024:	f040 82aa 	bne.w	800357c <_vfprintf_r+0x1370>
 8003028:	ac29      	add	r4, sp, #164	; 0xa4
 800302a:	e50c      	b.n	8002a46 <_vfprintf_r+0x83a>
 800302c:	aa26      	add	r2, sp, #152	; 0x98
 800302e:	4651      	mov	r1, sl
 8003030:	4658      	mov	r0, fp
 8003032:	f002 fe14 	bl	8005c5e <__sprint_r>
 8003036:	2800      	cmp	r0, #0
 8003038:	f040 82a0 	bne.w	800357c <_vfprintf_r+0x1370>
 800303c:	ac29      	add	r4, sp, #164	; 0xa4
 800303e:	e7bd      	b.n	8002fbc <_vfprintf_r+0xdb0>
 8003040:	aa26      	add	r2, sp, #152	; 0x98
 8003042:	4651      	mov	r1, sl
 8003044:	4658      	mov	r0, fp
 8003046:	f002 fe0a 	bl	8005c5e <__sprint_r>
 800304a:	2800      	cmp	r0, #0
 800304c:	f040 8296 	bne.w	800357c <_vfprintf_r+0x1370>
 8003050:	ac29      	add	r4, sp, #164	; 0xa4
 8003052:	e7c9      	b.n	8002fe8 <_vfprintf_r+0xddc>
 8003054:	3210      	adds	r2, #16
 8003056:	2b07      	cmp	r3, #7
 8003058:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800305c:	f8c4 9004 	str.w	r9, [r4, #4]
 8003060:	dd08      	ble.n	8003074 <_vfprintf_r+0xe68>
 8003062:	aa26      	add	r2, sp, #152	; 0x98
 8003064:	4651      	mov	r1, sl
 8003066:	4658      	mov	r0, fp
 8003068:	f002 fdf9 	bl	8005c5e <__sprint_r>
 800306c:	2800      	cmp	r0, #0
 800306e:	f040 8285 	bne.w	800357c <_vfprintf_r+0x1370>
 8003072:	a929      	add	r1, sp, #164	; 0xa4
 8003074:	3d10      	subs	r5, #16
 8003076:	460c      	mov	r4, r1
 8003078:	e7be      	b.n	8002ff8 <_vfprintf_r+0xdec>
 800307a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800307c:	2b00      	cmp	r3, #0
 800307e:	dc73      	bgt.n	8003168 <_vfprintf_r+0xf5c>
 8003080:	4b37      	ldr	r3, [pc, #220]	; (8003160 <_vfprintf_r+0xf54>)
 8003082:	6023      	str	r3, [r4, #0]
 8003084:	2301      	movs	r3, #1
 8003086:	441e      	add	r6, r3
 8003088:	6063      	str	r3, [r4, #4]
 800308a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800308c:	9628      	str	r6, [sp, #160]	; 0xa0
 800308e:	3301      	adds	r3, #1
 8003090:	2b07      	cmp	r3, #7
 8003092:	9327      	str	r3, [sp, #156]	; 0x9c
 8003094:	dc3c      	bgt.n	8003110 <_vfprintf_r+0xf04>
 8003096:	3408      	adds	r4, #8
 8003098:	9908      	ldr	r1, [sp, #32]
 800309a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800309c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800309e:	430a      	orrs	r2, r1
 80030a0:	f008 0101 	and.w	r1, r8, #1
 80030a4:	430a      	orrs	r2, r1
 80030a6:	f43f acce 	beq.w	8002a46 <_vfprintf_r+0x83a>
 80030aa:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80030ac:	6022      	str	r2, [r4, #0]
 80030ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80030b0:	6062      	str	r2, [r4, #4]
 80030b2:	4413      	add	r3, r2
 80030b4:	9328      	str	r3, [sp, #160]	; 0xa0
 80030b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80030b8:	3301      	adds	r3, #1
 80030ba:	2b07      	cmp	r3, #7
 80030bc:	9327      	str	r3, [sp, #156]	; 0x9c
 80030be:	dc31      	bgt.n	8003124 <_vfprintf_r+0xf18>
 80030c0:	3408      	adds	r4, #8
 80030c2:	9d20      	ldr	r5, [sp, #128]	; 0x80
 80030c4:	2d00      	cmp	r5, #0
 80030c6:	da1a      	bge.n	80030fe <_vfprintf_r+0xef2>
 80030c8:	4e26      	ldr	r6, [pc, #152]	; (8003164 <_vfprintf_r+0xf58>)
 80030ca:	426d      	negs	r5, r5
 80030cc:	4623      	mov	r3, r4
 80030ce:	e9dd 2127 	ldrd	r2, r1, [sp, #156]	; 0x9c
 80030d2:	2d10      	cmp	r5, #16
 80030d4:	f102 0201 	add.w	r2, r2, #1
 80030d8:	f104 0408 	add.w	r4, r4, #8
 80030dc:	601e      	str	r6, [r3, #0]
 80030de:	dc2b      	bgt.n	8003138 <_vfprintf_r+0xf2c>
 80030e0:	605d      	str	r5, [r3, #4]
 80030e2:	2a07      	cmp	r2, #7
 80030e4:	440d      	add	r5, r1
 80030e6:	e9cd 2527 	strd	r2, r5, [sp, #156]	; 0x9c
 80030ea:	dd08      	ble.n	80030fe <_vfprintf_r+0xef2>
 80030ec:	aa26      	add	r2, sp, #152	; 0x98
 80030ee:	4651      	mov	r1, sl
 80030f0:	4658      	mov	r0, fp
 80030f2:	f002 fdb4 	bl	8005c5e <__sprint_r>
 80030f6:	2800      	cmp	r0, #0
 80030f8:	f040 8240 	bne.w	800357c <_vfprintf_r+0x1370>
 80030fc:	ac29      	add	r4, sp, #164	; 0xa4
 80030fe:	9b08      	ldr	r3, [sp, #32]
 8003100:	9a08      	ldr	r2, [sp, #32]
 8003102:	6063      	str	r3, [r4, #4]
 8003104:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003106:	f8c4 9000 	str.w	r9, [r4]
 800310a:	4413      	add	r3, r2
 800310c:	9328      	str	r3, [sp, #160]	; 0xa0
 800310e:	e493      	b.n	8002a38 <_vfprintf_r+0x82c>
 8003110:	aa26      	add	r2, sp, #152	; 0x98
 8003112:	4651      	mov	r1, sl
 8003114:	4658      	mov	r0, fp
 8003116:	f002 fda2 	bl	8005c5e <__sprint_r>
 800311a:	2800      	cmp	r0, #0
 800311c:	f040 822e 	bne.w	800357c <_vfprintf_r+0x1370>
 8003120:	ac29      	add	r4, sp, #164	; 0xa4
 8003122:	e7b9      	b.n	8003098 <_vfprintf_r+0xe8c>
 8003124:	aa26      	add	r2, sp, #152	; 0x98
 8003126:	4651      	mov	r1, sl
 8003128:	4658      	mov	r0, fp
 800312a:	f002 fd98 	bl	8005c5e <__sprint_r>
 800312e:	2800      	cmp	r0, #0
 8003130:	f040 8224 	bne.w	800357c <_vfprintf_r+0x1370>
 8003134:	ac29      	add	r4, sp, #164	; 0xa4
 8003136:	e7c4      	b.n	80030c2 <_vfprintf_r+0xeb6>
 8003138:	2010      	movs	r0, #16
 800313a:	4401      	add	r1, r0
 800313c:	2a07      	cmp	r2, #7
 800313e:	e9cd 2127 	strd	r2, r1, [sp, #156]	; 0x9c
 8003142:	6058      	str	r0, [r3, #4]
 8003144:	dd08      	ble.n	8003158 <_vfprintf_r+0xf4c>
 8003146:	aa26      	add	r2, sp, #152	; 0x98
 8003148:	4651      	mov	r1, sl
 800314a:	4658      	mov	r0, fp
 800314c:	f002 fd87 	bl	8005c5e <__sprint_r>
 8003150:	2800      	cmp	r0, #0
 8003152:	f040 8213 	bne.w	800357c <_vfprintf_r+0x1370>
 8003156:	ac29      	add	r4, sp, #164	; 0xa4
 8003158:	3d10      	subs	r5, #16
 800315a:	4623      	mov	r3, r4
 800315c:	e7b7      	b.n	80030ce <_vfprintf_r+0xec2>
 800315e:	bf00      	nop
 8003160:	08007252 	.word	0x08007252
 8003164:	08007264 	.word	0x08007264
 8003168:	9b08      	ldr	r3, [sp, #32]
 800316a:	42ab      	cmp	r3, r5
 800316c:	bfa8      	it	ge
 800316e:	462b      	movge	r3, r5
 8003170:	2b00      	cmp	r3, #0
 8003172:	9307      	str	r3, [sp, #28]
 8003174:	dd0a      	ble.n	800318c <_vfprintf_r+0xf80>
 8003176:	441e      	add	r6, r3
 8003178:	e9c4 9300 	strd	r9, r3, [r4]
 800317c:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800317e:	9628      	str	r6, [sp, #160]	; 0xa0
 8003180:	3301      	adds	r3, #1
 8003182:	2b07      	cmp	r3, #7
 8003184:	9327      	str	r3, [sp, #156]	; 0x9c
 8003186:	f300 8088 	bgt.w	800329a <_vfprintf_r+0x108e>
 800318a:	3408      	adds	r4, #8
 800318c:	9b07      	ldr	r3, [sp, #28]
 800318e:	2b00      	cmp	r3, #0
 8003190:	bfac      	ite	ge
 8003192:	1aee      	subge	r6, r5, r3
 8003194:	462e      	movlt	r6, r5
 8003196:	2e00      	cmp	r6, #0
 8003198:	dd19      	ble.n	80031ce <_vfprintf_r+0xfc2>
 800319a:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 800319e:	4898      	ldr	r0, [pc, #608]	; (8003400 <_vfprintf_r+0x11f4>)
 80031a0:	6020      	str	r0, [r4, #0]
 80031a2:	2e10      	cmp	r6, #16
 80031a4:	f103 0301 	add.w	r3, r3, #1
 80031a8:	f104 0108 	add.w	r1, r4, #8
 80031ac:	dc7f      	bgt.n	80032ae <_vfprintf_r+0x10a2>
 80031ae:	6066      	str	r6, [r4, #4]
 80031b0:	2b07      	cmp	r3, #7
 80031b2:	4416      	add	r6, r2
 80031b4:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 80031b8:	f340 808c 	ble.w	80032d4 <_vfprintf_r+0x10c8>
 80031bc:	aa26      	add	r2, sp, #152	; 0x98
 80031be:	4651      	mov	r1, sl
 80031c0:	4658      	mov	r0, fp
 80031c2:	f002 fd4c 	bl	8005c5e <__sprint_r>
 80031c6:	2800      	cmp	r0, #0
 80031c8:	f040 81d8 	bne.w	800357c <_vfprintf_r+0x1370>
 80031cc:	ac29      	add	r4, sp, #164	; 0xa4
 80031ce:	f418 6f80 	tst.w	r8, #1024	; 0x400
 80031d2:	444d      	add	r5, r9
 80031d4:	d00a      	beq.n	80031ec <_vfprintf_r+0xfe0>
 80031d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80031d8:	2b00      	cmp	r3, #0
 80031da:	d17d      	bne.n	80032d8 <_vfprintf_r+0x10cc>
 80031dc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80031de:	2b00      	cmp	r3, #0
 80031e0:	d17d      	bne.n	80032de <_vfprintf_r+0x10d2>
 80031e2:	9b08      	ldr	r3, [sp, #32]
 80031e4:	444b      	add	r3, r9
 80031e6:	429d      	cmp	r5, r3
 80031e8:	bf28      	it	cs
 80031ea:	461d      	movcs	r5, r3
 80031ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80031ee:	9a08      	ldr	r2, [sp, #32]
 80031f0:	4293      	cmp	r3, r2
 80031f2:	db02      	blt.n	80031fa <_vfprintf_r+0xfee>
 80031f4:	f018 0f01 	tst.w	r8, #1
 80031f8:	d00e      	beq.n	8003218 <_vfprintf_r+0x100c>
 80031fa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80031fc:	6023      	str	r3, [r4, #0]
 80031fe:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003200:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003202:	6063      	str	r3, [r4, #4]
 8003204:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003206:	4413      	add	r3, r2
 8003208:	9328      	str	r3, [sp, #160]	; 0xa0
 800320a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 800320c:	3301      	adds	r3, #1
 800320e:	2b07      	cmp	r3, #7
 8003210:	9327      	str	r3, [sp, #156]	; 0x9c
 8003212:	f300 80e0 	bgt.w	80033d6 <_vfprintf_r+0x11ca>
 8003216:	3408      	adds	r4, #8
 8003218:	9b08      	ldr	r3, [sp, #32]
 800321a:	9e20      	ldr	r6, [sp, #128]	; 0x80
 800321c:	eb09 0203 	add.w	r2, r9, r3
 8003220:	1b9e      	subs	r6, r3, r6
 8003222:	1b52      	subs	r2, r2, r5
 8003224:	4296      	cmp	r6, r2
 8003226:	bfa8      	it	ge
 8003228:	4616      	movge	r6, r2
 800322a:	2e00      	cmp	r6, #0
 800322c:	dd0b      	ble.n	8003246 <_vfprintf_r+0x103a>
 800322e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003230:	4433      	add	r3, r6
 8003232:	9328      	str	r3, [sp, #160]	; 0xa0
 8003234:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003236:	3301      	adds	r3, #1
 8003238:	2b07      	cmp	r3, #7
 800323a:	e9c4 5600 	strd	r5, r6, [r4]
 800323e:	9327      	str	r3, [sp, #156]	; 0x9c
 8003240:	f300 80d3 	bgt.w	80033ea <_vfprintf_r+0x11de>
 8003244:	3408      	adds	r4, #8
 8003246:	9d20      	ldr	r5, [sp, #128]	; 0x80
 8003248:	9b08      	ldr	r3, [sp, #32]
 800324a:	2e00      	cmp	r6, #0
 800324c:	eba3 0505 	sub.w	r5, r3, r5
 8003250:	bfa8      	it	ge
 8003252:	1bad      	subge	r5, r5, r6
 8003254:	2d00      	cmp	r5, #0
 8003256:	f77f abf6 	ble.w	8002a46 <_vfprintf_r+0x83a>
 800325a:	4e69      	ldr	r6, [pc, #420]	; (8003400 <_vfprintf_r+0x11f4>)
 800325c:	f04f 0910 	mov.w	r9, #16
 8003260:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003264:	2d10      	cmp	r5, #16
 8003266:	f103 0301 	add.w	r3, r3, #1
 800326a:	f104 0108 	add.w	r1, r4, #8
 800326e:	6026      	str	r6, [r4, #0]
 8003270:	f77f aecb 	ble.w	800300a <_vfprintf_r+0xdfe>
 8003274:	3210      	adds	r2, #16
 8003276:	2b07      	cmp	r3, #7
 8003278:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 800327c:	f8c4 9004 	str.w	r9, [r4, #4]
 8003280:	dd08      	ble.n	8003294 <_vfprintf_r+0x1088>
 8003282:	aa26      	add	r2, sp, #152	; 0x98
 8003284:	4651      	mov	r1, sl
 8003286:	4658      	mov	r0, fp
 8003288:	f002 fce9 	bl	8005c5e <__sprint_r>
 800328c:	2800      	cmp	r0, #0
 800328e:	f040 8175 	bne.w	800357c <_vfprintf_r+0x1370>
 8003292:	a929      	add	r1, sp, #164	; 0xa4
 8003294:	3d10      	subs	r5, #16
 8003296:	460c      	mov	r4, r1
 8003298:	e7e2      	b.n	8003260 <_vfprintf_r+0x1054>
 800329a:	aa26      	add	r2, sp, #152	; 0x98
 800329c:	4651      	mov	r1, sl
 800329e:	4658      	mov	r0, fp
 80032a0:	f002 fcdd 	bl	8005c5e <__sprint_r>
 80032a4:	2800      	cmp	r0, #0
 80032a6:	f040 8169 	bne.w	800357c <_vfprintf_r+0x1370>
 80032aa:	ac29      	add	r4, sp, #164	; 0xa4
 80032ac:	e76e      	b.n	800318c <_vfprintf_r+0xf80>
 80032ae:	2010      	movs	r0, #16
 80032b0:	4402      	add	r2, r0
 80032b2:	2b07      	cmp	r3, #7
 80032b4:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 80032b8:	6060      	str	r0, [r4, #4]
 80032ba:	dd08      	ble.n	80032ce <_vfprintf_r+0x10c2>
 80032bc:	aa26      	add	r2, sp, #152	; 0x98
 80032be:	4651      	mov	r1, sl
 80032c0:	4658      	mov	r0, fp
 80032c2:	f002 fccc 	bl	8005c5e <__sprint_r>
 80032c6:	2800      	cmp	r0, #0
 80032c8:	f040 8158 	bne.w	800357c <_vfprintf_r+0x1370>
 80032cc:	a929      	add	r1, sp, #164	; 0xa4
 80032ce:	3e10      	subs	r6, #16
 80032d0:	460c      	mov	r4, r1
 80032d2:	e762      	b.n	800319a <_vfprintf_r+0xf8e>
 80032d4:	460c      	mov	r4, r1
 80032d6:	e77a      	b.n	80031ce <_vfprintf_r+0xfc2>
 80032d8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80032da:	2b00      	cmp	r3, #0
 80032dc:	d04b      	beq.n	8003376 <_vfprintf_r+0x116a>
 80032de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80032e0:	3b01      	subs	r3, #1
 80032e2:	930c      	str	r3, [sp, #48]	; 0x30
 80032e4:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80032e6:	6023      	str	r3, [r4, #0]
 80032e8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80032ea:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80032ec:	6063      	str	r3, [r4, #4]
 80032ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80032f0:	4413      	add	r3, r2
 80032f2:	9328      	str	r3, [sp, #160]	; 0xa0
 80032f4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80032f6:	3301      	adds	r3, #1
 80032f8:	2b07      	cmp	r3, #7
 80032fa:	9327      	str	r3, [sp, #156]	; 0x9c
 80032fc:	dc42      	bgt.n	8003384 <_vfprintf_r+0x1178>
 80032fe:	3408      	adds	r4, #8
 8003300:	9b08      	ldr	r3, [sp, #32]
 8003302:	444b      	add	r3, r9
 8003304:	1b5a      	subs	r2, r3, r5
 8003306:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003308:	781b      	ldrb	r3, [r3, #0]
 800330a:	4293      	cmp	r3, r2
 800330c:	bfa8      	it	ge
 800330e:	4613      	movge	r3, r2
 8003310:	2b00      	cmp	r3, #0
 8003312:	461e      	mov	r6, r3
 8003314:	dd0a      	ble.n	800332c <_vfprintf_r+0x1120>
 8003316:	e9c4 5300 	strd	r5, r3, [r4]
 800331a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800331c:	4433      	add	r3, r6
 800331e:	9328      	str	r3, [sp, #160]	; 0xa0
 8003320:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003322:	3301      	adds	r3, #1
 8003324:	2b07      	cmp	r3, #7
 8003326:	9327      	str	r3, [sp, #156]	; 0x9c
 8003328:	dc36      	bgt.n	8003398 <_vfprintf_r+0x118c>
 800332a:	3408      	adds	r4, #8
 800332c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800332e:	781b      	ldrb	r3, [r3, #0]
 8003330:	2e00      	cmp	r6, #0
 8003332:	bfac      	ite	ge
 8003334:	1b9e      	subge	r6, r3, r6
 8003336:	461e      	movlt	r6, r3
 8003338:	2e00      	cmp	r6, #0
 800333a:	dd18      	ble.n	800336e <_vfprintf_r+0x1162>
 800333c:	e9dd 2327 	ldrd	r2, r3, [sp, #156]	; 0x9c
 8003340:	482f      	ldr	r0, [pc, #188]	; (8003400 <_vfprintf_r+0x11f4>)
 8003342:	6020      	str	r0, [r4, #0]
 8003344:	2e10      	cmp	r6, #16
 8003346:	f102 0201 	add.w	r2, r2, #1
 800334a:	f104 0108 	add.w	r1, r4, #8
 800334e:	dc2d      	bgt.n	80033ac <_vfprintf_r+0x11a0>
 8003350:	4433      	add	r3, r6
 8003352:	2a07      	cmp	r2, #7
 8003354:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 8003358:	6066      	str	r6, [r4, #4]
 800335a:	dd3a      	ble.n	80033d2 <_vfprintf_r+0x11c6>
 800335c:	aa26      	add	r2, sp, #152	; 0x98
 800335e:	4651      	mov	r1, sl
 8003360:	4658      	mov	r0, fp
 8003362:	f002 fc7c 	bl	8005c5e <__sprint_r>
 8003366:	2800      	cmp	r0, #0
 8003368:	f040 8108 	bne.w	800357c <_vfprintf_r+0x1370>
 800336c:	ac29      	add	r4, sp, #164	; 0xa4
 800336e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003370:	781b      	ldrb	r3, [r3, #0]
 8003372:	441d      	add	r5, r3
 8003374:	e72f      	b.n	80031d6 <_vfprintf_r+0xfca>
 8003376:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003378:	3b01      	subs	r3, #1
 800337a:	930e      	str	r3, [sp, #56]	; 0x38
 800337c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800337e:	3b01      	subs	r3, #1
 8003380:	930d      	str	r3, [sp, #52]	; 0x34
 8003382:	e7af      	b.n	80032e4 <_vfprintf_r+0x10d8>
 8003384:	aa26      	add	r2, sp, #152	; 0x98
 8003386:	4651      	mov	r1, sl
 8003388:	4658      	mov	r0, fp
 800338a:	f002 fc68 	bl	8005c5e <__sprint_r>
 800338e:	2800      	cmp	r0, #0
 8003390:	f040 80f4 	bne.w	800357c <_vfprintf_r+0x1370>
 8003394:	ac29      	add	r4, sp, #164	; 0xa4
 8003396:	e7b3      	b.n	8003300 <_vfprintf_r+0x10f4>
 8003398:	aa26      	add	r2, sp, #152	; 0x98
 800339a:	4651      	mov	r1, sl
 800339c:	4658      	mov	r0, fp
 800339e:	f002 fc5e 	bl	8005c5e <__sprint_r>
 80033a2:	2800      	cmp	r0, #0
 80033a4:	f040 80ea 	bne.w	800357c <_vfprintf_r+0x1370>
 80033a8:	ac29      	add	r4, sp, #164	; 0xa4
 80033aa:	e7bf      	b.n	800332c <_vfprintf_r+0x1120>
 80033ac:	2010      	movs	r0, #16
 80033ae:	4403      	add	r3, r0
 80033b0:	2a07      	cmp	r2, #7
 80033b2:	e9cd 2327 	strd	r2, r3, [sp, #156]	; 0x9c
 80033b6:	6060      	str	r0, [r4, #4]
 80033b8:	dd08      	ble.n	80033cc <_vfprintf_r+0x11c0>
 80033ba:	aa26      	add	r2, sp, #152	; 0x98
 80033bc:	4651      	mov	r1, sl
 80033be:	4658      	mov	r0, fp
 80033c0:	f002 fc4d 	bl	8005c5e <__sprint_r>
 80033c4:	2800      	cmp	r0, #0
 80033c6:	f040 80d9 	bne.w	800357c <_vfprintf_r+0x1370>
 80033ca:	a929      	add	r1, sp, #164	; 0xa4
 80033cc:	3e10      	subs	r6, #16
 80033ce:	460c      	mov	r4, r1
 80033d0:	e7b4      	b.n	800333c <_vfprintf_r+0x1130>
 80033d2:	460c      	mov	r4, r1
 80033d4:	e7cb      	b.n	800336e <_vfprintf_r+0x1162>
 80033d6:	aa26      	add	r2, sp, #152	; 0x98
 80033d8:	4651      	mov	r1, sl
 80033da:	4658      	mov	r0, fp
 80033dc:	f002 fc3f 	bl	8005c5e <__sprint_r>
 80033e0:	2800      	cmp	r0, #0
 80033e2:	f040 80cb 	bne.w	800357c <_vfprintf_r+0x1370>
 80033e6:	ac29      	add	r4, sp, #164	; 0xa4
 80033e8:	e716      	b.n	8003218 <_vfprintf_r+0x100c>
 80033ea:	aa26      	add	r2, sp, #152	; 0x98
 80033ec:	4651      	mov	r1, sl
 80033ee:	4658      	mov	r0, fp
 80033f0:	f002 fc35 	bl	8005c5e <__sprint_r>
 80033f4:	2800      	cmp	r0, #0
 80033f6:	f040 80c1 	bne.w	800357c <_vfprintf_r+0x1370>
 80033fa:	ac29      	add	r4, sp, #164	; 0xa4
 80033fc:	e723      	b.n	8003246 <_vfprintf_r+0x103a>
 80033fe:	bf00      	nop
 8003400:	08007264 	.word	0x08007264
 8003404:	9a08      	ldr	r2, [sp, #32]
 8003406:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003408:	2a01      	cmp	r2, #1
 800340a:	f106 0601 	add.w	r6, r6, #1
 800340e:	f103 0301 	add.w	r3, r3, #1
 8003412:	f104 0508 	add.w	r5, r4, #8
 8003416:	dc03      	bgt.n	8003420 <_vfprintf_r+0x1214>
 8003418:	f018 0f01 	tst.w	r8, #1
 800341c:	f000 8081 	beq.w	8003522 <_vfprintf_r+0x1316>
 8003420:	2201      	movs	r2, #1
 8003422:	2b07      	cmp	r3, #7
 8003424:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 8003428:	f8c4 9000 	str.w	r9, [r4]
 800342c:	6062      	str	r2, [r4, #4]
 800342e:	dd08      	ble.n	8003442 <_vfprintf_r+0x1236>
 8003430:	aa26      	add	r2, sp, #152	; 0x98
 8003432:	4651      	mov	r1, sl
 8003434:	4658      	mov	r0, fp
 8003436:	f002 fc12 	bl	8005c5e <__sprint_r>
 800343a:	2800      	cmp	r0, #0
 800343c:	f040 809e 	bne.w	800357c <_vfprintf_r+0x1370>
 8003440:	ad29      	add	r5, sp, #164	; 0xa4
 8003442:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8003444:	602b      	str	r3, [r5, #0]
 8003446:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003448:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800344a:	606b      	str	r3, [r5, #4]
 800344c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 800344e:	4413      	add	r3, r2
 8003450:	9328      	str	r3, [sp, #160]	; 0xa0
 8003452:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8003454:	3301      	adds	r3, #1
 8003456:	2b07      	cmp	r3, #7
 8003458:	9327      	str	r3, [sp, #156]	; 0x9c
 800345a:	dc32      	bgt.n	80034c2 <_vfprintf_r+0x12b6>
 800345c:	3508      	adds	r5, #8
 800345e:	9b08      	ldr	r3, [sp, #32]
 8003460:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003464:	1e5c      	subs	r4, r3, #1
 8003466:	2200      	movs	r2, #0
 8003468:	2300      	movs	r3, #0
 800346a:	f7fd fb3d 	bl	8000ae8 <__aeabi_dcmpeq>
 800346e:	2800      	cmp	r0, #0
 8003470:	d130      	bne.n	80034d4 <_vfprintf_r+0x12c8>
 8003472:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8003474:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8003476:	9a08      	ldr	r2, [sp, #32]
 8003478:	3101      	adds	r1, #1
 800347a:	3b01      	subs	r3, #1
 800347c:	f109 0001 	add.w	r0, r9, #1
 8003480:	4413      	add	r3, r2
 8003482:	2907      	cmp	r1, #7
 8003484:	e9c5 0400 	strd	r0, r4, [r5]
 8003488:	e9cd 1327 	strd	r1, r3, [sp, #156]	; 0x9c
 800348c:	dd52      	ble.n	8003534 <_vfprintf_r+0x1328>
 800348e:	aa26      	add	r2, sp, #152	; 0x98
 8003490:	4651      	mov	r1, sl
 8003492:	4658      	mov	r0, fp
 8003494:	f002 fbe3 	bl	8005c5e <__sprint_r>
 8003498:	2800      	cmp	r0, #0
 800349a:	d16f      	bne.n	800357c <_vfprintf_r+0x1370>
 800349c:	ad29      	add	r5, sp, #164	; 0xa4
 800349e:	ab22      	add	r3, sp, #136	; 0x88
 80034a0:	602b      	str	r3, [r5, #0]
 80034a2:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 80034a4:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 80034a6:	606b      	str	r3, [r5, #4]
 80034a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80034aa:	4413      	add	r3, r2
 80034ac:	9328      	str	r3, [sp, #160]	; 0xa0
 80034ae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80034b0:	3301      	adds	r3, #1
 80034b2:	2b07      	cmp	r3, #7
 80034b4:	9327      	str	r3, [sp, #156]	; 0x9c
 80034b6:	f73f adaf 	bgt.w	8003018 <_vfprintf_r+0xe0c>
 80034ba:	f105 0408 	add.w	r4, r5, #8
 80034be:	f7ff bac2 	b.w	8002a46 <_vfprintf_r+0x83a>
 80034c2:	aa26      	add	r2, sp, #152	; 0x98
 80034c4:	4651      	mov	r1, sl
 80034c6:	4658      	mov	r0, fp
 80034c8:	f002 fbc9 	bl	8005c5e <__sprint_r>
 80034cc:	2800      	cmp	r0, #0
 80034ce:	d155      	bne.n	800357c <_vfprintf_r+0x1370>
 80034d0:	ad29      	add	r5, sp, #164	; 0xa4
 80034d2:	e7c4      	b.n	800345e <_vfprintf_r+0x1252>
 80034d4:	2c00      	cmp	r4, #0
 80034d6:	dde2      	ble.n	800349e <_vfprintf_r+0x1292>
 80034d8:	4e5b      	ldr	r6, [pc, #364]	; (8003648 <_vfprintf_r+0x143c>)
 80034da:	f04f 0910 	mov.w	r9, #16
 80034de:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 80034e2:	2c10      	cmp	r4, #16
 80034e4:	f103 0301 	add.w	r3, r3, #1
 80034e8:	f105 0108 	add.w	r1, r5, #8
 80034ec:	602e      	str	r6, [r5, #0]
 80034ee:	dc07      	bgt.n	8003500 <_vfprintf_r+0x12f4>
 80034f0:	606c      	str	r4, [r5, #4]
 80034f2:	2b07      	cmp	r3, #7
 80034f4:	4414      	add	r4, r2
 80034f6:	e9cd 3427 	strd	r3, r4, [sp, #156]	; 0x9c
 80034fa:	dcc8      	bgt.n	800348e <_vfprintf_r+0x1282>
 80034fc:	460d      	mov	r5, r1
 80034fe:	e7ce      	b.n	800349e <_vfprintf_r+0x1292>
 8003500:	3210      	adds	r2, #16
 8003502:	2b07      	cmp	r3, #7
 8003504:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003508:	f8c5 9004 	str.w	r9, [r5, #4]
 800350c:	dd06      	ble.n	800351c <_vfprintf_r+0x1310>
 800350e:	aa26      	add	r2, sp, #152	; 0x98
 8003510:	4651      	mov	r1, sl
 8003512:	4658      	mov	r0, fp
 8003514:	f002 fba3 	bl	8005c5e <__sprint_r>
 8003518:	bb80      	cbnz	r0, 800357c <_vfprintf_r+0x1370>
 800351a:	a929      	add	r1, sp, #164	; 0xa4
 800351c:	3c10      	subs	r4, #16
 800351e:	460d      	mov	r5, r1
 8003520:	e7dd      	b.n	80034de <_vfprintf_r+0x12d2>
 8003522:	2201      	movs	r2, #1
 8003524:	2b07      	cmp	r3, #7
 8003526:	e9cd 3627 	strd	r3, r6, [sp, #156]	; 0x9c
 800352a:	f8c4 9000 	str.w	r9, [r4]
 800352e:	6062      	str	r2, [r4, #4]
 8003530:	ddb5      	ble.n	800349e <_vfprintf_r+0x1292>
 8003532:	e7ac      	b.n	800348e <_vfprintf_r+0x1282>
 8003534:	3508      	adds	r5, #8
 8003536:	e7b2      	b.n	800349e <_vfprintf_r+0x1292>
 8003538:	460c      	mov	r4, r1
 800353a:	f7ff ba84 	b.w	8002a46 <_vfprintf_r+0x83a>
 800353e:	e9dd 3214 	ldrd	r3, r2, [sp, #80]	; 0x50
 8003542:	1a9d      	subs	r5, r3, r2
 8003544:	2d00      	cmp	r5, #0
 8003546:	f77f aa82 	ble.w	8002a4e <_vfprintf_r+0x842>
 800354a:	4e40      	ldr	r6, [pc, #256]	; (800364c <_vfprintf_r+0x1440>)
 800354c:	f04f 0810 	mov.w	r8, #16
 8003550:	e9dd 3227 	ldrd	r3, r2, [sp, #156]	; 0x9c
 8003554:	2d10      	cmp	r5, #16
 8003556:	f103 0301 	add.w	r3, r3, #1
 800355a:	6026      	str	r6, [r4, #0]
 800355c:	dc17      	bgt.n	800358e <_vfprintf_r+0x1382>
 800355e:	6065      	str	r5, [r4, #4]
 8003560:	2b07      	cmp	r3, #7
 8003562:	4415      	add	r5, r2
 8003564:	e9cd 3527 	strd	r3, r5, [sp, #156]	; 0x9c
 8003568:	f77f aa71 	ble.w	8002a4e <_vfprintf_r+0x842>
 800356c:	aa26      	add	r2, sp, #152	; 0x98
 800356e:	4651      	mov	r1, sl
 8003570:	4658      	mov	r0, fp
 8003572:	f002 fb74 	bl	8005c5e <__sprint_r>
 8003576:	2800      	cmp	r0, #0
 8003578:	f43f aa69 	beq.w	8002a4e <_vfprintf_r+0x842>
 800357c:	2f00      	cmp	r7, #0
 800357e:	f43f a882 	beq.w	8002686 <_vfprintf_r+0x47a>
 8003582:	4639      	mov	r1, r7
 8003584:	4658      	mov	r0, fp
 8003586:	f001 f8db 	bl	8004740 <_free_r>
 800358a:	f7ff b87c 	b.w	8002686 <_vfprintf_r+0x47a>
 800358e:	3210      	adds	r2, #16
 8003590:	2b07      	cmp	r3, #7
 8003592:	e9cd 3227 	strd	r3, r2, [sp, #156]	; 0x9c
 8003596:	f8c4 8004 	str.w	r8, [r4, #4]
 800359a:	dc02      	bgt.n	80035a2 <_vfprintf_r+0x1396>
 800359c:	3408      	adds	r4, #8
 800359e:	3d10      	subs	r5, #16
 80035a0:	e7d6      	b.n	8003550 <_vfprintf_r+0x1344>
 80035a2:	aa26      	add	r2, sp, #152	; 0x98
 80035a4:	4651      	mov	r1, sl
 80035a6:	4658      	mov	r0, fp
 80035a8:	f002 fb59 	bl	8005c5e <__sprint_r>
 80035ac:	2800      	cmp	r0, #0
 80035ae:	d1e5      	bne.n	800357c <_vfprintf_r+0x1370>
 80035b0:	ac29      	add	r4, sp, #164	; 0xa4
 80035b2:	e7f4      	b.n	800359e <_vfprintf_r+0x1392>
 80035b4:	4639      	mov	r1, r7
 80035b6:	4658      	mov	r0, fp
 80035b8:	f001 f8c2 	bl	8004740 <_free_r>
 80035bc:	f7ff ba5e 	b.w	8002a7c <_vfprintf_r+0x870>
 80035c0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80035c2:	b91b      	cbnz	r3, 80035cc <_vfprintf_r+0x13c0>
 80035c4:	2300      	movs	r3, #0
 80035c6:	9327      	str	r3, [sp, #156]	; 0x9c
 80035c8:	f7ff b85d 	b.w	8002686 <_vfprintf_r+0x47a>
 80035cc:	aa26      	add	r2, sp, #152	; 0x98
 80035ce:	4651      	mov	r1, sl
 80035d0:	4658      	mov	r0, fp
 80035d2:	f002 fb44 	bl	8005c5e <__sprint_r>
 80035d6:	2800      	cmp	r0, #0
 80035d8:	d0f4      	beq.n	80035c4 <_vfprintf_r+0x13b8>
 80035da:	f7ff b854 	b.w	8002686 <_vfprintf_r+0x47a>
 80035de:	ea56 0207 	orrs.w	r2, r6, r7
 80035e2:	f8cd 8030 	str.w	r8, [sp, #48]	; 0x30
 80035e6:	f43f ab6a 	beq.w	8002cbe <_vfprintf_r+0xab2>
 80035ea:	2b01      	cmp	r3, #1
 80035ec:	f43f abff 	beq.w	8002dee <_vfprintf_r+0xbe2>
 80035f0:	2b02      	cmp	r3, #2
 80035f2:	f50d 79a4 	add.w	r9, sp, #328	; 0x148
 80035f6:	f43f ac47 	beq.w	8002e88 <_vfprintf_r+0xc7c>
 80035fa:	08f2      	lsrs	r2, r6, #3
 80035fc:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
 8003600:	08f8      	lsrs	r0, r7, #3
 8003602:	f006 0307 	and.w	r3, r6, #7
 8003606:	4607      	mov	r7, r0
 8003608:	4616      	mov	r6, r2
 800360a:	3330      	adds	r3, #48	; 0x30
 800360c:	ea56 0207 	orrs.w	r2, r6, r7
 8003610:	4649      	mov	r1, r9
 8003612:	f809 3d01 	strb.w	r3, [r9, #-1]!
 8003616:	d1f0      	bne.n	80035fa <_vfprintf_r+0x13ee>
 8003618:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 800361a:	07d0      	lsls	r0, r2, #31
 800361c:	d506      	bpl.n	800362c <_vfprintf_r+0x1420>
 800361e:	2b30      	cmp	r3, #48	; 0x30
 8003620:	d004      	beq.n	800362c <_vfprintf_r+0x1420>
 8003622:	2330      	movs	r3, #48	; 0x30
 8003624:	f809 3c01 	strb.w	r3, [r9, #-1]
 8003628:	f1a1 0902 	sub.w	r9, r1, #2
 800362c:	ab52      	add	r3, sp, #328	; 0x148
 800362e:	eba3 0309 	sub.w	r3, r3, r9
 8003632:	f8dd 8030 	ldr.w	r8, [sp, #48]	; 0x30
 8003636:	9e07      	ldr	r6, [sp, #28]
 8003638:	9307      	str	r3, [sp, #28]
 800363a:	2700      	movs	r7, #0
 800363c:	e9cd 770c 	strd	r7, r7, [sp, #48]	; 0x30
 8003640:	463d      	mov	r5, r7
 8003642:	f7ff b940 	b.w	80028c6 <_vfprintf_r+0x6ba>
 8003646:	bf00      	nop
 8003648:	08007264 	.word	0x08007264
 800364c:	08007254 	.word	0x08007254

08003650 <__sbprintf>:
 8003650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003652:	461f      	mov	r7, r3
 8003654:	898b      	ldrh	r3, [r1, #12]
 8003656:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 800365a:	f023 0302 	bic.w	r3, r3, #2
 800365e:	f8ad 300c 	strh.w	r3, [sp, #12]
 8003662:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8003664:	9319      	str	r3, [sp, #100]	; 0x64
 8003666:	89cb      	ldrh	r3, [r1, #14]
 8003668:	f8ad 300e 	strh.w	r3, [sp, #14]
 800366c:	69cb      	ldr	r3, [r1, #28]
 800366e:	9307      	str	r3, [sp, #28]
 8003670:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 8003672:	9309      	str	r3, [sp, #36]	; 0x24
 8003674:	ab1a      	add	r3, sp, #104	; 0x68
 8003676:	9300      	str	r3, [sp, #0]
 8003678:	9304      	str	r3, [sp, #16]
 800367a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800367e:	4615      	mov	r5, r2
 8003680:	4606      	mov	r6, r0
 8003682:	9302      	str	r3, [sp, #8]
 8003684:	9305      	str	r3, [sp, #20]
 8003686:	a816      	add	r0, sp, #88	; 0x58
 8003688:	2300      	movs	r3, #0
 800368a:	460c      	mov	r4, r1
 800368c:	9306      	str	r3, [sp, #24]
 800368e:	f001 fa85 	bl	8004b9c <__retarget_lock_init_recursive>
 8003692:	462a      	mov	r2, r5
 8003694:	463b      	mov	r3, r7
 8003696:	4669      	mov	r1, sp
 8003698:	4630      	mov	r0, r6
 800369a:	f7fe fdb7 	bl	800220c <_vfprintf_r>
 800369e:	1e05      	subs	r5, r0, #0
 80036a0:	db07      	blt.n	80036b2 <__sbprintf+0x62>
 80036a2:	4669      	mov	r1, sp
 80036a4:	4630      	mov	r0, r6
 80036a6:	f000 ff4f 	bl	8004548 <_fflush_r>
 80036aa:	2800      	cmp	r0, #0
 80036ac:	bf18      	it	ne
 80036ae:	f04f 35ff 	movne.w	r5, #4294967295
 80036b2:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 80036b6:	9816      	ldr	r0, [sp, #88]	; 0x58
 80036b8:	065b      	lsls	r3, r3, #25
 80036ba:	bf42      	ittt	mi
 80036bc:	89a3      	ldrhmi	r3, [r4, #12]
 80036be:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 80036c2:	81a3      	strhmi	r3, [r4, #12]
 80036c4:	f001 fa6b 	bl	8004b9e <__retarget_lock_close_recursive>
 80036c8:	4628      	mov	r0, r5
 80036ca:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 80036ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

080036d0 <__swsetup_r>:
 80036d0:	b538      	push	{r3, r4, r5, lr}
 80036d2:	4b2a      	ldr	r3, [pc, #168]	; (800377c <__swsetup_r+0xac>)
 80036d4:	4605      	mov	r5, r0
 80036d6:	6818      	ldr	r0, [r3, #0]
 80036d8:	460c      	mov	r4, r1
 80036da:	b118      	cbz	r0, 80036e4 <__swsetup_r+0x14>
 80036dc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80036de:	b90b      	cbnz	r3, 80036e4 <__swsetup_r+0x14>
 80036e0:	f000 ff9e 	bl	8004620 <__sinit>
 80036e4:	89a3      	ldrh	r3, [r4, #12]
 80036e6:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80036ea:	0718      	lsls	r0, r3, #28
 80036ec:	d422      	bmi.n	8003734 <__swsetup_r+0x64>
 80036ee:	06d9      	lsls	r1, r3, #27
 80036f0:	d407      	bmi.n	8003702 <__swsetup_r+0x32>
 80036f2:	2309      	movs	r3, #9
 80036f4:	602b      	str	r3, [r5, #0]
 80036f6:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80036fa:	81a3      	strh	r3, [r4, #12]
 80036fc:	f04f 30ff 	mov.w	r0, #4294967295
 8003700:	e034      	b.n	800376c <__swsetup_r+0x9c>
 8003702:	0758      	lsls	r0, r3, #29
 8003704:	d512      	bpl.n	800372c <__swsetup_r+0x5c>
 8003706:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8003708:	b141      	cbz	r1, 800371c <__swsetup_r+0x4c>
 800370a:	f104 0340 	add.w	r3, r4, #64	; 0x40
 800370e:	4299      	cmp	r1, r3
 8003710:	d002      	beq.n	8003718 <__swsetup_r+0x48>
 8003712:	4628      	mov	r0, r5
 8003714:	f001 f814 	bl	8004740 <_free_r>
 8003718:	2300      	movs	r3, #0
 800371a:	6323      	str	r3, [r4, #48]	; 0x30
 800371c:	89a3      	ldrh	r3, [r4, #12]
 800371e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003722:	81a3      	strh	r3, [r4, #12]
 8003724:	2300      	movs	r3, #0
 8003726:	6063      	str	r3, [r4, #4]
 8003728:	6923      	ldr	r3, [r4, #16]
 800372a:	6023      	str	r3, [r4, #0]
 800372c:	89a3      	ldrh	r3, [r4, #12]
 800372e:	f043 0308 	orr.w	r3, r3, #8
 8003732:	81a3      	strh	r3, [r4, #12]
 8003734:	6923      	ldr	r3, [r4, #16]
 8003736:	b94b      	cbnz	r3, 800374c <__swsetup_r+0x7c>
 8003738:	89a3      	ldrh	r3, [r4, #12]
 800373a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800373e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003742:	d003      	beq.n	800374c <__swsetup_r+0x7c>
 8003744:	4621      	mov	r1, r4
 8003746:	4628      	mov	r0, r5
 8003748:	f001 fa58 	bl	8004bfc <__smakebuf_r>
 800374c:	89a0      	ldrh	r0, [r4, #12]
 800374e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003752:	f010 0301 	ands.w	r3, r0, #1
 8003756:	d00a      	beq.n	800376e <__swsetup_r+0x9e>
 8003758:	2300      	movs	r3, #0
 800375a:	60a3      	str	r3, [r4, #8]
 800375c:	6963      	ldr	r3, [r4, #20]
 800375e:	425b      	negs	r3, r3
 8003760:	61a3      	str	r3, [r4, #24]
 8003762:	6923      	ldr	r3, [r4, #16]
 8003764:	b943      	cbnz	r3, 8003778 <__swsetup_r+0xa8>
 8003766:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800376a:	d1c4      	bne.n	80036f6 <__swsetup_r+0x26>
 800376c:	bd38      	pop	{r3, r4, r5, pc}
 800376e:	0781      	lsls	r1, r0, #30
 8003770:	bf58      	it	pl
 8003772:	6963      	ldrpl	r3, [r4, #20]
 8003774:	60a3      	str	r3, [r4, #8]
 8003776:	e7f4      	b.n	8003762 <__swsetup_r+0x92>
 8003778:	2000      	movs	r0, #0
 800377a:	e7f7      	b.n	800376c <__swsetup_r+0x9c>
 800377c:	20000014 	.word	0x20000014

08003780 <register_fini>:
 8003780:	4b02      	ldr	r3, [pc, #8]	; (800378c <register_fini+0xc>)
 8003782:	b113      	cbz	r3, 800378a <register_fini+0xa>
 8003784:	4802      	ldr	r0, [pc, #8]	; (8003790 <register_fini+0x10>)
 8003786:	f000 b805 	b.w	8003794 <atexit>
 800378a:	4770      	bx	lr
 800378c:	00000000 	.word	0x00000000
 8003790:	08004671 	.word	0x08004671

08003794 <atexit>:
 8003794:	2300      	movs	r3, #0
 8003796:	4601      	mov	r1, r0
 8003798:	461a      	mov	r2, r3
 800379a:	4618      	mov	r0, r3
 800379c:	f002 bf64 	b.w	8006668 <__register_exitproc>

080037a0 <quorem>:
 80037a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80037a4:	6903      	ldr	r3, [r0, #16]
 80037a6:	690c      	ldr	r4, [r1, #16]
 80037a8:	42a3      	cmp	r3, r4
 80037aa:	4607      	mov	r7, r0
 80037ac:	f2c0 8081 	blt.w	80038b2 <quorem+0x112>
 80037b0:	3c01      	subs	r4, #1
 80037b2:	f101 0814 	add.w	r8, r1, #20
 80037b6:	f100 0514 	add.w	r5, r0, #20
 80037ba:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 80037be:	9301      	str	r3, [sp, #4]
 80037c0:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 80037c4:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 80037c8:	3301      	adds	r3, #1
 80037ca:	429a      	cmp	r2, r3
 80037cc:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 80037d0:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 80037d4:	fbb2 f6f3 	udiv	r6, r2, r3
 80037d8:	d331      	bcc.n	800383e <quorem+0x9e>
 80037da:	f04f 0e00 	mov.w	lr, #0
 80037de:	4640      	mov	r0, r8
 80037e0:	46ac      	mov	ip, r5
 80037e2:	46f2      	mov	sl, lr
 80037e4:	f850 2b04 	ldr.w	r2, [r0], #4
 80037e8:	b293      	uxth	r3, r2
 80037ea:	fb06 e303 	mla	r3, r6, r3, lr
 80037ee:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 80037f2:	b29b      	uxth	r3, r3
 80037f4:	ebaa 0303 	sub.w	r3, sl, r3
 80037f8:	0c12      	lsrs	r2, r2, #16
 80037fa:	f8dc a000 	ldr.w	sl, [ip]
 80037fe:	fb06 e202 	mla	r2, r6, r2, lr
 8003802:	fa13 f38a 	uxtah	r3, r3, sl
 8003806:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800380a:	fa1f fa82 	uxth.w	sl, r2
 800380e:	f8dc 2000 	ldr.w	r2, [ip]
 8003812:	ebca 4212 	rsb	r2, sl, r2, lsr #16
 8003816:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800381a:	b29b      	uxth	r3, r3
 800381c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003820:	4581      	cmp	r9, r0
 8003822:	f84c 3b04 	str.w	r3, [ip], #4
 8003826:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800382a:	d2db      	bcs.n	80037e4 <quorem+0x44>
 800382c:	f855 300b 	ldr.w	r3, [r5, fp]
 8003830:	b92b      	cbnz	r3, 800383e <quorem+0x9e>
 8003832:	9b01      	ldr	r3, [sp, #4]
 8003834:	3b04      	subs	r3, #4
 8003836:	429d      	cmp	r5, r3
 8003838:	461a      	mov	r2, r3
 800383a:	d32e      	bcc.n	800389a <quorem+0xfa>
 800383c:	613c      	str	r4, [r7, #16]
 800383e:	4638      	mov	r0, r7
 8003840:	f001 fec0 	bl	80055c4 <__mcmp>
 8003844:	2800      	cmp	r0, #0
 8003846:	db24      	blt.n	8003892 <quorem+0xf2>
 8003848:	3601      	adds	r6, #1
 800384a:	4628      	mov	r0, r5
 800384c:	f04f 0c00 	mov.w	ip, #0
 8003850:	f858 2b04 	ldr.w	r2, [r8], #4
 8003854:	f8d0 e000 	ldr.w	lr, [r0]
 8003858:	b293      	uxth	r3, r2
 800385a:	ebac 0303 	sub.w	r3, ip, r3
 800385e:	0c12      	lsrs	r2, r2, #16
 8003860:	fa13 f38e 	uxtah	r3, r3, lr
 8003864:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003868:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800386c:	b29b      	uxth	r3, r3
 800386e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8003872:	45c1      	cmp	r9, r8
 8003874:	f840 3b04 	str.w	r3, [r0], #4
 8003878:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800387c:	d2e8      	bcs.n	8003850 <quorem+0xb0>
 800387e:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003882:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003886:	b922      	cbnz	r2, 8003892 <quorem+0xf2>
 8003888:	3b04      	subs	r3, #4
 800388a:	429d      	cmp	r5, r3
 800388c:	461a      	mov	r2, r3
 800388e:	d30a      	bcc.n	80038a6 <quorem+0x106>
 8003890:	613c      	str	r4, [r7, #16]
 8003892:	4630      	mov	r0, r6
 8003894:	b003      	add	sp, #12
 8003896:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800389a:	6812      	ldr	r2, [r2, #0]
 800389c:	3b04      	subs	r3, #4
 800389e:	2a00      	cmp	r2, #0
 80038a0:	d1cc      	bne.n	800383c <quorem+0x9c>
 80038a2:	3c01      	subs	r4, #1
 80038a4:	e7c7      	b.n	8003836 <quorem+0x96>
 80038a6:	6812      	ldr	r2, [r2, #0]
 80038a8:	3b04      	subs	r3, #4
 80038aa:	2a00      	cmp	r2, #0
 80038ac:	d1f0      	bne.n	8003890 <quorem+0xf0>
 80038ae:	3c01      	subs	r4, #1
 80038b0:	e7eb      	b.n	800388a <quorem+0xea>
 80038b2:	2000      	movs	r0, #0
 80038b4:	e7ee      	b.n	8003894 <quorem+0xf4>
	...

080038b8 <_dtoa_r>:
 80038b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038bc:	6c01      	ldr	r1, [r0, #64]	; 0x40
 80038be:	b097      	sub	sp, #92	; 0x5c
 80038c0:	4681      	mov	r9, r0
 80038c2:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 80038c4:	4614      	mov	r4, r2
 80038c6:	461d      	mov	r5, r3
 80038c8:	4692      	mov	sl, r2
 80038ca:	469b      	mov	fp, r3
 80038cc:	b149      	cbz	r1, 80038e2 <_dtoa_r+0x2a>
 80038ce:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80038d0:	604a      	str	r2, [r1, #4]
 80038d2:	2301      	movs	r3, #1
 80038d4:	4093      	lsls	r3, r2
 80038d6:	608b      	str	r3, [r1, #8]
 80038d8:	f001 fc6b 	bl	80051b2 <_Bfree>
 80038dc:	2300      	movs	r3, #0
 80038de:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
 80038e2:	1e2b      	subs	r3, r5, #0
 80038e4:	bfaa      	itet	ge
 80038e6:	2300      	movge	r3, #0
 80038e8:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 80038ec:	6033      	strge	r3, [r6, #0]
 80038ee:	4ba2      	ldr	r3, [pc, #648]	; (8003b78 <_dtoa_r+0x2c0>)
 80038f0:	f8cd b00c 	str.w	fp, [sp, #12]
 80038f4:	bfbc      	itt	lt
 80038f6:	2201      	movlt	r2, #1
 80038f8:	6032      	strlt	r2, [r6, #0]
 80038fa:	ea33 030b 	bics.w	r3, r3, fp
 80038fe:	d119      	bne.n	8003934 <_dtoa_r+0x7c>
 8003900:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003902:	f242 730f 	movw	r3, #9999	; 0x270f
 8003906:	6013      	str	r3, [r2, #0]
 8003908:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800390c:	4323      	orrs	r3, r4
 800390e:	f000 8578 	beq.w	8004402 <_dtoa_r+0xb4a>
 8003912:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8003914:	b90b      	cbnz	r3, 800391a <_dtoa_r+0x62>
 8003916:	4b99      	ldr	r3, [pc, #612]	; (8003b7c <_dtoa_r+0x2c4>)
 8003918:	e020      	b.n	800395c <_dtoa_r+0xa4>
 800391a:	4b98      	ldr	r3, [pc, #608]	; (8003b7c <_dtoa_r+0x2c4>)
 800391c:	9306      	str	r3, [sp, #24]
 800391e:	3303      	adds	r3, #3
 8003920:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8003922:	6013      	str	r3, [r2, #0]
 8003924:	9806      	ldr	r0, [sp, #24]
 8003926:	b017      	add	sp, #92	; 0x5c
 8003928:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800392c:	4b94      	ldr	r3, [pc, #592]	; (8003b80 <_dtoa_r+0x2c8>)
 800392e:	9306      	str	r3, [sp, #24]
 8003930:	3308      	adds	r3, #8
 8003932:	e7f5      	b.n	8003920 <_dtoa_r+0x68>
 8003934:	2200      	movs	r2, #0
 8003936:	2300      	movs	r3, #0
 8003938:	4650      	mov	r0, sl
 800393a:	4659      	mov	r1, fp
 800393c:	e9cd ab0c 	strd	sl, fp, [sp, #48]	; 0x30
 8003940:	f7fd f8d2 	bl	8000ae8 <__aeabi_dcmpeq>
 8003944:	4607      	mov	r7, r0
 8003946:	b158      	cbz	r0, 8003960 <_dtoa_r+0xa8>
 8003948:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800394a:	2301      	movs	r3, #1
 800394c:	6013      	str	r3, [r2, #0]
 800394e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8003950:	2b00      	cmp	r3, #0
 8003952:	f000 8553 	beq.w	80043fc <_dtoa_r+0xb44>
 8003956:	488b      	ldr	r0, [pc, #556]	; (8003b84 <_dtoa_r+0x2cc>)
 8003958:	6018      	str	r0, [r3, #0]
 800395a:	1e43      	subs	r3, r0, #1
 800395c:	9306      	str	r3, [sp, #24]
 800395e:	e7e1      	b.n	8003924 <_dtoa_r+0x6c>
 8003960:	ab14      	add	r3, sp, #80	; 0x50
 8003962:	9301      	str	r3, [sp, #4]
 8003964:	ab15      	add	r3, sp, #84	; 0x54
 8003966:	9300      	str	r3, [sp, #0]
 8003968:	4648      	mov	r0, r9
 800396a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800396e:	f001 fecf 	bl	8005710 <__d2b>
 8003972:	9b03      	ldr	r3, [sp, #12]
 8003974:	f3c3 560a 	ubfx	r6, r3, #20, #11
 8003978:	4680      	mov	r8, r0
 800397a:	2e00      	cmp	r6, #0
 800397c:	d07e      	beq.n	8003a7c <_dtoa_r+0x1c4>
 800397e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003980:	9713      	str	r7, [sp, #76]	; 0x4c
 8003982:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003986:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800398a:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800398e:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 8003992:	f2a6 36ff 	subw	r6, r6, #1023	; 0x3ff
 8003996:	4b7c      	ldr	r3, [pc, #496]	; (8003b88 <_dtoa_r+0x2d0>)
 8003998:	2200      	movs	r2, #0
 800399a:	f7fc fc85 	bl	80002a8 <__aeabi_dsub>
 800399e:	a370      	add	r3, pc, #448	; (adr r3, 8003b60 <_dtoa_r+0x2a8>)
 80039a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039a4:	f7fc fe38 	bl	8000618 <__aeabi_dmul>
 80039a8:	a36f      	add	r3, pc, #444	; (adr r3, 8003b68 <_dtoa_r+0x2b0>)
 80039aa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039ae:	f7fc fc7d 	bl	80002ac <__adddf3>
 80039b2:	4604      	mov	r4, r0
 80039b4:	4630      	mov	r0, r6
 80039b6:	460d      	mov	r5, r1
 80039b8:	f7fc fdc4 	bl	8000544 <__aeabi_i2d>
 80039bc:	a36c      	add	r3, pc, #432	; (adr r3, 8003b70 <_dtoa_r+0x2b8>)
 80039be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80039c2:	f7fc fe29 	bl	8000618 <__aeabi_dmul>
 80039c6:	4602      	mov	r2, r0
 80039c8:	460b      	mov	r3, r1
 80039ca:	4620      	mov	r0, r4
 80039cc:	4629      	mov	r1, r5
 80039ce:	f7fc fc6d 	bl	80002ac <__adddf3>
 80039d2:	4604      	mov	r4, r0
 80039d4:	460d      	mov	r5, r1
 80039d6:	f7fd f8cf 	bl	8000b78 <__aeabi_d2iz>
 80039da:	2200      	movs	r2, #0
 80039dc:	9003      	str	r0, [sp, #12]
 80039de:	2300      	movs	r3, #0
 80039e0:	4620      	mov	r0, r4
 80039e2:	4629      	mov	r1, r5
 80039e4:	f7fd f88a 	bl	8000afc <__aeabi_dcmplt>
 80039e8:	b150      	cbz	r0, 8003a00 <_dtoa_r+0x148>
 80039ea:	9803      	ldr	r0, [sp, #12]
 80039ec:	f7fc fdaa 	bl	8000544 <__aeabi_i2d>
 80039f0:	4622      	mov	r2, r4
 80039f2:	462b      	mov	r3, r5
 80039f4:	f7fd f878 	bl	8000ae8 <__aeabi_dcmpeq>
 80039f8:	b910      	cbnz	r0, 8003a00 <_dtoa_r+0x148>
 80039fa:	9b03      	ldr	r3, [sp, #12]
 80039fc:	3b01      	subs	r3, #1
 80039fe:	9303      	str	r3, [sp, #12]
 8003a00:	9b03      	ldr	r3, [sp, #12]
 8003a02:	2b16      	cmp	r3, #22
 8003a04:	d857      	bhi.n	8003ab6 <_dtoa_r+0x1fe>
 8003a06:	9a03      	ldr	r2, [sp, #12]
 8003a08:	4b60      	ldr	r3, [pc, #384]	; (8003b8c <_dtoa_r+0x2d4>)
 8003a0a:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003a0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a12:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003a16:	f7fd f871 	bl	8000afc <__aeabi_dcmplt>
 8003a1a:	2800      	cmp	r0, #0
 8003a1c:	d04d      	beq.n	8003aba <_dtoa_r+0x202>
 8003a1e:	9b03      	ldr	r3, [sp, #12]
 8003a20:	3b01      	subs	r3, #1
 8003a22:	9303      	str	r3, [sp, #12]
 8003a24:	2300      	movs	r3, #0
 8003a26:	930f      	str	r3, [sp, #60]	; 0x3c
 8003a28:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8003a2a:	1b9e      	subs	r6, r3, r6
 8003a2c:	1e73      	subs	r3, r6, #1
 8003a2e:	9309      	str	r3, [sp, #36]	; 0x24
 8003a30:	bf45      	ittet	mi
 8003a32:	f1c6 0301 	rsbmi	r3, r6, #1
 8003a36:	9308      	strmi	r3, [sp, #32]
 8003a38:	2300      	movpl	r3, #0
 8003a3a:	2300      	movmi	r3, #0
 8003a3c:	bf4c      	ite	mi
 8003a3e:	9309      	strmi	r3, [sp, #36]	; 0x24
 8003a40:	9308      	strpl	r3, [sp, #32]
 8003a42:	9b03      	ldr	r3, [sp, #12]
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	db3a      	blt.n	8003abe <_dtoa_r+0x206>
 8003a48:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a4a:	9a03      	ldr	r2, [sp, #12]
 8003a4c:	920e      	str	r2, [sp, #56]	; 0x38
 8003a4e:	4413      	add	r3, r2
 8003a50:	9309      	str	r3, [sp, #36]	; 0x24
 8003a52:	2300      	movs	r3, #0
 8003a54:	930a      	str	r3, [sp, #40]	; 0x28
 8003a56:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a58:	2b09      	cmp	r3, #9
 8003a5a:	d86a      	bhi.n	8003b32 <_dtoa_r+0x27a>
 8003a5c:	2b05      	cmp	r3, #5
 8003a5e:	bfc4      	itt	gt
 8003a60:	3b04      	subgt	r3, #4
 8003a62:	9320      	strgt	r3, [sp, #128]	; 0x80
 8003a64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8003a66:	f1a3 0302 	sub.w	r3, r3, #2
 8003a6a:	bfcc      	ite	gt
 8003a6c:	2400      	movgt	r4, #0
 8003a6e:	2401      	movle	r4, #1
 8003a70:	2b03      	cmp	r3, #3
 8003a72:	d869      	bhi.n	8003b48 <_dtoa_r+0x290>
 8003a74:	e8df f003 	tbb	[pc, r3]
 8003a78:	5b37392c 	.word	0x5b37392c
 8003a7c:	e9dd 6314 	ldrd	r6, r3, [sp, #80]	; 0x50
 8003a80:	441e      	add	r6, r3
 8003a82:	f206 4332 	addw	r3, r6, #1074	; 0x432
 8003a86:	2b20      	cmp	r3, #32
 8003a88:	dd10      	ble.n	8003aac <_dtoa_r+0x1f4>
 8003a8a:	9a03      	ldr	r2, [sp, #12]
 8003a8c:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
 8003a90:	f206 4012 	addw	r0, r6, #1042	; 0x412
 8003a94:	409a      	lsls	r2, r3
 8003a96:	fa24 f000 	lsr.w	r0, r4, r0
 8003a9a:	4310      	orrs	r0, r2
 8003a9c:	f7fc fd42 	bl	8000524 <__aeabi_ui2d>
 8003aa0:	2301      	movs	r3, #1
 8003aa2:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8003aa6:	3e01      	subs	r6, #1
 8003aa8:	9313      	str	r3, [sp, #76]	; 0x4c
 8003aaa:	e774      	b.n	8003996 <_dtoa_r+0xde>
 8003aac:	f1c3 0320 	rsb	r3, r3, #32
 8003ab0:	fa04 f003 	lsl.w	r0, r4, r3
 8003ab4:	e7f2      	b.n	8003a9c <_dtoa_r+0x1e4>
 8003ab6:	2301      	movs	r3, #1
 8003ab8:	e7b5      	b.n	8003a26 <_dtoa_r+0x16e>
 8003aba:	900f      	str	r0, [sp, #60]	; 0x3c
 8003abc:	e7b4      	b.n	8003a28 <_dtoa_r+0x170>
 8003abe:	9b08      	ldr	r3, [sp, #32]
 8003ac0:	9a03      	ldr	r2, [sp, #12]
 8003ac2:	1a9b      	subs	r3, r3, r2
 8003ac4:	9308      	str	r3, [sp, #32]
 8003ac6:	4253      	negs	r3, r2
 8003ac8:	930a      	str	r3, [sp, #40]	; 0x28
 8003aca:	2300      	movs	r3, #0
 8003acc:	930e      	str	r3, [sp, #56]	; 0x38
 8003ace:	e7c2      	b.n	8003a56 <_dtoa_r+0x19e>
 8003ad0:	2300      	movs	r3, #0
 8003ad2:	930b      	str	r3, [sp, #44]	; 0x2c
 8003ad4:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003ad6:	2b00      	cmp	r3, #0
 8003ad8:	dc39      	bgt.n	8003b4e <_dtoa_r+0x296>
 8003ada:	2301      	movs	r3, #1
 8003adc:	9304      	str	r3, [sp, #16]
 8003ade:	9307      	str	r3, [sp, #28]
 8003ae0:	461a      	mov	r2, r3
 8003ae2:	9221      	str	r2, [sp, #132]	; 0x84
 8003ae4:	e00c      	b.n	8003b00 <_dtoa_r+0x248>
 8003ae6:	2301      	movs	r3, #1
 8003ae8:	e7f3      	b.n	8003ad2 <_dtoa_r+0x21a>
 8003aea:	2300      	movs	r3, #0
 8003aec:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8003aee:	930b      	str	r3, [sp, #44]	; 0x2c
 8003af0:	9b03      	ldr	r3, [sp, #12]
 8003af2:	4413      	add	r3, r2
 8003af4:	9304      	str	r3, [sp, #16]
 8003af6:	3301      	adds	r3, #1
 8003af8:	2b01      	cmp	r3, #1
 8003afa:	9307      	str	r3, [sp, #28]
 8003afc:	bfb8      	it	lt
 8003afe:	2301      	movlt	r3, #1
 8003b00:	2200      	movs	r2, #0
 8003b02:	f8c9 2044 	str.w	r2, [r9, #68]	; 0x44
 8003b06:	2204      	movs	r2, #4
 8003b08:	f102 0014 	add.w	r0, r2, #20
 8003b0c:	4298      	cmp	r0, r3
 8003b0e:	f8d9 1044 	ldr.w	r1, [r9, #68]	; 0x44
 8003b12:	d920      	bls.n	8003b56 <_dtoa_r+0x29e>
 8003b14:	4648      	mov	r0, r9
 8003b16:	f001 fb27 	bl	8005168 <_Balloc>
 8003b1a:	9006      	str	r0, [sp, #24]
 8003b1c:	2800      	cmp	r0, #0
 8003b1e:	d13b      	bne.n	8003b98 <_dtoa_r+0x2e0>
 8003b20:	4b1b      	ldr	r3, [pc, #108]	; (8003b90 <_dtoa_r+0x2d8>)
 8003b22:	4602      	mov	r2, r0
 8003b24:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 8003b28:	481a      	ldr	r0, [pc, #104]	; (8003b94 <_dtoa_r+0x2dc>)
 8003b2a:	f002 fddd 	bl	80066e8 <__assert_func>
 8003b2e:	2301      	movs	r3, #1
 8003b30:	e7dc      	b.n	8003aec <_dtoa_r+0x234>
 8003b32:	2401      	movs	r4, #1
 8003b34:	2300      	movs	r3, #0
 8003b36:	9320      	str	r3, [sp, #128]	; 0x80
 8003b38:	940b      	str	r4, [sp, #44]	; 0x2c
 8003b3a:	f04f 33ff 	mov.w	r3, #4294967295
 8003b3e:	9304      	str	r3, [sp, #16]
 8003b40:	9307      	str	r3, [sp, #28]
 8003b42:	2200      	movs	r2, #0
 8003b44:	2312      	movs	r3, #18
 8003b46:	e7cc      	b.n	8003ae2 <_dtoa_r+0x22a>
 8003b48:	2301      	movs	r3, #1
 8003b4a:	930b      	str	r3, [sp, #44]	; 0x2c
 8003b4c:	e7f5      	b.n	8003b3a <_dtoa_r+0x282>
 8003b4e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003b50:	9304      	str	r3, [sp, #16]
 8003b52:	9307      	str	r3, [sp, #28]
 8003b54:	e7d4      	b.n	8003b00 <_dtoa_r+0x248>
 8003b56:	3101      	adds	r1, #1
 8003b58:	f8c9 1044 	str.w	r1, [r9, #68]	; 0x44
 8003b5c:	0052      	lsls	r2, r2, #1
 8003b5e:	e7d3      	b.n	8003b08 <_dtoa_r+0x250>
 8003b60:	636f4361 	.word	0x636f4361
 8003b64:	3fd287a7 	.word	0x3fd287a7
 8003b68:	8b60c8b3 	.word	0x8b60c8b3
 8003b6c:	3fc68a28 	.word	0x3fc68a28
 8003b70:	509f79fb 	.word	0x509f79fb
 8003b74:	3fd34413 	.word	0x3fd34413
 8003b78:	7ff00000 	.word	0x7ff00000
 8003b7c:	08007274 	.word	0x08007274
 8003b80:	08007278 	.word	0x08007278
 8003b84:	08007253 	.word	0x08007253
 8003b88:	3ff80000 	.word	0x3ff80000
 8003b8c:	08007380 	.word	0x08007380
 8003b90:	08007281 	.word	0x08007281
 8003b94:	08007292 	.word	0x08007292
 8003b98:	9b06      	ldr	r3, [sp, #24]
 8003b9a:	f8c9 3040 	str.w	r3, [r9, #64]	; 0x40
 8003b9e:	9b07      	ldr	r3, [sp, #28]
 8003ba0:	2b0e      	cmp	r3, #14
 8003ba2:	f200 80a1 	bhi.w	8003ce8 <_dtoa_r+0x430>
 8003ba6:	2c00      	cmp	r4, #0
 8003ba8:	f000 809e 	beq.w	8003ce8 <_dtoa_r+0x430>
 8003bac:	9b03      	ldr	r3, [sp, #12]
 8003bae:	2b00      	cmp	r3, #0
 8003bb0:	dd34      	ble.n	8003c1c <_dtoa_r+0x364>
 8003bb2:	4a96      	ldr	r2, [pc, #600]	; (8003e0c <_dtoa_r+0x554>)
 8003bb4:	f003 030f 	and.w	r3, r3, #15
 8003bb8:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8003bbc:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003bc0:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003bc4:	9b03      	ldr	r3, [sp, #12]
 8003bc6:	05d8      	lsls	r0, r3, #23
 8003bc8:	ea4f 1523 	mov.w	r5, r3, asr #4
 8003bcc:	d516      	bpl.n	8003bfc <_dtoa_r+0x344>
 8003bce:	4b90      	ldr	r3, [pc, #576]	; (8003e10 <_dtoa_r+0x558>)
 8003bd0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003bd4:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8003bd8:	f7fc fe48 	bl	800086c <__aeabi_ddiv>
 8003bdc:	f005 050f 	and.w	r5, r5, #15
 8003be0:	4682      	mov	sl, r0
 8003be2:	468b      	mov	fp, r1
 8003be4:	2603      	movs	r6, #3
 8003be6:	4c8a      	ldr	r4, [pc, #552]	; (8003e10 <_dtoa_r+0x558>)
 8003be8:	b955      	cbnz	r5, 8003c00 <_dtoa_r+0x348>
 8003bea:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003bee:	4650      	mov	r0, sl
 8003bf0:	4659      	mov	r1, fp
 8003bf2:	f7fc fe3b 	bl	800086c <__aeabi_ddiv>
 8003bf6:	4682      	mov	sl, r0
 8003bf8:	468b      	mov	fp, r1
 8003bfa:	e028      	b.n	8003c4e <_dtoa_r+0x396>
 8003bfc:	2602      	movs	r6, #2
 8003bfe:	e7f2      	b.n	8003be6 <_dtoa_r+0x32e>
 8003c00:	07e9      	lsls	r1, r5, #31
 8003c02:	d508      	bpl.n	8003c16 <_dtoa_r+0x35e>
 8003c04:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003c08:	e9d4 2300 	ldrd	r2, r3, [r4]
 8003c0c:	f7fc fd04 	bl	8000618 <__aeabi_dmul>
 8003c10:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003c14:	3601      	adds	r6, #1
 8003c16:	106d      	asrs	r5, r5, #1
 8003c18:	3408      	adds	r4, #8
 8003c1a:	e7e5      	b.n	8003be8 <_dtoa_r+0x330>
 8003c1c:	f000 809f 	beq.w	8003d5e <_dtoa_r+0x4a6>
 8003c20:	9b03      	ldr	r3, [sp, #12]
 8003c22:	4d7b      	ldr	r5, [pc, #492]	; (8003e10 <_dtoa_r+0x558>)
 8003c24:	425c      	negs	r4, r3
 8003c26:	4b79      	ldr	r3, [pc, #484]	; (8003e0c <_dtoa_r+0x554>)
 8003c28:	f004 020f 	and.w	r2, r4, #15
 8003c2c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003c30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003c34:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003c38:	f7fc fcee 	bl	8000618 <__aeabi_dmul>
 8003c3c:	1124      	asrs	r4, r4, #4
 8003c3e:	4682      	mov	sl, r0
 8003c40:	468b      	mov	fp, r1
 8003c42:	2300      	movs	r3, #0
 8003c44:	2602      	movs	r6, #2
 8003c46:	2c00      	cmp	r4, #0
 8003c48:	d17e      	bne.n	8003d48 <_dtoa_r+0x490>
 8003c4a:	2b00      	cmp	r3, #0
 8003c4c:	d1d3      	bne.n	8003bf6 <_dtoa_r+0x33e>
 8003c4e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003c50:	2b00      	cmp	r3, #0
 8003c52:	f000 8086 	beq.w	8003d62 <_dtoa_r+0x4aa>
 8003c56:	4b6f      	ldr	r3, [pc, #444]	; (8003e14 <_dtoa_r+0x55c>)
 8003c58:	2200      	movs	r2, #0
 8003c5a:	4650      	mov	r0, sl
 8003c5c:	4659      	mov	r1, fp
 8003c5e:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
 8003c62:	f7fc ff4b 	bl	8000afc <__aeabi_dcmplt>
 8003c66:	2800      	cmp	r0, #0
 8003c68:	d07b      	beq.n	8003d62 <_dtoa_r+0x4aa>
 8003c6a:	9b07      	ldr	r3, [sp, #28]
 8003c6c:	2b00      	cmp	r3, #0
 8003c6e:	d078      	beq.n	8003d62 <_dtoa_r+0x4aa>
 8003c70:	9b04      	ldr	r3, [sp, #16]
 8003c72:	2b00      	cmp	r3, #0
 8003c74:	dd36      	ble.n	8003ce4 <_dtoa_r+0x42c>
 8003c76:	9b03      	ldr	r3, [sp, #12]
 8003c78:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003c7c:	1e5d      	subs	r5, r3, #1
 8003c7e:	2200      	movs	r2, #0
 8003c80:	4b65      	ldr	r3, [pc, #404]	; (8003e18 <_dtoa_r+0x560>)
 8003c82:	f7fc fcc9 	bl	8000618 <__aeabi_dmul>
 8003c86:	9c04      	ldr	r4, [sp, #16]
 8003c88:	4682      	mov	sl, r0
 8003c8a:	468b      	mov	fp, r1
 8003c8c:	3601      	adds	r6, #1
 8003c8e:	4630      	mov	r0, r6
 8003c90:	f7fc fc58 	bl	8000544 <__aeabi_i2d>
 8003c94:	4652      	mov	r2, sl
 8003c96:	465b      	mov	r3, fp
 8003c98:	f7fc fcbe 	bl	8000618 <__aeabi_dmul>
 8003c9c:	4b5f      	ldr	r3, [pc, #380]	; (8003e1c <_dtoa_r+0x564>)
 8003c9e:	2200      	movs	r2, #0
 8003ca0:	f7fc fb04 	bl	80002ac <__adddf3>
 8003ca4:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8003ca8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003cac:	9611      	str	r6, [sp, #68]	; 0x44
 8003cae:	2c00      	cmp	r4, #0
 8003cb0:	d15a      	bne.n	8003d68 <_dtoa_r+0x4b0>
 8003cb2:	4b5b      	ldr	r3, [pc, #364]	; (8003e20 <_dtoa_r+0x568>)
 8003cb4:	2200      	movs	r2, #0
 8003cb6:	4650      	mov	r0, sl
 8003cb8:	4659      	mov	r1, fp
 8003cba:	f7fc faf5 	bl	80002a8 <__aeabi_dsub>
 8003cbe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003cc0:	4633      	mov	r3, r6
 8003cc2:	4682      	mov	sl, r0
 8003cc4:	468b      	mov	fp, r1
 8003cc6:	f7fc ff37 	bl	8000b38 <__aeabi_dcmpgt>
 8003cca:	2800      	cmp	r0, #0
 8003ccc:	f040 828b 	bne.w	80041e6 <_dtoa_r+0x92e>
 8003cd0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003cd2:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8003cd6:	4650      	mov	r0, sl
 8003cd8:	4659      	mov	r1, fp
 8003cda:	f7fc ff0f 	bl	8000afc <__aeabi_dcmplt>
 8003cde:	2800      	cmp	r0, #0
 8003ce0:	f040 827f 	bne.w	80041e2 <_dtoa_r+0x92a>
 8003ce4:	e9dd ab0c 	ldrd	sl, fp, [sp, #48]	; 0x30
 8003ce8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003cea:	2b00      	cmp	r3, #0
 8003cec:	f2c0 814d 	blt.w	8003f8a <_dtoa_r+0x6d2>
 8003cf0:	9a03      	ldr	r2, [sp, #12]
 8003cf2:	2a0e      	cmp	r2, #14
 8003cf4:	f300 8149 	bgt.w	8003f8a <_dtoa_r+0x6d2>
 8003cf8:	4b44      	ldr	r3, [pc, #272]	; (8003e0c <_dtoa_r+0x554>)
 8003cfa:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003cfe:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003d02:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003d06:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	f280 80d6 	bge.w	8003eba <_dtoa_r+0x602>
 8003d0e:	9b07      	ldr	r3, [sp, #28]
 8003d10:	2b00      	cmp	r3, #0
 8003d12:	f300 80d2 	bgt.w	8003eba <_dtoa_r+0x602>
 8003d16:	f040 8263 	bne.w	80041e0 <_dtoa_r+0x928>
 8003d1a:	4b41      	ldr	r3, [pc, #260]	; (8003e20 <_dtoa_r+0x568>)
 8003d1c:	2200      	movs	r2, #0
 8003d1e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003d22:	f7fc fc79 	bl	8000618 <__aeabi_dmul>
 8003d26:	4652      	mov	r2, sl
 8003d28:	465b      	mov	r3, fp
 8003d2a:	f7fc fefb 	bl	8000b24 <__aeabi_dcmpge>
 8003d2e:	9c07      	ldr	r4, [sp, #28]
 8003d30:	4625      	mov	r5, r4
 8003d32:	2800      	cmp	r0, #0
 8003d34:	f040 823c 	bne.w	80041b0 <_dtoa_r+0x8f8>
 8003d38:	9e06      	ldr	r6, [sp, #24]
 8003d3a:	2331      	movs	r3, #49	; 0x31
 8003d3c:	f806 3b01 	strb.w	r3, [r6], #1
 8003d40:	9b03      	ldr	r3, [sp, #12]
 8003d42:	3301      	adds	r3, #1
 8003d44:	9303      	str	r3, [sp, #12]
 8003d46:	e237      	b.n	80041b8 <_dtoa_r+0x900>
 8003d48:	07e2      	lsls	r2, r4, #31
 8003d4a:	d505      	bpl.n	8003d58 <_dtoa_r+0x4a0>
 8003d4c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003d50:	f7fc fc62 	bl	8000618 <__aeabi_dmul>
 8003d54:	3601      	adds	r6, #1
 8003d56:	2301      	movs	r3, #1
 8003d58:	1064      	asrs	r4, r4, #1
 8003d5a:	3508      	adds	r5, #8
 8003d5c:	e773      	b.n	8003c46 <_dtoa_r+0x38e>
 8003d5e:	2602      	movs	r6, #2
 8003d60:	e775      	b.n	8003c4e <_dtoa_r+0x396>
 8003d62:	9d03      	ldr	r5, [sp, #12]
 8003d64:	9c07      	ldr	r4, [sp, #28]
 8003d66:	e792      	b.n	8003c8e <_dtoa_r+0x3d6>
 8003d68:	9906      	ldr	r1, [sp, #24]
 8003d6a:	4b28      	ldr	r3, [pc, #160]	; (8003e0c <_dtoa_r+0x554>)
 8003d6c:	4421      	add	r1, r4
 8003d6e:	9112      	str	r1, [sp, #72]	; 0x48
 8003d70:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003d72:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003d76:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003d7a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003d7e:	2900      	cmp	r1, #0
 8003d80:	d052      	beq.n	8003e28 <_dtoa_r+0x570>
 8003d82:	4928      	ldr	r1, [pc, #160]	; (8003e24 <_dtoa_r+0x56c>)
 8003d84:	2000      	movs	r0, #0
 8003d86:	f7fc fd71 	bl	800086c <__aeabi_ddiv>
 8003d8a:	4632      	mov	r2, r6
 8003d8c:	463b      	mov	r3, r7
 8003d8e:	f7fc fa8b 	bl	80002a8 <__aeabi_dsub>
 8003d92:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003d96:	9e06      	ldr	r6, [sp, #24]
 8003d98:	4659      	mov	r1, fp
 8003d9a:	4650      	mov	r0, sl
 8003d9c:	f7fc feec 	bl	8000b78 <__aeabi_d2iz>
 8003da0:	4604      	mov	r4, r0
 8003da2:	f7fc fbcf 	bl	8000544 <__aeabi_i2d>
 8003da6:	4602      	mov	r2, r0
 8003da8:	460b      	mov	r3, r1
 8003daa:	4650      	mov	r0, sl
 8003dac:	4659      	mov	r1, fp
 8003dae:	f7fc fa7b 	bl	80002a8 <__aeabi_dsub>
 8003db2:	3430      	adds	r4, #48	; 0x30
 8003db4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003db8:	f806 4b01 	strb.w	r4, [r6], #1
 8003dbc:	4682      	mov	sl, r0
 8003dbe:	468b      	mov	fp, r1
 8003dc0:	f7fc fe9c 	bl	8000afc <__aeabi_dcmplt>
 8003dc4:	2800      	cmp	r0, #0
 8003dc6:	d170      	bne.n	8003eaa <_dtoa_r+0x5f2>
 8003dc8:	4652      	mov	r2, sl
 8003dca:	465b      	mov	r3, fp
 8003dcc:	4911      	ldr	r1, [pc, #68]	; (8003e14 <_dtoa_r+0x55c>)
 8003dce:	2000      	movs	r0, #0
 8003dd0:	f7fc fa6a 	bl	80002a8 <__aeabi_dsub>
 8003dd4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003dd8:	f7fc fe90 	bl	8000afc <__aeabi_dcmplt>
 8003ddc:	2800      	cmp	r0, #0
 8003dde:	f040 80b6 	bne.w	8003f4e <_dtoa_r+0x696>
 8003de2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003de4:	429e      	cmp	r6, r3
 8003de6:	f43f af7d 	beq.w	8003ce4 <_dtoa_r+0x42c>
 8003dea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003dee:	4b0a      	ldr	r3, [pc, #40]	; (8003e18 <_dtoa_r+0x560>)
 8003df0:	2200      	movs	r2, #0
 8003df2:	f7fc fc11 	bl	8000618 <__aeabi_dmul>
 8003df6:	4b08      	ldr	r3, [pc, #32]	; (8003e18 <_dtoa_r+0x560>)
 8003df8:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003dfc:	2200      	movs	r2, #0
 8003dfe:	4650      	mov	r0, sl
 8003e00:	4659      	mov	r1, fp
 8003e02:	f7fc fc09 	bl	8000618 <__aeabi_dmul>
 8003e06:	4682      	mov	sl, r0
 8003e08:	468b      	mov	fp, r1
 8003e0a:	e7c5      	b.n	8003d98 <_dtoa_r+0x4e0>
 8003e0c:	08007380 	.word	0x08007380
 8003e10:	08007358 	.word	0x08007358
 8003e14:	3ff00000 	.word	0x3ff00000
 8003e18:	40240000 	.word	0x40240000
 8003e1c:	401c0000 	.word	0x401c0000
 8003e20:	40140000 	.word	0x40140000
 8003e24:	3fe00000 	.word	0x3fe00000
 8003e28:	4630      	mov	r0, r6
 8003e2a:	4639      	mov	r1, r7
 8003e2c:	f7fc fbf4 	bl	8000618 <__aeabi_dmul>
 8003e30:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003e34:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8003e36:	9e06      	ldr	r6, [sp, #24]
 8003e38:	4659      	mov	r1, fp
 8003e3a:	4650      	mov	r0, sl
 8003e3c:	f7fc fe9c 	bl	8000b78 <__aeabi_d2iz>
 8003e40:	4604      	mov	r4, r0
 8003e42:	f7fc fb7f 	bl	8000544 <__aeabi_i2d>
 8003e46:	3430      	adds	r4, #48	; 0x30
 8003e48:	4602      	mov	r2, r0
 8003e4a:	460b      	mov	r3, r1
 8003e4c:	4650      	mov	r0, sl
 8003e4e:	4659      	mov	r1, fp
 8003e50:	f7fc fa2a 	bl	80002a8 <__aeabi_dsub>
 8003e54:	f806 4b01 	strb.w	r4, [r6], #1
 8003e58:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003e5a:	429e      	cmp	r6, r3
 8003e5c:	4682      	mov	sl, r0
 8003e5e:	468b      	mov	fp, r1
 8003e60:	f04f 0200 	mov.w	r2, #0
 8003e64:	d123      	bne.n	8003eae <_dtoa_r+0x5f6>
 8003e66:	4bb3      	ldr	r3, [pc, #716]	; (8004134 <_dtoa_r+0x87c>)
 8003e68:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003e6c:	f7fc fa1e 	bl	80002ac <__adddf3>
 8003e70:	4602      	mov	r2, r0
 8003e72:	460b      	mov	r3, r1
 8003e74:	4650      	mov	r0, sl
 8003e76:	4659      	mov	r1, fp
 8003e78:	f7fc fe5e 	bl	8000b38 <__aeabi_dcmpgt>
 8003e7c:	2800      	cmp	r0, #0
 8003e7e:	d166      	bne.n	8003f4e <_dtoa_r+0x696>
 8003e80:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003e84:	49ab      	ldr	r1, [pc, #684]	; (8004134 <_dtoa_r+0x87c>)
 8003e86:	2000      	movs	r0, #0
 8003e88:	f7fc fa0e 	bl	80002a8 <__aeabi_dsub>
 8003e8c:	4602      	mov	r2, r0
 8003e8e:	460b      	mov	r3, r1
 8003e90:	4650      	mov	r0, sl
 8003e92:	4659      	mov	r1, fp
 8003e94:	f7fc fe32 	bl	8000afc <__aeabi_dcmplt>
 8003e98:	2800      	cmp	r0, #0
 8003e9a:	f43f af23 	beq.w	8003ce4 <_dtoa_r+0x42c>
 8003e9e:	463e      	mov	r6, r7
 8003ea0:	3f01      	subs	r7, #1
 8003ea2:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8003ea6:	2b30      	cmp	r3, #48	; 0x30
 8003ea8:	d0f9      	beq.n	8003e9e <_dtoa_r+0x5e6>
 8003eaa:	9503      	str	r5, [sp, #12]
 8003eac:	e03e      	b.n	8003f2c <_dtoa_r+0x674>
 8003eae:	4ba2      	ldr	r3, [pc, #648]	; (8004138 <_dtoa_r+0x880>)
 8003eb0:	f7fc fbb2 	bl	8000618 <__aeabi_dmul>
 8003eb4:	4682      	mov	sl, r0
 8003eb6:	468b      	mov	fp, r1
 8003eb8:	e7be      	b.n	8003e38 <_dtoa_r+0x580>
 8003eba:	465d      	mov	r5, fp
 8003ebc:	9e06      	ldr	r6, [sp, #24]
 8003ebe:	f8df b278 	ldr.w	fp, [pc, #632]	; 8004138 <_dtoa_r+0x880>
 8003ec2:	4654      	mov	r4, sl
 8003ec4:	f04f 0a00 	mov.w	sl, #0
 8003ec8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003ecc:	4620      	mov	r0, r4
 8003ece:	4629      	mov	r1, r5
 8003ed0:	f7fc fccc 	bl	800086c <__aeabi_ddiv>
 8003ed4:	f7fc fe50 	bl	8000b78 <__aeabi_d2iz>
 8003ed8:	4607      	mov	r7, r0
 8003eda:	f7fc fb33 	bl	8000544 <__aeabi_i2d>
 8003ede:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003ee2:	f7fc fb99 	bl	8000618 <__aeabi_dmul>
 8003ee6:	4602      	mov	r2, r0
 8003ee8:	460b      	mov	r3, r1
 8003eea:	4620      	mov	r0, r4
 8003eec:	4629      	mov	r1, r5
 8003eee:	f107 0430 	add.w	r4, r7, #48	; 0x30
 8003ef2:	f7fc f9d9 	bl	80002a8 <__aeabi_dsub>
 8003ef6:	f806 4b01 	strb.w	r4, [r6], #1
 8003efa:	9c06      	ldr	r4, [sp, #24]
 8003efc:	9d07      	ldr	r5, [sp, #28]
 8003efe:	1b34      	subs	r4, r6, r4
 8003f00:	42a5      	cmp	r5, r4
 8003f02:	4602      	mov	r2, r0
 8003f04:	460b      	mov	r3, r1
 8003f06:	d133      	bne.n	8003f70 <_dtoa_r+0x6b8>
 8003f08:	f7fc f9d0 	bl	80002ac <__adddf3>
 8003f0c:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003f10:	4604      	mov	r4, r0
 8003f12:	460d      	mov	r5, r1
 8003f14:	f7fc fe10 	bl	8000b38 <__aeabi_dcmpgt>
 8003f18:	b9c0      	cbnz	r0, 8003f4c <_dtoa_r+0x694>
 8003f1a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003f1e:	4620      	mov	r0, r4
 8003f20:	4629      	mov	r1, r5
 8003f22:	f7fc fde1 	bl	8000ae8 <__aeabi_dcmpeq>
 8003f26:	b108      	cbz	r0, 8003f2c <_dtoa_r+0x674>
 8003f28:	07fb      	lsls	r3, r7, #31
 8003f2a:	d40f      	bmi.n	8003f4c <_dtoa_r+0x694>
 8003f2c:	4648      	mov	r0, r9
 8003f2e:	4641      	mov	r1, r8
 8003f30:	f001 f93f 	bl	80051b2 <_Bfree>
 8003f34:	2300      	movs	r3, #0
 8003f36:	9803      	ldr	r0, [sp, #12]
 8003f38:	7033      	strb	r3, [r6, #0]
 8003f3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003f3c:	3001      	adds	r0, #1
 8003f3e:	6018      	str	r0, [r3, #0]
 8003f40:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8003f42:	2b00      	cmp	r3, #0
 8003f44:	f43f acee 	beq.w	8003924 <_dtoa_r+0x6c>
 8003f48:	601e      	str	r6, [r3, #0]
 8003f4a:	e4eb      	b.n	8003924 <_dtoa_r+0x6c>
 8003f4c:	9d03      	ldr	r5, [sp, #12]
 8003f4e:	4633      	mov	r3, r6
 8003f50:	461e      	mov	r6, r3
 8003f52:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003f56:	2a39      	cmp	r2, #57	; 0x39
 8003f58:	d106      	bne.n	8003f68 <_dtoa_r+0x6b0>
 8003f5a:	9a06      	ldr	r2, [sp, #24]
 8003f5c:	429a      	cmp	r2, r3
 8003f5e:	d1f7      	bne.n	8003f50 <_dtoa_r+0x698>
 8003f60:	9906      	ldr	r1, [sp, #24]
 8003f62:	2230      	movs	r2, #48	; 0x30
 8003f64:	3501      	adds	r5, #1
 8003f66:	700a      	strb	r2, [r1, #0]
 8003f68:	781a      	ldrb	r2, [r3, #0]
 8003f6a:	3201      	adds	r2, #1
 8003f6c:	701a      	strb	r2, [r3, #0]
 8003f6e:	e79c      	b.n	8003eaa <_dtoa_r+0x5f2>
 8003f70:	4652      	mov	r2, sl
 8003f72:	465b      	mov	r3, fp
 8003f74:	f7fc fb50 	bl	8000618 <__aeabi_dmul>
 8003f78:	2200      	movs	r2, #0
 8003f7a:	2300      	movs	r3, #0
 8003f7c:	4604      	mov	r4, r0
 8003f7e:	460d      	mov	r5, r1
 8003f80:	f7fc fdb2 	bl	8000ae8 <__aeabi_dcmpeq>
 8003f84:	2800      	cmp	r0, #0
 8003f86:	d09f      	beq.n	8003ec8 <_dtoa_r+0x610>
 8003f88:	e7d0      	b.n	8003f2c <_dtoa_r+0x674>
 8003f8a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003f8c:	2a00      	cmp	r2, #0
 8003f8e:	f000 80cb 	beq.w	8004128 <_dtoa_r+0x870>
 8003f92:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8003f94:	2a01      	cmp	r2, #1
 8003f96:	f300 80ae 	bgt.w	80040f6 <_dtoa_r+0x83e>
 8003f9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003f9c:	2a00      	cmp	r2, #0
 8003f9e:	f000 80a6 	beq.w	80040ee <_dtoa_r+0x836>
 8003fa2:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003fa6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003fa8:	9e08      	ldr	r6, [sp, #32]
 8003faa:	9a08      	ldr	r2, [sp, #32]
 8003fac:	441a      	add	r2, r3
 8003fae:	9208      	str	r2, [sp, #32]
 8003fb0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003fb2:	2101      	movs	r1, #1
 8003fb4:	441a      	add	r2, r3
 8003fb6:	4648      	mov	r0, r9
 8003fb8:	9209      	str	r2, [sp, #36]	; 0x24
 8003fba:	f001 f99b 	bl	80052f4 <__i2b>
 8003fbe:	4605      	mov	r5, r0
 8003fc0:	2e00      	cmp	r6, #0
 8003fc2:	dd0c      	ble.n	8003fde <_dtoa_r+0x726>
 8003fc4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003fc6:	2b00      	cmp	r3, #0
 8003fc8:	dd09      	ble.n	8003fde <_dtoa_r+0x726>
 8003fca:	42b3      	cmp	r3, r6
 8003fcc:	9a08      	ldr	r2, [sp, #32]
 8003fce:	bfa8      	it	ge
 8003fd0:	4633      	movge	r3, r6
 8003fd2:	1ad2      	subs	r2, r2, r3
 8003fd4:	9208      	str	r2, [sp, #32]
 8003fd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003fd8:	1af6      	subs	r6, r6, r3
 8003fda:	1ad3      	subs	r3, r2, r3
 8003fdc:	9309      	str	r3, [sp, #36]	; 0x24
 8003fde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003fe0:	b1f3      	cbz	r3, 8004020 <_dtoa_r+0x768>
 8003fe2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003fe4:	2b00      	cmp	r3, #0
 8003fe6:	f000 80a3 	beq.w	8004130 <_dtoa_r+0x878>
 8003fea:	2c00      	cmp	r4, #0
 8003fec:	dd10      	ble.n	8004010 <_dtoa_r+0x758>
 8003fee:	4629      	mov	r1, r5
 8003ff0:	4622      	mov	r2, r4
 8003ff2:	4648      	mov	r0, r9
 8003ff4:	f001 fa3a 	bl	800546c <__pow5mult>
 8003ff8:	4642      	mov	r2, r8
 8003ffa:	4601      	mov	r1, r0
 8003ffc:	4605      	mov	r5, r0
 8003ffe:	4648      	mov	r0, r9
 8004000:	f001 f98e 	bl	8005320 <__multiply>
 8004004:	4641      	mov	r1, r8
 8004006:	4607      	mov	r7, r0
 8004008:	4648      	mov	r0, r9
 800400a:	f001 f8d2 	bl	80051b2 <_Bfree>
 800400e:	46b8      	mov	r8, r7
 8004010:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004012:	1b1a      	subs	r2, r3, r4
 8004014:	d004      	beq.n	8004020 <_dtoa_r+0x768>
 8004016:	4641      	mov	r1, r8
 8004018:	4648      	mov	r0, r9
 800401a:	f001 fa27 	bl	800546c <__pow5mult>
 800401e:	4680      	mov	r8, r0
 8004020:	2101      	movs	r1, #1
 8004022:	4648      	mov	r0, r9
 8004024:	f001 f966 	bl	80052f4 <__i2b>
 8004028:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800402a:	2b00      	cmp	r3, #0
 800402c:	4604      	mov	r4, r0
 800402e:	f340 8085 	ble.w	800413c <_dtoa_r+0x884>
 8004032:	461a      	mov	r2, r3
 8004034:	4601      	mov	r1, r0
 8004036:	4648      	mov	r0, r9
 8004038:	f001 fa18 	bl	800546c <__pow5mult>
 800403c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800403e:	2b01      	cmp	r3, #1
 8004040:	4604      	mov	r4, r0
 8004042:	dd7e      	ble.n	8004142 <_dtoa_r+0x88a>
 8004044:	2700      	movs	r7, #0
 8004046:	6923      	ldr	r3, [r4, #16]
 8004048:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 800404c:	6918      	ldr	r0, [r3, #16]
 800404e:	f001 f903 	bl	8005258 <__hi0bits>
 8004052:	f1c0 0020 	rsb	r0, r0, #32
 8004056:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004058:	4418      	add	r0, r3
 800405a:	f010 001f 	ands.w	r0, r0, #31
 800405e:	f000 808e 	beq.w	800417e <_dtoa_r+0x8c6>
 8004062:	f1c0 0320 	rsb	r3, r0, #32
 8004066:	2b04      	cmp	r3, #4
 8004068:	f340 8087 	ble.w	800417a <_dtoa_r+0x8c2>
 800406c:	f1c0 001c 	rsb	r0, r0, #28
 8004070:	9b08      	ldr	r3, [sp, #32]
 8004072:	4403      	add	r3, r0
 8004074:	9308      	str	r3, [sp, #32]
 8004076:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004078:	4403      	add	r3, r0
 800407a:	4406      	add	r6, r0
 800407c:	9309      	str	r3, [sp, #36]	; 0x24
 800407e:	9b08      	ldr	r3, [sp, #32]
 8004080:	2b00      	cmp	r3, #0
 8004082:	dd05      	ble.n	8004090 <_dtoa_r+0x7d8>
 8004084:	4641      	mov	r1, r8
 8004086:	461a      	mov	r2, r3
 8004088:	4648      	mov	r0, r9
 800408a:	f001 fa2f 	bl	80054ec <__lshift>
 800408e:	4680      	mov	r8, r0
 8004090:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004092:	2b00      	cmp	r3, #0
 8004094:	dd05      	ble.n	80040a2 <_dtoa_r+0x7ea>
 8004096:	4621      	mov	r1, r4
 8004098:	461a      	mov	r2, r3
 800409a:	4648      	mov	r0, r9
 800409c:	f001 fa26 	bl	80054ec <__lshift>
 80040a0:	4604      	mov	r4, r0
 80040a2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80040a4:	2b00      	cmp	r3, #0
 80040a6:	d06c      	beq.n	8004182 <_dtoa_r+0x8ca>
 80040a8:	4621      	mov	r1, r4
 80040aa:	4640      	mov	r0, r8
 80040ac:	f001 fa8a 	bl	80055c4 <__mcmp>
 80040b0:	2800      	cmp	r0, #0
 80040b2:	da66      	bge.n	8004182 <_dtoa_r+0x8ca>
 80040b4:	9b03      	ldr	r3, [sp, #12]
 80040b6:	3b01      	subs	r3, #1
 80040b8:	9303      	str	r3, [sp, #12]
 80040ba:	4641      	mov	r1, r8
 80040bc:	2300      	movs	r3, #0
 80040be:	220a      	movs	r2, #10
 80040c0:	4648      	mov	r0, r9
 80040c2:	f001 f87f 	bl	80051c4 <__multadd>
 80040c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80040c8:	4680      	mov	r8, r0
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	f000 81a0 	beq.w	8004410 <_dtoa_r+0xb58>
 80040d0:	2300      	movs	r3, #0
 80040d2:	4629      	mov	r1, r5
 80040d4:	220a      	movs	r2, #10
 80040d6:	4648      	mov	r0, r9
 80040d8:	f001 f874 	bl	80051c4 <__multadd>
 80040dc:	9b04      	ldr	r3, [sp, #16]
 80040de:	2b00      	cmp	r3, #0
 80040e0:	4605      	mov	r5, r0
 80040e2:	f300 8089 	bgt.w	80041f8 <_dtoa_r+0x940>
 80040e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80040e8:	2b02      	cmp	r3, #2
 80040ea:	dc52      	bgt.n	8004192 <_dtoa_r+0x8da>
 80040ec:	e084      	b.n	80041f8 <_dtoa_r+0x940>
 80040ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80040f0:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80040f4:	e757      	b.n	8003fa6 <_dtoa_r+0x6ee>
 80040f6:	9b07      	ldr	r3, [sp, #28]
 80040f8:	1e5c      	subs	r4, r3, #1
 80040fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80040fc:	42a3      	cmp	r3, r4
 80040fe:	bfbf      	itttt	lt
 8004100:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8004102:	940a      	strlt	r4, [sp, #40]	; 0x28
 8004104:	1ae2      	sublt	r2, r4, r3
 8004106:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8004108:	bfb6      	itet	lt
 800410a:	189b      	addlt	r3, r3, r2
 800410c:	1b1c      	subge	r4, r3, r4
 800410e:	930e      	strlt	r3, [sp, #56]	; 0x38
 8004110:	9b07      	ldr	r3, [sp, #28]
 8004112:	bfb8      	it	lt
 8004114:	2400      	movlt	r4, #0
 8004116:	2b00      	cmp	r3, #0
 8004118:	bfb7      	itett	lt
 800411a:	e9dd 2307 	ldrdlt	r2, r3, [sp, #28]
 800411e:	e9dd 3607 	ldrdge	r3, r6, [sp, #28]
 8004122:	1a9e      	sublt	r6, r3, r2
 8004124:	2300      	movlt	r3, #0
 8004126:	e740      	b.n	8003faa <_dtoa_r+0x6f2>
 8004128:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800412a:	9e08      	ldr	r6, [sp, #32]
 800412c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800412e:	e747      	b.n	8003fc0 <_dtoa_r+0x708>
 8004130:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004132:	e770      	b.n	8004016 <_dtoa_r+0x75e>
 8004134:	3fe00000 	.word	0x3fe00000
 8004138:	40240000 	.word	0x40240000
 800413c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800413e:	2b01      	cmp	r3, #1
 8004140:	dc17      	bgt.n	8004172 <_dtoa_r+0x8ba>
 8004142:	f1ba 0f00 	cmp.w	sl, #0
 8004146:	d114      	bne.n	8004172 <_dtoa_r+0x8ba>
 8004148:	f3cb 0313 	ubfx	r3, fp, #0, #20
 800414c:	b99b      	cbnz	r3, 8004176 <_dtoa_r+0x8be>
 800414e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 8004152:	0d3f      	lsrs	r7, r7, #20
 8004154:	053f      	lsls	r7, r7, #20
 8004156:	b137      	cbz	r7, 8004166 <_dtoa_r+0x8ae>
 8004158:	9b08      	ldr	r3, [sp, #32]
 800415a:	3301      	adds	r3, #1
 800415c:	9308      	str	r3, [sp, #32]
 800415e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004160:	3301      	adds	r3, #1
 8004162:	9309      	str	r3, [sp, #36]	; 0x24
 8004164:	2701      	movs	r7, #1
 8004166:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004168:	2b00      	cmp	r3, #0
 800416a:	f47f af6c 	bne.w	8004046 <_dtoa_r+0x78e>
 800416e:	2001      	movs	r0, #1
 8004170:	e771      	b.n	8004056 <_dtoa_r+0x79e>
 8004172:	2700      	movs	r7, #0
 8004174:	e7f7      	b.n	8004166 <_dtoa_r+0x8ae>
 8004176:	4657      	mov	r7, sl
 8004178:	e7f5      	b.n	8004166 <_dtoa_r+0x8ae>
 800417a:	d080      	beq.n	800407e <_dtoa_r+0x7c6>
 800417c:	4618      	mov	r0, r3
 800417e:	301c      	adds	r0, #28
 8004180:	e776      	b.n	8004070 <_dtoa_r+0x7b8>
 8004182:	9b07      	ldr	r3, [sp, #28]
 8004184:	2b00      	cmp	r3, #0
 8004186:	dc31      	bgt.n	80041ec <_dtoa_r+0x934>
 8004188:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800418a:	2b02      	cmp	r3, #2
 800418c:	dd2e      	ble.n	80041ec <_dtoa_r+0x934>
 800418e:	9b07      	ldr	r3, [sp, #28]
 8004190:	9304      	str	r3, [sp, #16]
 8004192:	9b04      	ldr	r3, [sp, #16]
 8004194:	b963      	cbnz	r3, 80041b0 <_dtoa_r+0x8f8>
 8004196:	4621      	mov	r1, r4
 8004198:	2205      	movs	r2, #5
 800419a:	4648      	mov	r0, r9
 800419c:	f001 f812 	bl	80051c4 <__multadd>
 80041a0:	4601      	mov	r1, r0
 80041a2:	4604      	mov	r4, r0
 80041a4:	4640      	mov	r0, r8
 80041a6:	f001 fa0d 	bl	80055c4 <__mcmp>
 80041aa:	2800      	cmp	r0, #0
 80041ac:	f73f adc4 	bgt.w	8003d38 <_dtoa_r+0x480>
 80041b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80041b2:	9e06      	ldr	r6, [sp, #24]
 80041b4:	43db      	mvns	r3, r3
 80041b6:	9303      	str	r3, [sp, #12]
 80041b8:	2700      	movs	r7, #0
 80041ba:	4621      	mov	r1, r4
 80041bc:	4648      	mov	r0, r9
 80041be:	f000 fff8 	bl	80051b2 <_Bfree>
 80041c2:	2d00      	cmp	r5, #0
 80041c4:	f43f aeb2 	beq.w	8003f2c <_dtoa_r+0x674>
 80041c8:	b12f      	cbz	r7, 80041d6 <_dtoa_r+0x91e>
 80041ca:	42af      	cmp	r7, r5
 80041cc:	d003      	beq.n	80041d6 <_dtoa_r+0x91e>
 80041ce:	4639      	mov	r1, r7
 80041d0:	4648      	mov	r0, r9
 80041d2:	f000 ffee 	bl	80051b2 <_Bfree>
 80041d6:	4629      	mov	r1, r5
 80041d8:	4648      	mov	r0, r9
 80041da:	f000 ffea 	bl	80051b2 <_Bfree>
 80041de:	e6a5      	b.n	8003f2c <_dtoa_r+0x674>
 80041e0:	2400      	movs	r4, #0
 80041e2:	4625      	mov	r5, r4
 80041e4:	e7e4      	b.n	80041b0 <_dtoa_r+0x8f8>
 80041e6:	9503      	str	r5, [sp, #12]
 80041e8:	4625      	mov	r5, r4
 80041ea:	e5a5      	b.n	8003d38 <_dtoa_r+0x480>
 80041ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80041ee:	2b00      	cmp	r3, #0
 80041f0:	f000 80c4 	beq.w	800437c <_dtoa_r+0xac4>
 80041f4:	9b07      	ldr	r3, [sp, #28]
 80041f6:	9304      	str	r3, [sp, #16]
 80041f8:	2e00      	cmp	r6, #0
 80041fa:	dd05      	ble.n	8004208 <_dtoa_r+0x950>
 80041fc:	4629      	mov	r1, r5
 80041fe:	4632      	mov	r2, r6
 8004200:	4648      	mov	r0, r9
 8004202:	f001 f973 	bl	80054ec <__lshift>
 8004206:	4605      	mov	r5, r0
 8004208:	2f00      	cmp	r7, #0
 800420a:	d058      	beq.n	80042be <_dtoa_r+0xa06>
 800420c:	6869      	ldr	r1, [r5, #4]
 800420e:	4648      	mov	r0, r9
 8004210:	f000 ffaa 	bl	8005168 <_Balloc>
 8004214:	4606      	mov	r6, r0
 8004216:	b920      	cbnz	r0, 8004222 <_dtoa_r+0x96a>
 8004218:	4b81      	ldr	r3, [pc, #516]	; (8004420 <_dtoa_r+0xb68>)
 800421a:	4602      	mov	r2, r0
 800421c:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004220:	e482      	b.n	8003b28 <_dtoa_r+0x270>
 8004222:	692a      	ldr	r2, [r5, #16]
 8004224:	3202      	adds	r2, #2
 8004226:	0092      	lsls	r2, r2, #2
 8004228:	f105 010c 	add.w	r1, r5, #12
 800422c:	300c      	adds	r0, #12
 800422e:	f000 ff67 	bl	8005100 <memcpy>
 8004232:	2201      	movs	r2, #1
 8004234:	4631      	mov	r1, r6
 8004236:	4648      	mov	r0, r9
 8004238:	f001 f958 	bl	80054ec <__lshift>
 800423c:	9b06      	ldr	r3, [sp, #24]
 800423e:	9a06      	ldr	r2, [sp, #24]
 8004240:	3301      	adds	r3, #1
 8004242:	9307      	str	r3, [sp, #28]
 8004244:	9b04      	ldr	r3, [sp, #16]
 8004246:	4413      	add	r3, r2
 8004248:	930a      	str	r3, [sp, #40]	; 0x28
 800424a:	f00a 0301 	and.w	r3, sl, #1
 800424e:	462f      	mov	r7, r5
 8004250:	9309      	str	r3, [sp, #36]	; 0x24
 8004252:	4605      	mov	r5, r0
 8004254:	9b07      	ldr	r3, [sp, #28]
 8004256:	4621      	mov	r1, r4
 8004258:	4640      	mov	r0, r8
 800425a:	f103 3bff 	add.w	fp, r3, #4294967295
 800425e:	f7ff fa9f 	bl	80037a0 <quorem>
 8004262:	4639      	mov	r1, r7
 8004264:	9004      	str	r0, [sp, #16]
 8004266:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800426a:	4640      	mov	r0, r8
 800426c:	f001 f9aa 	bl	80055c4 <__mcmp>
 8004270:	462a      	mov	r2, r5
 8004272:	9008      	str	r0, [sp, #32]
 8004274:	4621      	mov	r1, r4
 8004276:	4648      	mov	r0, r9
 8004278:	f001 f9c0 	bl	80055fc <__mdiff>
 800427c:	68c2      	ldr	r2, [r0, #12]
 800427e:	4606      	mov	r6, r0
 8004280:	b9fa      	cbnz	r2, 80042c2 <_dtoa_r+0xa0a>
 8004282:	4601      	mov	r1, r0
 8004284:	4640      	mov	r0, r8
 8004286:	f001 f99d 	bl	80055c4 <__mcmp>
 800428a:	4602      	mov	r2, r0
 800428c:	4631      	mov	r1, r6
 800428e:	4648      	mov	r0, r9
 8004290:	920b      	str	r2, [sp, #44]	; 0x2c
 8004292:	f000 ff8e 	bl	80051b2 <_Bfree>
 8004296:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004298:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800429a:	9e07      	ldr	r6, [sp, #28]
 800429c:	ea43 0102 	orr.w	r1, r3, r2
 80042a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80042a2:	430b      	orrs	r3, r1
 80042a4:	d10f      	bne.n	80042c6 <_dtoa_r+0xa0e>
 80042a6:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80042aa:	d028      	beq.n	80042fe <_dtoa_r+0xa46>
 80042ac:	9b08      	ldr	r3, [sp, #32]
 80042ae:	2b00      	cmp	r3, #0
 80042b0:	dd02      	ble.n	80042b8 <_dtoa_r+0xa00>
 80042b2:	9b04      	ldr	r3, [sp, #16]
 80042b4:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 80042b8:	f88b a000 	strb.w	sl, [fp]
 80042bc:	e77d      	b.n	80041ba <_dtoa_r+0x902>
 80042be:	4628      	mov	r0, r5
 80042c0:	e7bc      	b.n	800423c <_dtoa_r+0x984>
 80042c2:	2201      	movs	r2, #1
 80042c4:	e7e2      	b.n	800428c <_dtoa_r+0x9d4>
 80042c6:	9b08      	ldr	r3, [sp, #32]
 80042c8:	2b00      	cmp	r3, #0
 80042ca:	db04      	blt.n	80042d6 <_dtoa_r+0xa1e>
 80042cc:	9920      	ldr	r1, [sp, #128]	; 0x80
 80042ce:	430b      	orrs	r3, r1
 80042d0:	9909      	ldr	r1, [sp, #36]	; 0x24
 80042d2:	430b      	orrs	r3, r1
 80042d4:	d120      	bne.n	8004318 <_dtoa_r+0xa60>
 80042d6:	2a00      	cmp	r2, #0
 80042d8:	ddee      	ble.n	80042b8 <_dtoa_r+0xa00>
 80042da:	4641      	mov	r1, r8
 80042dc:	2201      	movs	r2, #1
 80042de:	4648      	mov	r0, r9
 80042e0:	f001 f904 	bl	80054ec <__lshift>
 80042e4:	4621      	mov	r1, r4
 80042e6:	4680      	mov	r8, r0
 80042e8:	f001 f96c 	bl	80055c4 <__mcmp>
 80042ec:	2800      	cmp	r0, #0
 80042ee:	dc03      	bgt.n	80042f8 <_dtoa_r+0xa40>
 80042f0:	d1e2      	bne.n	80042b8 <_dtoa_r+0xa00>
 80042f2:	f01a 0f01 	tst.w	sl, #1
 80042f6:	d0df      	beq.n	80042b8 <_dtoa_r+0xa00>
 80042f8:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 80042fc:	d1d9      	bne.n	80042b2 <_dtoa_r+0x9fa>
 80042fe:	2339      	movs	r3, #57	; 0x39
 8004300:	f88b 3000 	strb.w	r3, [fp]
 8004304:	4633      	mov	r3, r6
 8004306:	461e      	mov	r6, r3
 8004308:	3b01      	subs	r3, #1
 800430a:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 800430e:	2a39      	cmp	r2, #57	; 0x39
 8004310:	d06b      	beq.n	80043ea <_dtoa_r+0xb32>
 8004312:	3201      	adds	r2, #1
 8004314:	701a      	strb	r2, [r3, #0]
 8004316:	e750      	b.n	80041ba <_dtoa_r+0x902>
 8004318:	2a00      	cmp	r2, #0
 800431a:	dd07      	ble.n	800432c <_dtoa_r+0xa74>
 800431c:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8004320:	d0ed      	beq.n	80042fe <_dtoa_r+0xa46>
 8004322:	f10a 0301 	add.w	r3, sl, #1
 8004326:	f88b 3000 	strb.w	r3, [fp]
 800432a:	e746      	b.n	80041ba <_dtoa_r+0x902>
 800432c:	9b07      	ldr	r3, [sp, #28]
 800432e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8004330:	f803 ac01 	strb.w	sl, [r3, #-1]
 8004334:	4293      	cmp	r3, r2
 8004336:	d042      	beq.n	80043be <_dtoa_r+0xb06>
 8004338:	4641      	mov	r1, r8
 800433a:	2300      	movs	r3, #0
 800433c:	220a      	movs	r2, #10
 800433e:	4648      	mov	r0, r9
 8004340:	f000 ff40 	bl	80051c4 <__multadd>
 8004344:	42af      	cmp	r7, r5
 8004346:	4680      	mov	r8, r0
 8004348:	f04f 0300 	mov.w	r3, #0
 800434c:	f04f 020a 	mov.w	r2, #10
 8004350:	4639      	mov	r1, r7
 8004352:	4648      	mov	r0, r9
 8004354:	d107      	bne.n	8004366 <_dtoa_r+0xaae>
 8004356:	f000 ff35 	bl	80051c4 <__multadd>
 800435a:	4607      	mov	r7, r0
 800435c:	4605      	mov	r5, r0
 800435e:	9b07      	ldr	r3, [sp, #28]
 8004360:	3301      	adds	r3, #1
 8004362:	9307      	str	r3, [sp, #28]
 8004364:	e776      	b.n	8004254 <_dtoa_r+0x99c>
 8004366:	f000 ff2d 	bl	80051c4 <__multadd>
 800436a:	4629      	mov	r1, r5
 800436c:	4607      	mov	r7, r0
 800436e:	2300      	movs	r3, #0
 8004370:	220a      	movs	r2, #10
 8004372:	4648      	mov	r0, r9
 8004374:	f000 ff26 	bl	80051c4 <__multadd>
 8004378:	4605      	mov	r5, r0
 800437a:	e7f0      	b.n	800435e <_dtoa_r+0xaa6>
 800437c:	9b07      	ldr	r3, [sp, #28]
 800437e:	9304      	str	r3, [sp, #16]
 8004380:	9e06      	ldr	r6, [sp, #24]
 8004382:	4621      	mov	r1, r4
 8004384:	4640      	mov	r0, r8
 8004386:	f7ff fa0b 	bl	80037a0 <quorem>
 800438a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 800438e:	9b06      	ldr	r3, [sp, #24]
 8004390:	f806 ab01 	strb.w	sl, [r6], #1
 8004394:	1af2      	subs	r2, r6, r3
 8004396:	9b04      	ldr	r3, [sp, #16]
 8004398:	4293      	cmp	r3, r2
 800439a:	dd07      	ble.n	80043ac <_dtoa_r+0xaf4>
 800439c:	4641      	mov	r1, r8
 800439e:	2300      	movs	r3, #0
 80043a0:	220a      	movs	r2, #10
 80043a2:	4648      	mov	r0, r9
 80043a4:	f000 ff0e 	bl	80051c4 <__multadd>
 80043a8:	4680      	mov	r8, r0
 80043aa:	e7ea      	b.n	8004382 <_dtoa_r+0xaca>
 80043ac:	9b04      	ldr	r3, [sp, #16]
 80043ae:	2b00      	cmp	r3, #0
 80043b0:	bfc8      	it	gt
 80043b2:	461e      	movgt	r6, r3
 80043b4:	9b06      	ldr	r3, [sp, #24]
 80043b6:	bfd8      	it	le
 80043b8:	2601      	movle	r6, #1
 80043ba:	441e      	add	r6, r3
 80043bc:	2700      	movs	r7, #0
 80043be:	4641      	mov	r1, r8
 80043c0:	2201      	movs	r2, #1
 80043c2:	4648      	mov	r0, r9
 80043c4:	f001 f892 	bl	80054ec <__lshift>
 80043c8:	4621      	mov	r1, r4
 80043ca:	4680      	mov	r8, r0
 80043cc:	f001 f8fa 	bl	80055c4 <__mcmp>
 80043d0:	2800      	cmp	r0, #0
 80043d2:	dc97      	bgt.n	8004304 <_dtoa_r+0xa4c>
 80043d4:	d102      	bne.n	80043dc <_dtoa_r+0xb24>
 80043d6:	f01a 0f01 	tst.w	sl, #1
 80043da:	d193      	bne.n	8004304 <_dtoa_r+0xa4c>
 80043dc:	4633      	mov	r3, r6
 80043de:	461e      	mov	r6, r3
 80043e0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80043e4:	2a30      	cmp	r2, #48	; 0x30
 80043e6:	d0fa      	beq.n	80043de <_dtoa_r+0xb26>
 80043e8:	e6e7      	b.n	80041ba <_dtoa_r+0x902>
 80043ea:	9a06      	ldr	r2, [sp, #24]
 80043ec:	429a      	cmp	r2, r3
 80043ee:	d18a      	bne.n	8004306 <_dtoa_r+0xa4e>
 80043f0:	9b03      	ldr	r3, [sp, #12]
 80043f2:	3301      	adds	r3, #1
 80043f4:	9303      	str	r3, [sp, #12]
 80043f6:	2331      	movs	r3, #49	; 0x31
 80043f8:	7013      	strb	r3, [r2, #0]
 80043fa:	e6de      	b.n	80041ba <_dtoa_r+0x902>
 80043fc:	4b09      	ldr	r3, [pc, #36]	; (8004424 <_dtoa_r+0xb6c>)
 80043fe:	f7ff baad 	b.w	800395c <_dtoa_r+0xa4>
 8004402:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8004404:	2b00      	cmp	r3, #0
 8004406:	f47f aa91 	bne.w	800392c <_dtoa_r+0x74>
 800440a:	4b07      	ldr	r3, [pc, #28]	; (8004428 <_dtoa_r+0xb70>)
 800440c:	f7ff baa6 	b.w	800395c <_dtoa_r+0xa4>
 8004410:	9b04      	ldr	r3, [sp, #16]
 8004412:	2b00      	cmp	r3, #0
 8004414:	dcb4      	bgt.n	8004380 <_dtoa_r+0xac8>
 8004416:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8004418:	2b02      	cmp	r3, #2
 800441a:	f73f aeba 	bgt.w	8004192 <_dtoa_r+0x8da>
 800441e:	e7af      	b.n	8004380 <_dtoa_r+0xac8>
 8004420:	08007281 	.word	0x08007281
 8004424:	08007252 	.word	0x08007252
 8004428:	08007278 	.word	0x08007278

0800442c <__sflush_r>:
 800442c:	898b      	ldrh	r3, [r1, #12]
 800442e:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8004432:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004436:	4605      	mov	r5, r0
 8004438:	0718      	lsls	r0, r3, #28
 800443a:	460c      	mov	r4, r1
 800443c:	d45f      	bmi.n	80044fe <__sflush_r+0xd2>
 800443e:	684b      	ldr	r3, [r1, #4]
 8004440:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004444:	2b00      	cmp	r3, #0
 8004446:	818a      	strh	r2, [r1, #12]
 8004448:	dc05      	bgt.n	8004456 <__sflush_r+0x2a>
 800444a:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
 800444c:	2b00      	cmp	r3, #0
 800444e:	dc02      	bgt.n	8004456 <__sflush_r+0x2a>
 8004450:	2000      	movs	r0, #0
 8004452:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004456:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004458:	2e00      	cmp	r6, #0
 800445a:	d0f9      	beq.n	8004450 <__sflush_r+0x24>
 800445c:	2300      	movs	r3, #0
 800445e:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004462:	682f      	ldr	r7, [r5, #0]
 8004464:	602b      	str	r3, [r5, #0]
 8004466:	d036      	beq.n	80044d6 <__sflush_r+0xaa>
 8004468:	6d20      	ldr	r0, [r4, #80]	; 0x50
 800446a:	89a3      	ldrh	r3, [r4, #12]
 800446c:	075a      	lsls	r2, r3, #29
 800446e:	d505      	bpl.n	800447c <__sflush_r+0x50>
 8004470:	6863      	ldr	r3, [r4, #4]
 8004472:	1ac0      	subs	r0, r0, r3
 8004474:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8004476:	b10b      	cbz	r3, 800447c <__sflush_r+0x50>
 8004478:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800447a:	1ac0      	subs	r0, r0, r3
 800447c:	2300      	movs	r3, #0
 800447e:	4602      	mov	r2, r0
 8004480:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004482:	69e1      	ldr	r1, [r4, #28]
 8004484:	4628      	mov	r0, r5
 8004486:	47b0      	blx	r6
 8004488:	1c43      	adds	r3, r0, #1
 800448a:	89a3      	ldrh	r3, [r4, #12]
 800448c:	d106      	bne.n	800449c <__sflush_r+0x70>
 800448e:	6829      	ldr	r1, [r5, #0]
 8004490:	291d      	cmp	r1, #29
 8004492:	d830      	bhi.n	80044f6 <__sflush_r+0xca>
 8004494:	4a2b      	ldr	r2, [pc, #172]	; (8004544 <__sflush_r+0x118>)
 8004496:	40ca      	lsrs	r2, r1
 8004498:	07d6      	lsls	r6, r2, #31
 800449a:	d52c      	bpl.n	80044f6 <__sflush_r+0xca>
 800449c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80044a0:	b21b      	sxth	r3, r3
 80044a2:	2200      	movs	r2, #0
 80044a4:	6062      	str	r2, [r4, #4]
 80044a6:	04d9      	lsls	r1, r3, #19
 80044a8:	6922      	ldr	r2, [r4, #16]
 80044aa:	81a3      	strh	r3, [r4, #12]
 80044ac:	6022      	str	r2, [r4, #0]
 80044ae:	d504      	bpl.n	80044ba <__sflush_r+0x8e>
 80044b0:	1c42      	adds	r2, r0, #1
 80044b2:	d101      	bne.n	80044b8 <__sflush_r+0x8c>
 80044b4:	682b      	ldr	r3, [r5, #0]
 80044b6:	b903      	cbnz	r3, 80044ba <__sflush_r+0x8e>
 80044b8:	6520      	str	r0, [r4, #80]	; 0x50
 80044ba:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80044bc:	602f      	str	r7, [r5, #0]
 80044be:	2900      	cmp	r1, #0
 80044c0:	d0c6      	beq.n	8004450 <__sflush_r+0x24>
 80044c2:	f104 0340 	add.w	r3, r4, #64	; 0x40
 80044c6:	4299      	cmp	r1, r3
 80044c8:	d002      	beq.n	80044d0 <__sflush_r+0xa4>
 80044ca:	4628      	mov	r0, r5
 80044cc:	f000 f938 	bl	8004740 <_free_r>
 80044d0:	2000      	movs	r0, #0
 80044d2:	6320      	str	r0, [r4, #48]	; 0x30
 80044d4:	e7bd      	b.n	8004452 <__sflush_r+0x26>
 80044d6:	69e1      	ldr	r1, [r4, #28]
 80044d8:	2301      	movs	r3, #1
 80044da:	4628      	mov	r0, r5
 80044dc:	47b0      	blx	r6
 80044de:	1c41      	adds	r1, r0, #1
 80044e0:	d1c3      	bne.n	800446a <__sflush_r+0x3e>
 80044e2:	682b      	ldr	r3, [r5, #0]
 80044e4:	2b00      	cmp	r3, #0
 80044e6:	d0c0      	beq.n	800446a <__sflush_r+0x3e>
 80044e8:	2b1d      	cmp	r3, #29
 80044ea:	d001      	beq.n	80044f0 <__sflush_r+0xc4>
 80044ec:	2b16      	cmp	r3, #22
 80044ee:	d101      	bne.n	80044f4 <__sflush_r+0xc8>
 80044f0:	602f      	str	r7, [r5, #0]
 80044f2:	e7ad      	b.n	8004450 <__sflush_r+0x24>
 80044f4:	89a3      	ldrh	r3, [r4, #12]
 80044f6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80044fa:	81a3      	strh	r3, [r4, #12]
 80044fc:	e7a9      	b.n	8004452 <__sflush_r+0x26>
 80044fe:	690f      	ldr	r7, [r1, #16]
 8004500:	2f00      	cmp	r7, #0
 8004502:	d0a5      	beq.n	8004450 <__sflush_r+0x24>
 8004504:	079b      	lsls	r3, r3, #30
 8004506:	680e      	ldr	r6, [r1, #0]
 8004508:	bf08      	it	eq
 800450a:	694b      	ldreq	r3, [r1, #20]
 800450c:	600f      	str	r7, [r1, #0]
 800450e:	bf18      	it	ne
 8004510:	2300      	movne	r3, #0
 8004512:	eba6 0807 	sub.w	r8, r6, r7
 8004516:	608b      	str	r3, [r1, #8]
 8004518:	f1b8 0f00 	cmp.w	r8, #0
 800451c:	dd98      	ble.n	8004450 <__sflush_r+0x24>
 800451e:	69e1      	ldr	r1, [r4, #28]
 8004520:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8004522:	4643      	mov	r3, r8
 8004524:	463a      	mov	r2, r7
 8004526:	4628      	mov	r0, r5
 8004528:	47b0      	blx	r6
 800452a:	2800      	cmp	r0, #0
 800452c:	dc06      	bgt.n	800453c <__sflush_r+0x110>
 800452e:	89a3      	ldrh	r3, [r4, #12]
 8004530:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004534:	81a3      	strh	r3, [r4, #12]
 8004536:	f04f 30ff 	mov.w	r0, #4294967295
 800453a:	e78a      	b.n	8004452 <__sflush_r+0x26>
 800453c:	4407      	add	r7, r0
 800453e:	eba8 0800 	sub.w	r8, r8, r0
 8004542:	e7e9      	b.n	8004518 <__sflush_r+0xec>
 8004544:	20400001 	.word	0x20400001

08004548 <_fflush_r>:
 8004548:	b538      	push	{r3, r4, r5, lr}
 800454a:	460c      	mov	r4, r1
 800454c:	4605      	mov	r5, r0
 800454e:	b118      	cbz	r0, 8004558 <_fflush_r+0x10>
 8004550:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8004552:	b90b      	cbnz	r3, 8004558 <_fflush_r+0x10>
 8004554:	f000 f864 	bl	8004620 <__sinit>
 8004558:	f9b4 000c 	ldrsh.w	r0, [r4, #12]
 800455c:	b1b8      	cbz	r0, 800458e <_fflush_r+0x46>
 800455e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004560:	07db      	lsls	r3, r3, #31
 8004562:	d404      	bmi.n	800456e <_fflush_r+0x26>
 8004564:	0581      	lsls	r1, r0, #22
 8004566:	d402      	bmi.n	800456e <_fflush_r+0x26>
 8004568:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800456a:	f000 fb19 	bl	8004ba0 <__retarget_lock_acquire_recursive>
 800456e:	4628      	mov	r0, r5
 8004570:	4621      	mov	r1, r4
 8004572:	f7ff ff5b 	bl	800442c <__sflush_r>
 8004576:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8004578:	07da      	lsls	r2, r3, #31
 800457a:	4605      	mov	r5, r0
 800457c:	d405      	bmi.n	800458a <_fflush_r+0x42>
 800457e:	89a3      	ldrh	r3, [r4, #12]
 8004580:	059b      	lsls	r3, r3, #22
 8004582:	d402      	bmi.n	800458a <_fflush_r+0x42>
 8004584:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8004586:	f000 fb0c 	bl	8004ba2 <__retarget_lock_release_recursive>
 800458a:	4628      	mov	r0, r5
 800458c:	bd38      	pop	{r3, r4, r5, pc}
 800458e:	4605      	mov	r5, r0
 8004590:	e7fb      	b.n	800458a <_fflush_r+0x42>
	...

08004594 <std>:
 8004594:	2300      	movs	r3, #0
 8004596:	b510      	push	{r4, lr}
 8004598:	4604      	mov	r4, r0
 800459a:	e9c0 3300 	strd	r3, r3, [r0]
 800459e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80045a2:	6083      	str	r3, [r0, #8]
 80045a4:	8181      	strh	r1, [r0, #12]
 80045a6:	6643      	str	r3, [r0, #100]	; 0x64
 80045a8:	81c2      	strh	r2, [r0, #14]
 80045aa:	6183      	str	r3, [r0, #24]
 80045ac:	4619      	mov	r1, r3
 80045ae:	2208      	movs	r2, #8
 80045b0:	305c      	adds	r0, #92	; 0x5c
 80045b2:	f7fd fdc3 	bl	800213c <memset>
 80045b6:	4b07      	ldr	r3, [pc, #28]	; (80045d4 <std+0x40>)
 80045b8:	6223      	str	r3, [r4, #32]
 80045ba:	4b07      	ldr	r3, [pc, #28]	; (80045d8 <std+0x44>)
 80045bc:	6263      	str	r3, [r4, #36]	; 0x24
 80045be:	4b07      	ldr	r3, [pc, #28]	; (80045dc <std+0x48>)
 80045c0:	62a3      	str	r3, [r4, #40]	; 0x28
 80045c2:	4b07      	ldr	r3, [pc, #28]	; (80045e0 <std+0x4c>)
 80045c4:	61e4      	str	r4, [r4, #28]
 80045c6:	62e3      	str	r3, [r4, #44]	; 0x2c
 80045c8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80045cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80045d0:	f000 bae4 	b.w	8004b9c <__retarget_lock_init_recursive>
 80045d4:	08005b99 	.word	0x08005b99
 80045d8:	08005bbb 	.word	0x08005bbb
 80045dc:	08005bf3 	.word	0x08005bf3
 80045e0:	08005c17 	.word	0x08005c17

080045e4 <_cleanup_r>:
 80045e4:	4901      	ldr	r1, [pc, #4]	; (80045ec <_cleanup_r+0x8>)
 80045e6:	f000 bab5 	b.w	8004b54 <_fwalk_reent>
 80045ea:	bf00      	nop
 80045ec:	080067a1 	.word	0x080067a1

080045f0 <__sfp_lock_acquire>:
 80045f0:	4801      	ldr	r0, [pc, #4]	; (80045f8 <__sfp_lock_acquire+0x8>)
 80045f2:	f000 bad5 	b.w	8004ba0 <__retarget_lock_acquire_recursive>
 80045f6:	bf00      	nop
 80045f8:	20000b10 	.word	0x20000b10

080045fc <__sfp_lock_release>:
 80045fc:	4801      	ldr	r0, [pc, #4]	; (8004604 <__sfp_lock_release+0x8>)
 80045fe:	f000 bad0 	b.w	8004ba2 <__retarget_lock_release_recursive>
 8004602:	bf00      	nop
 8004604:	20000b10 	.word	0x20000b10

08004608 <__sinit_lock_acquire>:
 8004608:	4801      	ldr	r0, [pc, #4]	; (8004610 <__sinit_lock_acquire+0x8>)
 800460a:	f000 bac9 	b.w	8004ba0 <__retarget_lock_acquire_recursive>
 800460e:	bf00      	nop
 8004610:	20000b0b 	.word	0x20000b0b

08004614 <__sinit_lock_release>:
 8004614:	4801      	ldr	r0, [pc, #4]	; (800461c <__sinit_lock_release+0x8>)
 8004616:	f000 bac4 	b.w	8004ba2 <__retarget_lock_release_recursive>
 800461a:	bf00      	nop
 800461c:	20000b0b 	.word	0x20000b0b

08004620 <__sinit>:
 8004620:	b510      	push	{r4, lr}
 8004622:	4604      	mov	r4, r0
 8004624:	f7ff fff0 	bl	8004608 <__sinit_lock_acquire>
 8004628:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800462a:	b11a      	cbz	r2, 8004634 <__sinit+0x14>
 800462c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8004630:	f7ff bff0 	b.w	8004614 <__sinit_lock_release>
 8004634:	4b0d      	ldr	r3, [pc, #52]	; (800466c <__sinit+0x4c>)
 8004636:	63e3      	str	r3, [r4, #60]	; 0x3c
 8004638:	2303      	movs	r3, #3
 800463a:	f8c4 32e4 	str.w	r3, [r4, #740]	; 0x2e4
 800463e:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
 8004642:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
 8004646:	6860      	ldr	r0, [r4, #4]
 8004648:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
 800464c:	2104      	movs	r1, #4
 800464e:	f7ff ffa1 	bl	8004594 <std>
 8004652:	68a0      	ldr	r0, [r4, #8]
 8004654:	2201      	movs	r2, #1
 8004656:	2109      	movs	r1, #9
 8004658:	f7ff ff9c 	bl	8004594 <std>
 800465c:	68e0      	ldr	r0, [r4, #12]
 800465e:	2202      	movs	r2, #2
 8004660:	2112      	movs	r1, #18
 8004662:	f7ff ff97 	bl	8004594 <std>
 8004666:	2301      	movs	r3, #1
 8004668:	63a3      	str	r3, [r4, #56]	; 0x38
 800466a:	e7df      	b.n	800462c <__sinit+0xc>
 800466c:	080045e5 	.word	0x080045e5

08004670 <__libc_fini_array>:
 8004670:	b538      	push	{r3, r4, r5, lr}
 8004672:	4d07      	ldr	r5, [pc, #28]	; (8004690 <__libc_fini_array+0x20>)
 8004674:	4c07      	ldr	r4, [pc, #28]	; (8004694 <__libc_fini_array+0x24>)
 8004676:	1b64      	subs	r4, r4, r5
 8004678:	10a4      	asrs	r4, r4, #2
 800467a:	b91c      	cbnz	r4, 8004684 <__libc_fini_array+0x14>
 800467c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004680:	f002 bd5e 	b.w	8007140 <_fini>
 8004684:	3c01      	subs	r4, #1
 8004686:	f855 3024 	ldr.w	r3, [r5, r4, lsl #2]
 800468a:	4798      	blx	r3
 800468c:	e7f5      	b.n	800467a <__libc_fini_array+0xa>
 800468e:	bf00      	nop
 8004690:	080075e8 	.word	0x080075e8
 8004694:	080075ec 	.word	0x080075ec

08004698 <_malloc_trim_r>:
 8004698:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800469c:	4606      	mov	r6, r0
 800469e:	2008      	movs	r0, #8
 80046a0:	460c      	mov	r4, r1
 80046a2:	f001 facf 	bl	8005c44 <sysconf>
 80046a6:	4f23      	ldr	r7, [pc, #140]	; (8004734 <_malloc_trim_r+0x9c>)
 80046a8:	4680      	mov	r8, r0
 80046aa:	4630      	mov	r0, r6
 80046ac:	f000 fd50 	bl	8005150 <__malloc_lock>
 80046b0:	68bb      	ldr	r3, [r7, #8]
 80046b2:	685d      	ldr	r5, [r3, #4]
 80046b4:	f025 0503 	bic.w	r5, r5, #3
 80046b8:	1b2c      	subs	r4, r5, r4
 80046ba:	3c11      	subs	r4, #17
 80046bc:	4444      	add	r4, r8
 80046be:	fbb4 f4f8 	udiv	r4, r4, r8
 80046c2:	3c01      	subs	r4, #1
 80046c4:	fb08 f404 	mul.w	r4, r8, r4
 80046c8:	45a0      	cmp	r8, r4
 80046ca:	dd05      	ble.n	80046d8 <_malloc_trim_r+0x40>
 80046cc:	4630      	mov	r0, r6
 80046ce:	f000 fd45 	bl	800515c <__malloc_unlock>
 80046d2:	2000      	movs	r0, #0
 80046d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80046d8:	2100      	movs	r1, #0
 80046da:	4630      	mov	r0, r6
 80046dc:	f001 fa4c 	bl	8005b78 <_sbrk_r>
 80046e0:	68bb      	ldr	r3, [r7, #8]
 80046e2:	442b      	add	r3, r5
 80046e4:	4298      	cmp	r0, r3
 80046e6:	d1f1      	bne.n	80046cc <_malloc_trim_r+0x34>
 80046e8:	4261      	negs	r1, r4
 80046ea:	4630      	mov	r0, r6
 80046ec:	f001 fa44 	bl	8005b78 <_sbrk_r>
 80046f0:	3001      	adds	r0, #1
 80046f2:	d110      	bne.n	8004716 <_malloc_trim_r+0x7e>
 80046f4:	2100      	movs	r1, #0
 80046f6:	4630      	mov	r0, r6
 80046f8:	f001 fa3e 	bl	8005b78 <_sbrk_r>
 80046fc:	68ba      	ldr	r2, [r7, #8]
 80046fe:	1a83      	subs	r3, r0, r2
 8004700:	2b0f      	cmp	r3, #15
 8004702:	dde3      	ble.n	80046cc <_malloc_trim_r+0x34>
 8004704:	490c      	ldr	r1, [pc, #48]	; (8004738 <_malloc_trim_r+0xa0>)
 8004706:	6809      	ldr	r1, [r1, #0]
 8004708:	1a40      	subs	r0, r0, r1
 800470a:	490c      	ldr	r1, [pc, #48]	; (800473c <_malloc_trim_r+0xa4>)
 800470c:	f043 0301 	orr.w	r3, r3, #1
 8004710:	6008      	str	r0, [r1, #0]
 8004712:	6053      	str	r3, [r2, #4]
 8004714:	e7da      	b.n	80046cc <_malloc_trim_r+0x34>
 8004716:	68bb      	ldr	r3, [r7, #8]
 8004718:	4a08      	ldr	r2, [pc, #32]	; (800473c <_malloc_trim_r+0xa4>)
 800471a:	1b2d      	subs	r5, r5, r4
 800471c:	f045 0501 	orr.w	r5, r5, #1
 8004720:	605d      	str	r5, [r3, #4]
 8004722:	6813      	ldr	r3, [r2, #0]
 8004724:	4630      	mov	r0, r6
 8004726:	1b1c      	subs	r4, r3, r4
 8004728:	6014      	str	r4, [r2, #0]
 800472a:	f000 fd17 	bl	800515c <__malloc_unlock>
 800472e:	2001      	movs	r0, #1
 8004730:	e7d0      	b.n	80046d4 <_malloc_trim_r+0x3c>
 8004732:	bf00      	nop
 8004734:	20000444 	.word	0x20000444
 8004738:	2000084c 	.word	0x2000084c
 800473c:	20000a00 	.word	0x20000a00

08004740 <_free_r>:
 8004740:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004742:	4605      	mov	r5, r0
 8004744:	460f      	mov	r7, r1
 8004746:	2900      	cmp	r1, #0
 8004748:	f000 80b1 	beq.w	80048ae <_free_r+0x16e>
 800474c:	f000 fd00 	bl	8005150 <__malloc_lock>
 8004750:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8004754:	4856      	ldr	r0, [pc, #344]	; (80048b0 <_free_r+0x170>)
 8004756:	f022 0401 	bic.w	r4, r2, #1
 800475a:	f1a7 0308 	sub.w	r3, r7, #8
 800475e:	eb03 0c04 	add.w	ip, r3, r4
 8004762:	6881      	ldr	r1, [r0, #8]
 8004764:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8004768:	4561      	cmp	r1, ip
 800476a:	f026 0603 	bic.w	r6, r6, #3
 800476e:	f002 0201 	and.w	r2, r2, #1
 8004772:	d11b      	bne.n	80047ac <_free_r+0x6c>
 8004774:	4434      	add	r4, r6
 8004776:	b93a      	cbnz	r2, 8004788 <_free_r+0x48>
 8004778:	f857 2c08 	ldr.w	r2, [r7, #-8]
 800477c:	1a9b      	subs	r3, r3, r2
 800477e:	4414      	add	r4, r2
 8004780:	e9d3 1202 	ldrd	r1, r2, [r3, #8]
 8004784:	60ca      	str	r2, [r1, #12]
 8004786:	6091      	str	r1, [r2, #8]
 8004788:	f044 0201 	orr.w	r2, r4, #1
 800478c:	605a      	str	r2, [r3, #4]
 800478e:	6083      	str	r3, [r0, #8]
 8004790:	4b48      	ldr	r3, [pc, #288]	; (80048b4 <_free_r+0x174>)
 8004792:	681b      	ldr	r3, [r3, #0]
 8004794:	42a3      	cmp	r3, r4
 8004796:	d804      	bhi.n	80047a2 <_free_r+0x62>
 8004798:	4b47      	ldr	r3, [pc, #284]	; (80048b8 <_free_r+0x178>)
 800479a:	4628      	mov	r0, r5
 800479c:	6819      	ldr	r1, [r3, #0]
 800479e:	f7ff ff7b 	bl	8004698 <_malloc_trim_r>
 80047a2:	4628      	mov	r0, r5
 80047a4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80047a8:	f000 bcd8 	b.w	800515c <__malloc_unlock>
 80047ac:	f8cc 6004 	str.w	r6, [ip, #4]
 80047b0:	2a00      	cmp	r2, #0
 80047b2:	d138      	bne.n	8004826 <_free_r+0xe6>
 80047b4:	f857 1c08 	ldr.w	r1, [r7, #-8]
 80047b8:	1a5b      	subs	r3, r3, r1
 80047ba:	440c      	add	r4, r1
 80047bc:	6899      	ldr	r1, [r3, #8]
 80047be:	f100 0708 	add.w	r7, r0, #8
 80047c2:	42b9      	cmp	r1, r7
 80047c4:	d031      	beq.n	800482a <_free_r+0xea>
 80047c6:	68df      	ldr	r7, [r3, #12]
 80047c8:	60cf      	str	r7, [r1, #12]
 80047ca:	60b9      	str	r1, [r7, #8]
 80047cc:	eb0c 0106 	add.w	r1, ip, r6
 80047d0:	6849      	ldr	r1, [r1, #4]
 80047d2:	07c9      	lsls	r1, r1, #31
 80047d4:	d40b      	bmi.n	80047ee <_free_r+0xae>
 80047d6:	f8dc 1008 	ldr.w	r1, [ip, #8]
 80047da:	4434      	add	r4, r6
 80047dc:	bb3a      	cbnz	r2, 800482e <_free_r+0xee>
 80047de:	4e37      	ldr	r6, [pc, #220]	; (80048bc <_free_r+0x17c>)
 80047e0:	42b1      	cmp	r1, r6
 80047e2:	d124      	bne.n	800482e <_free_r+0xee>
 80047e4:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80047e8:	e9c3 1102 	strd	r1, r1, [r3, #8]
 80047ec:	2201      	movs	r2, #1
 80047ee:	f044 0101 	orr.w	r1, r4, #1
 80047f2:	6059      	str	r1, [r3, #4]
 80047f4:	511c      	str	r4, [r3, r4]
 80047f6:	2a00      	cmp	r2, #0
 80047f8:	d1d3      	bne.n	80047a2 <_free_r+0x62>
 80047fa:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 80047fe:	d21b      	bcs.n	8004838 <_free_r+0xf8>
 8004800:	0961      	lsrs	r1, r4, #5
 8004802:	08e2      	lsrs	r2, r4, #3
 8004804:	2401      	movs	r4, #1
 8004806:	408c      	lsls	r4, r1
 8004808:	6841      	ldr	r1, [r0, #4]
 800480a:	3201      	adds	r2, #1
 800480c:	430c      	orrs	r4, r1
 800480e:	6044      	str	r4, [r0, #4]
 8004810:	eb00 01c2 	add.w	r1, r0, r2, lsl #3
 8004814:	f850 4032 	ldr.w	r4, [r0, r2, lsl #3]
 8004818:	3908      	subs	r1, #8
 800481a:	e9c3 4102 	strd	r4, r1, [r3, #8]
 800481e:	f840 3032 	str.w	r3, [r0, r2, lsl #3]
 8004822:	60e3      	str	r3, [r4, #12]
 8004824:	e7bd      	b.n	80047a2 <_free_r+0x62>
 8004826:	2200      	movs	r2, #0
 8004828:	e7d0      	b.n	80047cc <_free_r+0x8c>
 800482a:	2201      	movs	r2, #1
 800482c:	e7ce      	b.n	80047cc <_free_r+0x8c>
 800482e:	f8dc 600c 	ldr.w	r6, [ip, #12]
 8004832:	60ce      	str	r6, [r1, #12]
 8004834:	60b1      	str	r1, [r6, #8]
 8004836:	e7da      	b.n	80047ee <_free_r+0xae>
 8004838:	f5b4 6f20 	cmp.w	r4, #2560	; 0xa00
 800483c:	ea4f 2254 	mov.w	r2, r4, lsr #9
 8004840:	d214      	bcs.n	800486c <_free_r+0x12c>
 8004842:	09a2      	lsrs	r2, r4, #6
 8004844:	3238      	adds	r2, #56	; 0x38
 8004846:	1c51      	adds	r1, r2, #1
 8004848:	eb00 06c2 	add.w	r6, r0, r2, lsl #3
 800484c:	f850 1031 	ldr.w	r1, [r0, r1, lsl #3]
 8004850:	428e      	cmp	r6, r1
 8004852:	d125      	bne.n	80048a0 <_free_r+0x160>
 8004854:	2401      	movs	r4, #1
 8004856:	1092      	asrs	r2, r2, #2
 8004858:	fa04 f202 	lsl.w	r2, r4, r2
 800485c:	6844      	ldr	r4, [r0, #4]
 800485e:	4322      	orrs	r2, r4
 8004860:	6042      	str	r2, [r0, #4]
 8004862:	e9c3 1602 	strd	r1, r6, [r3, #8]
 8004866:	60b3      	str	r3, [r6, #8]
 8004868:	60cb      	str	r3, [r1, #12]
 800486a:	e79a      	b.n	80047a2 <_free_r+0x62>
 800486c:	2a14      	cmp	r2, #20
 800486e:	d801      	bhi.n	8004874 <_free_r+0x134>
 8004870:	325b      	adds	r2, #91	; 0x5b
 8004872:	e7e8      	b.n	8004846 <_free_r+0x106>
 8004874:	2a54      	cmp	r2, #84	; 0x54
 8004876:	d802      	bhi.n	800487e <_free_r+0x13e>
 8004878:	0b22      	lsrs	r2, r4, #12
 800487a:	326e      	adds	r2, #110	; 0x6e
 800487c:	e7e3      	b.n	8004846 <_free_r+0x106>
 800487e:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8004882:	d802      	bhi.n	800488a <_free_r+0x14a>
 8004884:	0be2      	lsrs	r2, r4, #15
 8004886:	3277      	adds	r2, #119	; 0x77
 8004888:	e7dd      	b.n	8004846 <_free_r+0x106>
 800488a:	f240 5154 	movw	r1, #1364	; 0x554
 800488e:	428a      	cmp	r2, r1
 8004890:	bf9a      	itte	ls
 8004892:	0ca2      	lsrls	r2, r4, #18
 8004894:	327c      	addls	r2, #124	; 0x7c
 8004896:	227e      	movhi	r2, #126	; 0x7e
 8004898:	e7d5      	b.n	8004846 <_free_r+0x106>
 800489a:	6889      	ldr	r1, [r1, #8]
 800489c:	428e      	cmp	r6, r1
 800489e:	d004      	beq.n	80048aa <_free_r+0x16a>
 80048a0:	684a      	ldr	r2, [r1, #4]
 80048a2:	f022 0203 	bic.w	r2, r2, #3
 80048a6:	42a2      	cmp	r2, r4
 80048a8:	d8f7      	bhi.n	800489a <_free_r+0x15a>
 80048aa:	68ce      	ldr	r6, [r1, #12]
 80048ac:	e7d9      	b.n	8004862 <_free_r+0x122>
 80048ae:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80048b0:	20000444 	.word	0x20000444
 80048b4:	20000850 	.word	0x20000850
 80048b8:	20000a30 	.word	0x20000a30
 80048bc:	2000044c 	.word	0x2000044c

080048c0 <__sfvwrite_r>:
 80048c0:	6893      	ldr	r3, [r2, #8]
 80048c2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80048c6:	4606      	mov	r6, r0
 80048c8:	460c      	mov	r4, r1
 80048ca:	4690      	mov	r8, r2
 80048cc:	b91b      	cbnz	r3, 80048d6 <__sfvwrite_r+0x16>
 80048ce:	2000      	movs	r0, #0
 80048d0:	b003      	add	sp, #12
 80048d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80048d6:	898b      	ldrh	r3, [r1, #12]
 80048d8:	0718      	lsls	r0, r3, #28
 80048da:	d550      	bpl.n	800497e <__sfvwrite_r+0xbe>
 80048dc:	690b      	ldr	r3, [r1, #16]
 80048de:	2b00      	cmp	r3, #0
 80048e0:	d04d      	beq.n	800497e <__sfvwrite_r+0xbe>
 80048e2:	89a3      	ldrh	r3, [r4, #12]
 80048e4:	f8d8 7000 	ldr.w	r7, [r8]
 80048e8:	f013 0902 	ands.w	r9, r3, #2
 80048ec:	d16c      	bne.n	80049c8 <__sfvwrite_r+0x108>
 80048ee:	f013 0301 	ands.w	r3, r3, #1
 80048f2:	f000 809c 	beq.w	8004a2e <__sfvwrite_r+0x16e>
 80048f6:	4648      	mov	r0, r9
 80048f8:	46ca      	mov	sl, r9
 80048fa:	46cb      	mov	fp, r9
 80048fc:	f1bb 0f00 	cmp.w	fp, #0
 8004900:	f000 8103 	beq.w	8004b0a <__sfvwrite_r+0x24a>
 8004904:	b950      	cbnz	r0, 800491c <__sfvwrite_r+0x5c>
 8004906:	465a      	mov	r2, fp
 8004908:	210a      	movs	r1, #10
 800490a:	4650      	mov	r0, sl
 800490c:	f7fb fc78 	bl	8000200 <memchr>
 8004910:	2800      	cmp	r0, #0
 8004912:	f000 80ff 	beq.w	8004b14 <__sfvwrite_r+0x254>
 8004916:	3001      	adds	r0, #1
 8004918:	eba0 090a 	sub.w	r9, r0, sl
 800491c:	6820      	ldr	r0, [r4, #0]
 800491e:	6921      	ldr	r1, [r4, #16]
 8004920:	6963      	ldr	r3, [r4, #20]
 8004922:	45d9      	cmp	r9, fp
 8004924:	464a      	mov	r2, r9
 8004926:	bf28      	it	cs
 8004928:	465a      	movcs	r2, fp
 800492a:	4288      	cmp	r0, r1
 800492c:	f240 80f5 	bls.w	8004b1a <__sfvwrite_r+0x25a>
 8004930:	68a5      	ldr	r5, [r4, #8]
 8004932:	441d      	add	r5, r3
 8004934:	42aa      	cmp	r2, r5
 8004936:	f340 80f0 	ble.w	8004b1a <__sfvwrite_r+0x25a>
 800493a:	4651      	mov	r1, sl
 800493c:	462a      	mov	r2, r5
 800493e:	f000 fbed 	bl	800511c <memmove>
 8004942:	6823      	ldr	r3, [r4, #0]
 8004944:	442b      	add	r3, r5
 8004946:	6023      	str	r3, [r4, #0]
 8004948:	4621      	mov	r1, r4
 800494a:	4630      	mov	r0, r6
 800494c:	f7ff fdfc 	bl	8004548 <_fflush_r>
 8004950:	2800      	cmp	r0, #0
 8004952:	d167      	bne.n	8004a24 <__sfvwrite_r+0x164>
 8004954:	ebb9 0905 	subs.w	r9, r9, r5
 8004958:	f040 80f7 	bne.w	8004b4a <__sfvwrite_r+0x28a>
 800495c:	4621      	mov	r1, r4
 800495e:	4630      	mov	r0, r6
 8004960:	f7ff fdf2 	bl	8004548 <_fflush_r>
 8004964:	2800      	cmp	r0, #0
 8004966:	d15d      	bne.n	8004a24 <__sfvwrite_r+0x164>
 8004968:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800496c:	44aa      	add	sl, r5
 800496e:	ebab 0b05 	sub.w	fp, fp, r5
 8004972:	1b55      	subs	r5, r2, r5
 8004974:	f8c8 5008 	str.w	r5, [r8, #8]
 8004978:	2d00      	cmp	r5, #0
 800497a:	d1bf      	bne.n	80048fc <__sfvwrite_r+0x3c>
 800497c:	e7a7      	b.n	80048ce <__sfvwrite_r+0xe>
 800497e:	4621      	mov	r1, r4
 8004980:	4630      	mov	r0, r6
 8004982:	f7fe fea5 	bl	80036d0 <__swsetup_r>
 8004986:	2800      	cmp	r0, #0
 8004988:	d0ab      	beq.n	80048e2 <__sfvwrite_r+0x22>
 800498a:	f04f 30ff 	mov.w	r0, #4294967295
 800498e:	e79f      	b.n	80048d0 <__sfvwrite_r+0x10>
 8004990:	e9d7 b900 	ldrd	fp, r9, [r7]
 8004994:	3708      	adds	r7, #8
 8004996:	f1b9 0f00 	cmp.w	r9, #0
 800499a:	d0f9      	beq.n	8004990 <__sfvwrite_r+0xd0>
 800499c:	45d1      	cmp	r9, sl
 800499e:	464b      	mov	r3, r9
 80049a0:	69e1      	ldr	r1, [r4, #28]
 80049a2:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80049a4:	bf28      	it	cs
 80049a6:	4653      	movcs	r3, sl
 80049a8:	465a      	mov	r2, fp
 80049aa:	4630      	mov	r0, r6
 80049ac:	47a8      	blx	r5
 80049ae:	2800      	cmp	r0, #0
 80049b0:	dd38      	ble.n	8004a24 <__sfvwrite_r+0x164>
 80049b2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80049b6:	4483      	add	fp, r0
 80049b8:	eba9 0900 	sub.w	r9, r9, r0
 80049bc:	1a18      	subs	r0, r3, r0
 80049be:	f8c8 0008 	str.w	r0, [r8, #8]
 80049c2:	2800      	cmp	r0, #0
 80049c4:	d1e7      	bne.n	8004996 <__sfvwrite_r+0xd6>
 80049c6:	e782      	b.n	80048ce <__sfvwrite_r+0xe>
 80049c8:	f04f 0b00 	mov.w	fp, #0
 80049cc:	f8df a180 	ldr.w	sl, [pc, #384]	; 8004b50 <__sfvwrite_r+0x290>
 80049d0:	46d9      	mov	r9, fp
 80049d2:	e7e0      	b.n	8004996 <__sfvwrite_r+0xd6>
 80049d4:	e9d7 9a00 	ldrd	r9, sl, [r7]
 80049d8:	3708      	adds	r7, #8
 80049da:	f1ba 0f00 	cmp.w	sl, #0
 80049de:	d0f9      	beq.n	80049d4 <__sfvwrite_r+0x114>
 80049e0:	89a3      	ldrh	r3, [r4, #12]
 80049e2:	68a2      	ldr	r2, [r4, #8]
 80049e4:	6820      	ldr	r0, [r4, #0]
 80049e6:	0599      	lsls	r1, r3, #22
 80049e8:	d563      	bpl.n	8004ab2 <__sfvwrite_r+0x1f2>
 80049ea:	4552      	cmp	r2, sl
 80049ec:	d836      	bhi.n	8004a5c <__sfvwrite_r+0x19c>
 80049ee:	f413 6f90 	tst.w	r3, #1152	; 0x480
 80049f2:	d033      	beq.n	8004a5c <__sfvwrite_r+0x19c>
 80049f4:	6921      	ldr	r1, [r4, #16]
 80049f6:	6965      	ldr	r5, [r4, #20]
 80049f8:	eba0 0b01 	sub.w	fp, r0, r1
 80049fc:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004a00:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8004a04:	f10b 0201 	add.w	r2, fp, #1
 8004a08:	106d      	asrs	r5, r5, #1
 8004a0a:	4452      	add	r2, sl
 8004a0c:	4295      	cmp	r5, r2
 8004a0e:	bf38      	it	cc
 8004a10:	4615      	movcc	r5, r2
 8004a12:	055b      	lsls	r3, r3, #21
 8004a14:	d53d      	bpl.n	8004a92 <__sfvwrite_r+0x1d2>
 8004a16:	4629      	mov	r1, r5
 8004a18:	4630      	mov	r0, r6
 8004a1a:	f000 f92f 	bl	8004c7c <_malloc_r>
 8004a1e:	b948      	cbnz	r0, 8004a34 <__sfvwrite_r+0x174>
 8004a20:	230c      	movs	r3, #12
 8004a22:	6033      	str	r3, [r6, #0]
 8004a24:	89a3      	ldrh	r3, [r4, #12]
 8004a26:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004a2a:	81a3      	strh	r3, [r4, #12]
 8004a2c:	e7ad      	b.n	800498a <__sfvwrite_r+0xca>
 8004a2e:	4699      	mov	r9, r3
 8004a30:	469a      	mov	sl, r3
 8004a32:	e7d2      	b.n	80049da <__sfvwrite_r+0x11a>
 8004a34:	465a      	mov	r2, fp
 8004a36:	6921      	ldr	r1, [r4, #16]
 8004a38:	9001      	str	r0, [sp, #4]
 8004a3a:	f000 fb61 	bl	8005100 <memcpy>
 8004a3e:	89a2      	ldrh	r2, [r4, #12]
 8004a40:	9b01      	ldr	r3, [sp, #4]
 8004a42:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8004a46:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8004a4a:	81a2      	strh	r2, [r4, #12]
 8004a4c:	6123      	str	r3, [r4, #16]
 8004a4e:	6165      	str	r5, [r4, #20]
 8004a50:	445b      	add	r3, fp
 8004a52:	eba5 050b 	sub.w	r5, r5, fp
 8004a56:	6023      	str	r3, [r4, #0]
 8004a58:	4652      	mov	r2, sl
 8004a5a:	60a5      	str	r5, [r4, #8]
 8004a5c:	4552      	cmp	r2, sl
 8004a5e:	bf28      	it	cs
 8004a60:	4652      	movcs	r2, sl
 8004a62:	6820      	ldr	r0, [r4, #0]
 8004a64:	9201      	str	r2, [sp, #4]
 8004a66:	4649      	mov	r1, r9
 8004a68:	f000 fb58 	bl	800511c <memmove>
 8004a6c:	68a3      	ldr	r3, [r4, #8]
 8004a6e:	9a01      	ldr	r2, [sp, #4]
 8004a70:	1a9b      	subs	r3, r3, r2
 8004a72:	60a3      	str	r3, [r4, #8]
 8004a74:	6823      	ldr	r3, [r4, #0]
 8004a76:	441a      	add	r2, r3
 8004a78:	4655      	mov	r5, sl
 8004a7a:	6022      	str	r2, [r4, #0]
 8004a7c:	f8d8 0008 	ldr.w	r0, [r8, #8]
 8004a80:	44a9      	add	r9, r5
 8004a82:	ebaa 0a05 	sub.w	sl, sl, r5
 8004a86:	1b45      	subs	r5, r0, r5
 8004a88:	f8c8 5008 	str.w	r5, [r8, #8]
 8004a8c:	2d00      	cmp	r5, #0
 8004a8e:	d1a4      	bne.n	80049da <__sfvwrite_r+0x11a>
 8004a90:	e71d      	b.n	80048ce <__sfvwrite_r+0xe>
 8004a92:	462a      	mov	r2, r5
 8004a94:	4630      	mov	r0, r6
 8004a96:	f000 fe97 	bl	80057c8 <_realloc_r>
 8004a9a:	4603      	mov	r3, r0
 8004a9c:	2800      	cmp	r0, #0
 8004a9e:	d1d5      	bne.n	8004a4c <__sfvwrite_r+0x18c>
 8004aa0:	6921      	ldr	r1, [r4, #16]
 8004aa2:	4630      	mov	r0, r6
 8004aa4:	f7ff fe4c 	bl	8004740 <_free_r>
 8004aa8:	89a3      	ldrh	r3, [r4, #12]
 8004aaa:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8004aae:	81a3      	strh	r3, [r4, #12]
 8004ab0:	e7b6      	b.n	8004a20 <__sfvwrite_r+0x160>
 8004ab2:	6923      	ldr	r3, [r4, #16]
 8004ab4:	4283      	cmp	r3, r0
 8004ab6:	d302      	bcc.n	8004abe <__sfvwrite_r+0x1fe>
 8004ab8:	6961      	ldr	r1, [r4, #20]
 8004aba:	4551      	cmp	r1, sl
 8004abc:	d915      	bls.n	8004aea <__sfvwrite_r+0x22a>
 8004abe:	4552      	cmp	r2, sl
 8004ac0:	bf28      	it	cs
 8004ac2:	4652      	movcs	r2, sl
 8004ac4:	4649      	mov	r1, r9
 8004ac6:	4615      	mov	r5, r2
 8004ac8:	f000 fb28 	bl	800511c <memmove>
 8004acc:	68a3      	ldr	r3, [r4, #8]
 8004ace:	6822      	ldr	r2, [r4, #0]
 8004ad0:	1b5b      	subs	r3, r3, r5
 8004ad2:	442a      	add	r2, r5
 8004ad4:	60a3      	str	r3, [r4, #8]
 8004ad6:	6022      	str	r2, [r4, #0]
 8004ad8:	2b00      	cmp	r3, #0
 8004ada:	d1cf      	bne.n	8004a7c <__sfvwrite_r+0x1bc>
 8004adc:	4621      	mov	r1, r4
 8004ade:	4630      	mov	r0, r6
 8004ae0:	f7ff fd32 	bl	8004548 <_fflush_r>
 8004ae4:	2800      	cmp	r0, #0
 8004ae6:	d0c9      	beq.n	8004a7c <__sfvwrite_r+0x1bc>
 8004ae8:	e79c      	b.n	8004a24 <__sfvwrite_r+0x164>
 8004aea:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 8004aee:	459a      	cmp	sl, r3
 8004af0:	bf38      	it	cc
 8004af2:	4653      	movcc	r3, sl
 8004af4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8004af6:	fb93 f3f1 	sdiv	r3, r3, r1
 8004afa:	464a      	mov	r2, r9
 8004afc:	434b      	muls	r3, r1
 8004afe:	4630      	mov	r0, r6
 8004b00:	69e1      	ldr	r1, [r4, #28]
 8004b02:	47a8      	blx	r5
 8004b04:	1e05      	subs	r5, r0, #0
 8004b06:	dcb9      	bgt.n	8004a7c <__sfvwrite_r+0x1bc>
 8004b08:	e78c      	b.n	8004a24 <__sfvwrite_r+0x164>
 8004b0a:	e9d7 ab00 	ldrd	sl, fp, [r7]
 8004b0e:	2000      	movs	r0, #0
 8004b10:	3708      	adds	r7, #8
 8004b12:	e6f3      	b.n	80048fc <__sfvwrite_r+0x3c>
 8004b14:	f10b 0901 	add.w	r9, fp, #1
 8004b18:	e700      	b.n	800491c <__sfvwrite_r+0x5c>
 8004b1a:	4293      	cmp	r3, r2
 8004b1c:	dc08      	bgt.n	8004b30 <__sfvwrite_r+0x270>
 8004b1e:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8004b20:	69e1      	ldr	r1, [r4, #28]
 8004b22:	4652      	mov	r2, sl
 8004b24:	4630      	mov	r0, r6
 8004b26:	47a8      	blx	r5
 8004b28:	1e05      	subs	r5, r0, #0
 8004b2a:	f73f af13 	bgt.w	8004954 <__sfvwrite_r+0x94>
 8004b2e:	e779      	b.n	8004a24 <__sfvwrite_r+0x164>
 8004b30:	4651      	mov	r1, sl
 8004b32:	9201      	str	r2, [sp, #4]
 8004b34:	f000 faf2 	bl	800511c <memmove>
 8004b38:	9a01      	ldr	r2, [sp, #4]
 8004b3a:	68a3      	ldr	r3, [r4, #8]
 8004b3c:	1a9b      	subs	r3, r3, r2
 8004b3e:	60a3      	str	r3, [r4, #8]
 8004b40:	6823      	ldr	r3, [r4, #0]
 8004b42:	4413      	add	r3, r2
 8004b44:	6023      	str	r3, [r4, #0]
 8004b46:	4615      	mov	r5, r2
 8004b48:	e704      	b.n	8004954 <__sfvwrite_r+0x94>
 8004b4a:	2001      	movs	r0, #1
 8004b4c:	e70c      	b.n	8004968 <__sfvwrite_r+0xa8>
 8004b4e:	bf00      	nop
 8004b50:	7ffffc00 	.word	0x7ffffc00

08004b54 <_fwalk_reent>:
 8004b54:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004b58:	4606      	mov	r6, r0
 8004b5a:	4688      	mov	r8, r1
 8004b5c:	f500 7438 	add.w	r4, r0, #736	; 0x2e0
 8004b60:	2700      	movs	r7, #0
 8004b62:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8004b66:	f1b9 0901 	subs.w	r9, r9, #1
 8004b6a:	d505      	bpl.n	8004b78 <_fwalk_reent+0x24>
 8004b6c:	6824      	ldr	r4, [r4, #0]
 8004b6e:	2c00      	cmp	r4, #0
 8004b70:	d1f7      	bne.n	8004b62 <_fwalk_reent+0xe>
 8004b72:	4638      	mov	r0, r7
 8004b74:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004b78:	89ab      	ldrh	r3, [r5, #12]
 8004b7a:	2b01      	cmp	r3, #1
 8004b7c:	d907      	bls.n	8004b8e <_fwalk_reent+0x3a>
 8004b7e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004b82:	3301      	adds	r3, #1
 8004b84:	d003      	beq.n	8004b8e <_fwalk_reent+0x3a>
 8004b86:	4629      	mov	r1, r5
 8004b88:	4630      	mov	r0, r6
 8004b8a:	47c0      	blx	r8
 8004b8c:	4307      	orrs	r7, r0
 8004b8e:	3568      	adds	r5, #104	; 0x68
 8004b90:	e7e9      	b.n	8004b66 <_fwalk_reent+0x12>
	...

08004b94 <_localeconv_r>:
 8004b94:	4800      	ldr	r0, [pc, #0]	; (8004b98 <_localeconv_r+0x4>)
 8004b96:	4770      	bx	lr
 8004b98:	20000944 	.word	0x20000944

08004b9c <__retarget_lock_init_recursive>:
 8004b9c:	4770      	bx	lr

08004b9e <__retarget_lock_close_recursive>:
 8004b9e:	4770      	bx	lr

08004ba0 <__retarget_lock_acquire_recursive>:
 8004ba0:	4770      	bx	lr

08004ba2 <__retarget_lock_release_recursive>:
 8004ba2:	4770      	bx	lr

08004ba4 <__swhatbuf_r>:
 8004ba4:	b570      	push	{r4, r5, r6, lr}
 8004ba6:	460e      	mov	r6, r1
 8004ba8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004bac:	2900      	cmp	r1, #0
 8004bae:	b096      	sub	sp, #88	; 0x58
 8004bb0:	4614      	mov	r4, r2
 8004bb2:	461d      	mov	r5, r3
 8004bb4:	da09      	bge.n	8004bca <__swhatbuf_r+0x26>
 8004bb6:	89b3      	ldrh	r3, [r6, #12]
 8004bb8:	2200      	movs	r2, #0
 8004bba:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8004bbe:	602a      	str	r2, [r5, #0]
 8004bc0:	d116      	bne.n	8004bf0 <__swhatbuf_r+0x4c>
 8004bc2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004bc6:	6023      	str	r3, [r4, #0]
 8004bc8:	e015      	b.n	8004bf6 <__swhatbuf_r+0x52>
 8004bca:	466a      	mov	r2, sp
 8004bcc:	f001 febc 	bl	8006948 <_fstat_r>
 8004bd0:	2800      	cmp	r0, #0
 8004bd2:	dbf0      	blt.n	8004bb6 <__swhatbuf_r+0x12>
 8004bd4:	9a01      	ldr	r2, [sp, #4]
 8004bd6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8004bda:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8004bde:	425a      	negs	r2, r3
 8004be0:	415a      	adcs	r2, r3
 8004be2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8004be6:	602a      	str	r2, [r5, #0]
 8004be8:	f44f 6000 	mov.w	r0, #2048	; 0x800
 8004bec:	6023      	str	r3, [r4, #0]
 8004bee:	e002      	b.n	8004bf6 <__swhatbuf_r+0x52>
 8004bf0:	2340      	movs	r3, #64	; 0x40
 8004bf2:	6023      	str	r3, [r4, #0]
 8004bf4:	4610      	mov	r0, r2
 8004bf6:	b016      	add	sp, #88	; 0x58
 8004bf8:	bd70      	pop	{r4, r5, r6, pc}
	...

08004bfc <__smakebuf_r>:
 8004bfc:	898b      	ldrh	r3, [r1, #12]
 8004bfe:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8004c00:	079d      	lsls	r5, r3, #30
 8004c02:	4606      	mov	r6, r0
 8004c04:	460c      	mov	r4, r1
 8004c06:	d507      	bpl.n	8004c18 <__smakebuf_r+0x1c>
 8004c08:	f104 0343 	add.w	r3, r4, #67	; 0x43
 8004c0c:	6023      	str	r3, [r4, #0]
 8004c0e:	6123      	str	r3, [r4, #16]
 8004c10:	2301      	movs	r3, #1
 8004c12:	6163      	str	r3, [r4, #20]
 8004c14:	b002      	add	sp, #8
 8004c16:	bd70      	pop	{r4, r5, r6, pc}
 8004c18:	ab01      	add	r3, sp, #4
 8004c1a:	466a      	mov	r2, sp
 8004c1c:	f7ff ffc2 	bl	8004ba4 <__swhatbuf_r>
 8004c20:	9900      	ldr	r1, [sp, #0]
 8004c22:	4605      	mov	r5, r0
 8004c24:	4630      	mov	r0, r6
 8004c26:	f000 f829 	bl	8004c7c <_malloc_r>
 8004c2a:	b948      	cbnz	r0, 8004c40 <__smakebuf_r+0x44>
 8004c2c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004c30:	059a      	lsls	r2, r3, #22
 8004c32:	d4ef      	bmi.n	8004c14 <__smakebuf_r+0x18>
 8004c34:	f023 0303 	bic.w	r3, r3, #3
 8004c38:	f043 0302 	orr.w	r3, r3, #2
 8004c3c:	81a3      	strh	r3, [r4, #12]
 8004c3e:	e7e3      	b.n	8004c08 <__smakebuf_r+0xc>
 8004c40:	4b0d      	ldr	r3, [pc, #52]	; (8004c78 <__smakebuf_r+0x7c>)
 8004c42:	63f3      	str	r3, [r6, #60]	; 0x3c
 8004c44:	89a3      	ldrh	r3, [r4, #12]
 8004c46:	6020      	str	r0, [r4, #0]
 8004c48:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004c4c:	81a3      	strh	r3, [r4, #12]
 8004c4e:	9b00      	ldr	r3, [sp, #0]
 8004c50:	6163      	str	r3, [r4, #20]
 8004c52:	9b01      	ldr	r3, [sp, #4]
 8004c54:	6120      	str	r0, [r4, #16]
 8004c56:	b15b      	cbz	r3, 8004c70 <__smakebuf_r+0x74>
 8004c58:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8004c5c:	4630      	mov	r0, r6
 8004c5e:	f001 fe85 	bl	800696c <_isatty_r>
 8004c62:	b128      	cbz	r0, 8004c70 <__smakebuf_r+0x74>
 8004c64:	89a3      	ldrh	r3, [r4, #12]
 8004c66:	f023 0303 	bic.w	r3, r3, #3
 8004c6a:	f043 0301 	orr.w	r3, r3, #1
 8004c6e:	81a3      	strh	r3, [r4, #12]
 8004c70:	89a0      	ldrh	r0, [r4, #12]
 8004c72:	4305      	orrs	r5, r0
 8004c74:	81a5      	strh	r5, [r4, #12]
 8004c76:	e7cd      	b.n	8004c14 <__smakebuf_r+0x18>
 8004c78:	080045e5 	.word	0x080045e5

08004c7c <_malloc_r>:
 8004c7c:	f101 030b 	add.w	r3, r1, #11
 8004c80:	2b16      	cmp	r3, #22
 8004c82:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c86:	4605      	mov	r5, r0
 8004c88:	d906      	bls.n	8004c98 <_malloc_r+0x1c>
 8004c8a:	f033 0707 	bics.w	r7, r3, #7
 8004c8e:	d504      	bpl.n	8004c9a <_malloc_r+0x1e>
 8004c90:	230c      	movs	r3, #12
 8004c92:	602b      	str	r3, [r5, #0]
 8004c94:	2400      	movs	r4, #0
 8004c96:	e1ae      	b.n	8004ff6 <_malloc_r+0x37a>
 8004c98:	2710      	movs	r7, #16
 8004c9a:	42b9      	cmp	r1, r7
 8004c9c:	d8f8      	bhi.n	8004c90 <_malloc_r+0x14>
 8004c9e:	4628      	mov	r0, r5
 8004ca0:	f000 fa56 	bl	8005150 <__malloc_lock>
 8004ca4:	f5b7 7ffc 	cmp.w	r7, #504	; 0x1f8
 8004ca8:	4ec3      	ldr	r6, [pc, #780]	; (8004fb8 <_malloc_r+0x33c>)
 8004caa:	d238      	bcs.n	8004d1e <_malloc_r+0xa2>
 8004cac:	f107 0208 	add.w	r2, r7, #8
 8004cb0:	4432      	add	r2, r6
 8004cb2:	f1a2 0108 	sub.w	r1, r2, #8
 8004cb6:	6854      	ldr	r4, [r2, #4]
 8004cb8:	428c      	cmp	r4, r1
 8004cba:	ea4f 03d7 	mov.w	r3, r7, lsr #3
 8004cbe:	d102      	bne.n	8004cc6 <_malloc_r+0x4a>
 8004cc0:	68d4      	ldr	r4, [r2, #12]
 8004cc2:	42a2      	cmp	r2, r4
 8004cc4:	d010      	beq.n	8004ce8 <_malloc_r+0x6c>
 8004cc6:	6863      	ldr	r3, [r4, #4]
 8004cc8:	e9d4 1202 	ldrd	r1, r2, [r4, #8]
 8004ccc:	f023 0303 	bic.w	r3, r3, #3
 8004cd0:	60ca      	str	r2, [r1, #12]
 8004cd2:	4423      	add	r3, r4
 8004cd4:	6091      	str	r1, [r2, #8]
 8004cd6:	685a      	ldr	r2, [r3, #4]
 8004cd8:	f042 0201 	orr.w	r2, r2, #1
 8004cdc:	605a      	str	r2, [r3, #4]
 8004cde:	4628      	mov	r0, r5
 8004ce0:	f000 fa3c 	bl	800515c <__malloc_unlock>
 8004ce4:	3408      	adds	r4, #8
 8004ce6:	e186      	b.n	8004ff6 <_malloc_r+0x37a>
 8004ce8:	3302      	adds	r3, #2
 8004cea:	4ab4      	ldr	r2, [pc, #720]	; (8004fbc <_malloc_r+0x340>)
 8004cec:	6934      	ldr	r4, [r6, #16]
 8004cee:	4294      	cmp	r4, r2
 8004cf0:	4611      	mov	r1, r2
 8004cf2:	d077      	beq.n	8004de4 <_malloc_r+0x168>
 8004cf4:	6860      	ldr	r0, [r4, #4]
 8004cf6:	f020 0c03 	bic.w	ip, r0, #3
 8004cfa:	ebac 0007 	sub.w	r0, ip, r7
 8004cfe:	280f      	cmp	r0, #15
 8004d00:	dd48      	ble.n	8004d94 <_malloc_r+0x118>
 8004d02:	19e1      	adds	r1, r4, r7
 8004d04:	f040 0301 	orr.w	r3, r0, #1
 8004d08:	f047 0701 	orr.w	r7, r7, #1
 8004d0c:	6067      	str	r7, [r4, #4]
 8004d0e:	e9c6 1104 	strd	r1, r1, [r6, #16]
 8004d12:	e9c1 2202 	strd	r2, r2, [r1, #8]
 8004d16:	604b      	str	r3, [r1, #4]
 8004d18:	f844 000c 	str.w	r0, [r4, ip]
 8004d1c:	e7df      	b.n	8004cde <_malloc_r+0x62>
 8004d1e:	0a7b      	lsrs	r3, r7, #9
 8004d20:	d02a      	beq.n	8004d78 <_malloc_r+0xfc>
 8004d22:	2b04      	cmp	r3, #4
 8004d24:	d812      	bhi.n	8004d4c <_malloc_r+0xd0>
 8004d26:	09bb      	lsrs	r3, r7, #6
 8004d28:	3338      	adds	r3, #56	; 0x38
 8004d2a:	1c5a      	adds	r2, r3, #1
 8004d2c:	eb06 02c2 	add.w	r2, r6, r2, lsl #3
 8004d30:	f1a2 0c08 	sub.w	ip, r2, #8
 8004d34:	6854      	ldr	r4, [r2, #4]
 8004d36:	4564      	cmp	r4, ip
 8004d38:	d006      	beq.n	8004d48 <_malloc_r+0xcc>
 8004d3a:	6862      	ldr	r2, [r4, #4]
 8004d3c:	f022 0203 	bic.w	r2, r2, #3
 8004d40:	1bd0      	subs	r0, r2, r7
 8004d42:	280f      	cmp	r0, #15
 8004d44:	dd1c      	ble.n	8004d80 <_malloc_r+0x104>
 8004d46:	3b01      	subs	r3, #1
 8004d48:	3301      	adds	r3, #1
 8004d4a:	e7ce      	b.n	8004cea <_malloc_r+0x6e>
 8004d4c:	2b14      	cmp	r3, #20
 8004d4e:	d801      	bhi.n	8004d54 <_malloc_r+0xd8>
 8004d50:	335b      	adds	r3, #91	; 0x5b
 8004d52:	e7ea      	b.n	8004d2a <_malloc_r+0xae>
 8004d54:	2b54      	cmp	r3, #84	; 0x54
 8004d56:	d802      	bhi.n	8004d5e <_malloc_r+0xe2>
 8004d58:	0b3b      	lsrs	r3, r7, #12
 8004d5a:	336e      	adds	r3, #110	; 0x6e
 8004d5c:	e7e5      	b.n	8004d2a <_malloc_r+0xae>
 8004d5e:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
 8004d62:	d802      	bhi.n	8004d6a <_malloc_r+0xee>
 8004d64:	0bfb      	lsrs	r3, r7, #15
 8004d66:	3377      	adds	r3, #119	; 0x77
 8004d68:	e7df      	b.n	8004d2a <_malloc_r+0xae>
 8004d6a:	f240 5254 	movw	r2, #1364	; 0x554
 8004d6e:	4293      	cmp	r3, r2
 8004d70:	d804      	bhi.n	8004d7c <_malloc_r+0x100>
 8004d72:	0cbb      	lsrs	r3, r7, #18
 8004d74:	337c      	adds	r3, #124	; 0x7c
 8004d76:	e7d8      	b.n	8004d2a <_malloc_r+0xae>
 8004d78:	233f      	movs	r3, #63	; 0x3f
 8004d7a:	e7d6      	b.n	8004d2a <_malloc_r+0xae>
 8004d7c:	237e      	movs	r3, #126	; 0x7e
 8004d7e:	e7d4      	b.n	8004d2a <_malloc_r+0xae>
 8004d80:	2800      	cmp	r0, #0
 8004d82:	68e1      	ldr	r1, [r4, #12]
 8004d84:	db04      	blt.n	8004d90 <_malloc_r+0x114>
 8004d86:	68a3      	ldr	r3, [r4, #8]
 8004d88:	60d9      	str	r1, [r3, #12]
 8004d8a:	608b      	str	r3, [r1, #8]
 8004d8c:	18a3      	adds	r3, r4, r2
 8004d8e:	e7a2      	b.n	8004cd6 <_malloc_r+0x5a>
 8004d90:	460c      	mov	r4, r1
 8004d92:	e7d0      	b.n	8004d36 <_malloc_r+0xba>
 8004d94:	2800      	cmp	r0, #0
 8004d96:	e9c6 2204 	strd	r2, r2, [r6, #16]
 8004d9a:	db07      	blt.n	8004dac <_malloc_r+0x130>
 8004d9c:	44a4      	add	ip, r4
 8004d9e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8004da2:	f043 0301 	orr.w	r3, r3, #1
 8004da6:	f8cc 3004 	str.w	r3, [ip, #4]
 8004daa:	e798      	b.n	8004cde <_malloc_r+0x62>
 8004dac:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8004db0:	6870      	ldr	r0, [r6, #4]
 8004db2:	f080 809e 	bcs.w	8004ef2 <_malloc_r+0x276>
 8004db6:	ea4f 02dc 	mov.w	r2, ip, lsr #3
 8004dba:	ea4f 1e5c 	mov.w	lr, ip, lsr #5
 8004dbe:	f04f 0c01 	mov.w	ip, #1
 8004dc2:	3201      	adds	r2, #1
 8004dc4:	fa0c fc0e 	lsl.w	ip, ip, lr
 8004dc8:	ea4c 0000 	orr.w	r0, ip, r0
 8004dcc:	6070      	str	r0, [r6, #4]
 8004dce:	f856 c032 	ldr.w	ip, [r6, r2, lsl #3]
 8004dd2:	eb06 00c2 	add.w	r0, r6, r2, lsl #3
 8004dd6:	3808      	subs	r0, #8
 8004dd8:	e9c4 c002 	strd	ip, r0, [r4, #8]
 8004ddc:	f846 4032 	str.w	r4, [r6, r2, lsl #3]
 8004de0:	f8cc 400c 	str.w	r4, [ip, #12]
 8004de4:	2001      	movs	r0, #1
 8004de6:	109a      	asrs	r2, r3, #2
 8004de8:	fa00 f202 	lsl.w	r2, r0, r2
 8004dec:	6870      	ldr	r0, [r6, #4]
 8004dee:	4290      	cmp	r0, r2
 8004df0:	d326      	bcc.n	8004e40 <_malloc_r+0x1c4>
 8004df2:	4210      	tst	r0, r2
 8004df4:	d106      	bne.n	8004e04 <_malloc_r+0x188>
 8004df6:	f023 0303 	bic.w	r3, r3, #3
 8004dfa:	0052      	lsls	r2, r2, #1
 8004dfc:	4210      	tst	r0, r2
 8004dfe:	f103 0304 	add.w	r3, r3, #4
 8004e02:	d0fa      	beq.n	8004dfa <_malloc_r+0x17e>
 8004e04:	eb06 08c3 	add.w	r8, r6, r3, lsl #3
 8004e08:	46c1      	mov	r9, r8
 8004e0a:	469e      	mov	lr, r3
 8004e0c:	f8d9 400c 	ldr.w	r4, [r9, #12]
 8004e10:	454c      	cmp	r4, r9
 8004e12:	f040 80b3 	bne.w	8004f7c <_malloc_r+0x300>
 8004e16:	f10e 0e01 	add.w	lr, lr, #1
 8004e1a:	f01e 0f03 	tst.w	lr, #3
 8004e1e:	f109 0908 	add.w	r9, r9, #8
 8004e22:	d1f3      	bne.n	8004e0c <_malloc_r+0x190>
 8004e24:	0798      	lsls	r0, r3, #30
 8004e26:	f040 80ec 	bne.w	8005002 <_malloc_r+0x386>
 8004e2a:	6873      	ldr	r3, [r6, #4]
 8004e2c:	ea23 0302 	bic.w	r3, r3, r2
 8004e30:	6073      	str	r3, [r6, #4]
 8004e32:	6870      	ldr	r0, [r6, #4]
 8004e34:	0052      	lsls	r2, r2, #1
 8004e36:	4290      	cmp	r0, r2
 8004e38:	d302      	bcc.n	8004e40 <_malloc_r+0x1c4>
 8004e3a:	2a00      	cmp	r2, #0
 8004e3c:	f040 80ee 	bne.w	800501c <_malloc_r+0x3a0>
 8004e40:	f8d6 b008 	ldr.w	fp, [r6, #8]
 8004e44:	f8db 1004 	ldr.w	r1, [fp, #4]
 8004e48:	f021 0903 	bic.w	r9, r1, #3
 8004e4c:	45b9      	cmp	r9, r7
 8004e4e:	d304      	bcc.n	8004e5a <_malloc_r+0x1de>
 8004e50:	eba9 0207 	sub.w	r2, r9, r7
 8004e54:	2a0f      	cmp	r2, #15
 8004e56:	f300 8149 	bgt.w	80050ec <_malloc_r+0x470>
 8004e5a:	4a59      	ldr	r2, [pc, #356]	; (8004fc0 <_malloc_r+0x344>)
 8004e5c:	6811      	ldr	r1, [r2, #0]
 8004e5e:	3110      	adds	r1, #16
 8004e60:	eb0b 0309 	add.w	r3, fp, r9
 8004e64:	4439      	add	r1, r7
 8004e66:	2008      	movs	r0, #8
 8004e68:	9301      	str	r3, [sp, #4]
 8004e6a:	9100      	str	r1, [sp, #0]
 8004e6c:	f000 feea 	bl	8005c44 <sysconf>
 8004e70:	4a54      	ldr	r2, [pc, #336]	; (8004fc4 <_malloc_r+0x348>)
 8004e72:	e9dd 1300 	ldrd	r1, r3, [sp]
 8004e76:	4680      	mov	r8, r0
 8004e78:	6810      	ldr	r0, [r2, #0]
 8004e7a:	3001      	adds	r0, #1
 8004e7c:	bf1f      	itttt	ne
 8004e7e:	f101 31ff 	addne.w	r1, r1, #4294967295
 8004e82:	4441      	addne	r1, r8
 8004e84:	f1c8 0000 	rsbne	r0, r8, #0
 8004e88:	4001      	andne	r1, r0
 8004e8a:	4628      	mov	r0, r5
 8004e8c:	e9cd 1300 	strd	r1, r3, [sp]
 8004e90:	f000 fe72 	bl	8005b78 <_sbrk_r>
 8004e94:	1c42      	adds	r2, r0, #1
 8004e96:	4604      	mov	r4, r0
 8004e98:	f000 80fc 	beq.w	8005094 <_malloc_r+0x418>
 8004e9c:	9b01      	ldr	r3, [sp, #4]
 8004e9e:	9900      	ldr	r1, [sp, #0]
 8004ea0:	4a48      	ldr	r2, [pc, #288]	; (8004fc4 <_malloc_r+0x348>)
 8004ea2:	4283      	cmp	r3, r0
 8004ea4:	d902      	bls.n	8004eac <_malloc_r+0x230>
 8004ea6:	45b3      	cmp	fp, r6
 8004ea8:	f040 80f4 	bne.w	8005094 <_malloc_r+0x418>
 8004eac:	f8df a120 	ldr.w	sl, [pc, #288]	; 8004fd0 <_malloc_r+0x354>
 8004eb0:	f8da 0000 	ldr.w	r0, [sl]
 8004eb4:	42a3      	cmp	r3, r4
 8004eb6:	eb00 0e01 	add.w	lr, r0, r1
 8004eba:	f8ca e000 	str.w	lr, [sl]
 8004ebe:	f108 3cff 	add.w	ip, r8, #4294967295
 8004ec2:	f040 80ad 	bne.w	8005020 <_malloc_r+0x3a4>
 8004ec6:	ea13 0f0c 	tst.w	r3, ip
 8004eca:	f040 80a9 	bne.w	8005020 <_malloc_r+0x3a4>
 8004ece:	68b3      	ldr	r3, [r6, #8]
 8004ed0:	4449      	add	r1, r9
 8004ed2:	f041 0101 	orr.w	r1, r1, #1
 8004ed6:	6059      	str	r1, [r3, #4]
 8004ed8:	4a3b      	ldr	r2, [pc, #236]	; (8004fc8 <_malloc_r+0x34c>)
 8004eda:	f8da 3000 	ldr.w	r3, [sl]
 8004ede:	6811      	ldr	r1, [r2, #0]
 8004ee0:	428b      	cmp	r3, r1
 8004ee2:	bf88      	it	hi
 8004ee4:	6013      	strhi	r3, [r2, #0]
 8004ee6:	4a39      	ldr	r2, [pc, #228]	; (8004fcc <_malloc_r+0x350>)
 8004ee8:	6811      	ldr	r1, [r2, #0]
 8004eea:	428b      	cmp	r3, r1
 8004eec:	bf88      	it	hi
 8004eee:	6013      	strhi	r3, [r2, #0]
 8004ef0:	e0d0      	b.n	8005094 <_malloc_r+0x418>
 8004ef2:	f5bc 6f20 	cmp.w	ip, #2560	; 0xa00
 8004ef6:	ea4f 225c 	mov.w	r2, ip, lsr #9
 8004efa:	d218      	bcs.n	8004f2e <_malloc_r+0x2b2>
 8004efc:	ea4f 129c 	mov.w	r2, ip, lsr #6
 8004f00:	3238      	adds	r2, #56	; 0x38
 8004f02:	f102 0e01 	add.w	lr, r2, #1
 8004f06:	eb06 08c2 	add.w	r8, r6, r2, lsl #3
 8004f0a:	f856 e03e 	ldr.w	lr, [r6, lr, lsl #3]
 8004f0e:	45f0      	cmp	r8, lr
 8004f10:	d12b      	bne.n	8004f6a <_malloc_r+0x2ee>
 8004f12:	1092      	asrs	r2, r2, #2
 8004f14:	f04f 0c01 	mov.w	ip, #1
 8004f18:	fa0c f202 	lsl.w	r2, ip, r2
 8004f1c:	4310      	orrs	r0, r2
 8004f1e:	6070      	str	r0, [r6, #4]
 8004f20:	e9c4 e802 	strd	lr, r8, [r4, #8]
 8004f24:	f8c8 4008 	str.w	r4, [r8, #8]
 8004f28:	f8ce 400c 	str.w	r4, [lr, #12]
 8004f2c:	e75a      	b.n	8004de4 <_malloc_r+0x168>
 8004f2e:	2a14      	cmp	r2, #20
 8004f30:	d801      	bhi.n	8004f36 <_malloc_r+0x2ba>
 8004f32:	325b      	adds	r2, #91	; 0x5b
 8004f34:	e7e5      	b.n	8004f02 <_malloc_r+0x286>
 8004f36:	2a54      	cmp	r2, #84	; 0x54
 8004f38:	d803      	bhi.n	8004f42 <_malloc_r+0x2c6>
 8004f3a:	ea4f 321c 	mov.w	r2, ip, lsr #12
 8004f3e:	326e      	adds	r2, #110	; 0x6e
 8004f40:	e7df      	b.n	8004f02 <_malloc_r+0x286>
 8004f42:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8004f46:	d803      	bhi.n	8004f50 <_malloc_r+0x2d4>
 8004f48:	ea4f 32dc 	mov.w	r2, ip, lsr #15
 8004f4c:	3277      	adds	r2, #119	; 0x77
 8004f4e:	e7d8      	b.n	8004f02 <_malloc_r+0x286>
 8004f50:	f240 5e54 	movw	lr, #1364	; 0x554
 8004f54:	4572      	cmp	r2, lr
 8004f56:	bf9a      	itte	ls
 8004f58:	ea4f 429c 	movls.w	r2, ip, lsr #18
 8004f5c:	327c      	addls	r2, #124	; 0x7c
 8004f5e:	227e      	movhi	r2, #126	; 0x7e
 8004f60:	e7cf      	b.n	8004f02 <_malloc_r+0x286>
 8004f62:	f8de e008 	ldr.w	lr, [lr, #8]
 8004f66:	45f0      	cmp	r8, lr
 8004f68:	d005      	beq.n	8004f76 <_malloc_r+0x2fa>
 8004f6a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8004f6e:	f022 0203 	bic.w	r2, r2, #3
 8004f72:	4562      	cmp	r2, ip
 8004f74:	d8f5      	bhi.n	8004f62 <_malloc_r+0x2e6>
 8004f76:	f8de 800c 	ldr.w	r8, [lr, #12]
 8004f7a:	e7d1      	b.n	8004f20 <_malloc_r+0x2a4>
 8004f7c:	6860      	ldr	r0, [r4, #4]
 8004f7e:	f8d4 c00c 	ldr.w	ip, [r4, #12]
 8004f82:	f020 0003 	bic.w	r0, r0, #3
 8004f86:	eba0 0a07 	sub.w	sl, r0, r7
 8004f8a:	f1ba 0f0f 	cmp.w	sl, #15
 8004f8e:	dd21      	ble.n	8004fd4 <_malloc_r+0x358>
 8004f90:	68a3      	ldr	r3, [r4, #8]
 8004f92:	19e2      	adds	r2, r4, r7
 8004f94:	f047 0701 	orr.w	r7, r7, #1
 8004f98:	6067      	str	r7, [r4, #4]
 8004f9a:	f8c3 c00c 	str.w	ip, [r3, #12]
 8004f9e:	f8cc 3008 	str.w	r3, [ip, #8]
 8004fa2:	f04a 0301 	orr.w	r3, sl, #1
 8004fa6:	e9c6 2204 	strd	r2, r2, [r6, #16]
 8004faa:	e9c2 1102 	strd	r1, r1, [r2, #8]
 8004fae:	6053      	str	r3, [r2, #4]
 8004fb0:	f844 a000 	str.w	sl, [r4, r0]
 8004fb4:	e693      	b.n	8004cde <_malloc_r+0x62>
 8004fb6:	bf00      	nop
 8004fb8:	20000444 	.word	0x20000444
 8004fbc:	2000044c 	.word	0x2000044c
 8004fc0:	20000a30 	.word	0x20000a30
 8004fc4:	2000084c 	.word	0x2000084c
 8004fc8:	20000a28 	.word	0x20000a28
 8004fcc:	20000a2c 	.word	0x20000a2c
 8004fd0:	20000a00 	.word	0x20000a00
 8004fd4:	f1ba 0f00 	cmp.w	sl, #0
 8004fd8:	db11      	blt.n	8004ffe <_malloc_r+0x382>
 8004fda:	4420      	add	r0, r4
 8004fdc:	6843      	ldr	r3, [r0, #4]
 8004fde:	f043 0301 	orr.w	r3, r3, #1
 8004fe2:	6043      	str	r3, [r0, #4]
 8004fe4:	f854 3f08 	ldr.w	r3, [r4, #8]!
 8004fe8:	4628      	mov	r0, r5
 8004fea:	f8c3 c00c 	str.w	ip, [r3, #12]
 8004fee:	f8cc 3008 	str.w	r3, [ip, #8]
 8004ff2:	f000 f8b3 	bl	800515c <__malloc_unlock>
 8004ff6:	4620      	mov	r0, r4
 8004ff8:	b003      	add	sp, #12
 8004ffa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004ffe:	4664      	mov	r4, ip
 8005000:	e706      	b.n	8004e10 <_malloc_r+0x194>
 8005002:	f858 0908 	ldr.w	r0, [r8], #-8
 8005006:	4540      	cmp	r0, r8
 8005008:	f103 33ff 	add.w	r3, r3, #4294967295
 800500c:	f43f af0a 	beq.w	8004e24 <_malloc_r+0x1a8>
 8005010:	e70f      	b.n	8004e32 <_malloc_r+0x1b6>
 8005012:	3304      	adds	r3, #4
 8005014:	0052      	lsls	r2, r2, #1
 8005016:	4210      	tst	r0, r2
 8005018:	d0fb      	beq.n	8005012 <_malloc_r+0x396>
 800501a:	e6f3      	b.n	8004e04 <_malloc_r+0x188>
 800501c:	4673      	mov	r3, lr
 800501e:	e7fa      	b.n	8005016 <_malloc_r+0x39a>
 8005020:	6810      	ldr	r0, [r2, #0]
 8005022:	3001      	adds	r0, #1
 8005024:	bf1b      	ittet	ne
 8005026:	1ae3      	subne	r3, r4, r3
 8005028:	4473      	addne	r3, lr
 800502a:	6014      	streq	r4, [r2, #0]
 800502c:	f8ca 3000 	strne.w	r3, [sl]
 8005030:	f014 0307 	ands.w	r3, r4, #7
 8005034:	bf1a      	itte	ne
 8005036:	f1c3 0008 	rsbne	r0, r3, #8
 800503a:	1824      	addne	r4, r4, r0
 800503c:	4618      	moveq	r0, r3
 800503e:	1862      	adds	r2, r4, r1
 8005040:	ea02 010c 	and.w	r1, r2, ip
 8005044:	4480      	add	r8, r0
 8005046:	eba8 0801 	sub.w	r8, r8, r1
 800504a:	ea08 080c 	and.w	r8, r8, ip
 800504e:	4641      	mov	r1, r8
 8005050:	4628      	mov	r0, r5
 8005052:	9301      	str	r3, [sp, #4]
 8005054:	9200      	str	r2, [sp, #0]
 8005056:	f000 fd8f 	bl	8005b78 <_sbrk_r>
 800505a:	1c43      	adds	r3, r0, #1
 800505c:	e9dd 2300 	ldrd	r2, r3, [sp]
 8005060:	d105      	bne.n	800506e <_malloc_r+0x3f2>
 8005062:	b32b      	cbz	r3, 80050b0 <_malloc_r+0x434>
 8005064:	f1a3 0008 	sub.w	r0, r3, #8
 8005068:	4410      	add	r0, r2
 800506a:	f04f 0800 	mov.w	r8, #0
 800506e:	f8da 2000 	ldr.w	r2, [sl]
 8005072:	60b4      	str	r4, [r6, #8]
 8005074:	1b00      	subs	r0, r0, r4
 8005076:	4440      	add	r0, r8
 8005078:	4442      	add	r2, r8
 800507a:	f040 0001 	orr.w	r0, r0, #1
 800507e:	45b3      	cmp	fp, r6
 8005080:	f8ca 2000 	str.w	r2, [sl]
 8005084:	6060      	str	r0, [r4, #4]
 8005086:	f43f af27 	beq.w	8004ed8 <_malloc_r+0x25c>
 800508a:	f1b9 0f0f 	cmp.w	r9, #15
 800508e:	d812      	bhi.n	80050b6 <_malloc_r+0x43a>
 8005090:	2301      	movs	r3, #1
 8005092:	6063      	str	r3, [r4, #4]
 8005094:	68b3      	ldr	r3, [r6, #8]
 8005096:	685b      	ldr	r3, [r3, #4]
 8005098:	f023 0303 	bic.w	r3, r3, #3
 800509c:	42bb      	cmp	r3, r7
 800509e:	eba3 0207 	sub.w	r2, r3, r7
 80050a2:	d301      	bcc.n	80050a8 <_malloc_r+0x42c>
 80050a4:	2a0f      	cmp	r2, #15
 80050a6:	dc21      	bgt.n	80050ec <_malloc_r+0x470>
 80050a8:	4628      	mov	r0, r5
 80050aa:	f000 f857 	bl	800515c <__malloc_unlock>
 80050ae:	e5f1      	b.n	8004c94 <_malloc_r+0x18>
 80050b0:	4610      	mov	r0, r2
 80050b2:	4698      	mov	r8, r3
 80050b4:	e7db      	b.n	800506e <_malloc_r+0x3f2>
 80050b6:	f8db 3004 	ldr.w	r3, [fp, #4]
 80050ba:	f1a9 090c 	sub.w	r9, r9, #12
 80050be:	f029 0907 	bic.w	r9, r9, #7
 80050c2:	f003 0301 	and.w	r3, r3, #1
 80050c6:	ea43 0309 	orr.w	r3, r3, r9
 80050ca:	f8cb 3004 	str.w	r3, [fp, #4]
 80050ce:	2205      	movs	r2, #5
 80050d0:	eb0b 0309 	add.w	r3, fp, r9
 80050d4:	f1b9 0f0f 	cmp.w	r9, #15
 80050d8:	e9c3 2201 	strd	r2, r2, [r3, #4]
 80050dc:	f67f aefc 	bls.w	8004ed8 <_malloc_r+0x25c>
 80050e0:	f10b 0108 	add.w	r1, fp, #8
 80050e4:	4628      	mov	r0, r5
 80050e6:	f7ff fb2b 	bl	8004740 <_free_r>
 80050ea:	e6f5      	b.n	8004ed8 <_malloc_r+0x25c>
 80050ec:	68b4      	ldr	r4, [r6, #8]
 80050ee:	f047 0301 	orr.w	r3, r7, #1
 80050f2:	4427      	add	r7, r4
 80050f4:	f042 0201 	orr.w	r2, r2, #1
 80050f8:	6063      	str	r3, [r4, #4]
 80050fa:	60b7      	str	r7, [r6, #8]
 80050fc:	607a      	str	r2, [r7, #4]
 80050fe:	e5ee      	b.n	8004cde <_malloc_r+0x62>

08005100 <memcpy>:
 8005100:	440a      	add	r2, r1
 8005102:	4291      	cmp	r1, r2
 8005104:	f100 33ff 	add.w	r3, r0, #4294967295
 8005108:	d100      	bne.n	800510c <memcpy+0xc>
 800510a:	4770      	bx	lr
 800510c:	b510      	push	{r4, lr}
 800510e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005112:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005116:	4291      	cmp	r1, r2
 8005118:	d1f9      	bne.n	800510e <memcpy+0xe>
 800511a:	bd10      	pop	{r4, pc}

0800511c <memmove>:
 800511c:	4288      	cmp	r0, r1
 800511e:	b510      	push	{r4, lr}
 8005120:	eb01 0402 	add.w	r4, r1, r2
 8005124:	d902      	bls.n	800512c <memmove+0x10>
 8005126:	4284      	cmp	r4, r0
 8005128:	4623      	mov	r3, r4
 800512a:	d807      	bhi.n	800513c <memmove+0x20>
 800512c:	1e43      	subs	r3, r0, #1
 800512e:	42a1      	cmp	r1, r4
 8005130:	d008      	beq.n	8005144 <memmove+0x28>
 8005132:	f811 2b01 	ldrb.w	r2, [r1], #1
 8005136:	f803 2f01 	strb.w	r2, [r3, #1]!
 800513a:	e7f8      	b.n	800512e <memmove+0x12>
 800513c:	4402      	add	r2, r0
 800513e:	4601      	mov	r1, r0
 8005140:	428a      	cmp	r2, r1
 8005142:	d100      	bne.n	8005146 <memmove+0x2a>
 8005144:	bd10      	pop	{r4, pc}
 8005146:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800514a:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800514e:	e7f7      	b.n	8005140 <memmove+0x24>

08005150 <__malloc_lock>:
 8005150:	4801      	ldr	r0, [pc, #4]	; (8005158 <__malloc_lock+0x8>)
 8005152:	f7ff bd25 	b.w	8004ba0 <__retarget_lock_acquire_recursive>
 8005156:	bf00      	nop
 8005158:	20000b0c 	.word	0x20000b0c

0800515c <__malloc_unlock>:
 800515c:	4801      	ldr	r0, [pc, #4]	; (8005164 <__malloc_unlock+0x8>)
 800515e:	f7ff bd20 	b.w	8004ba2 <__retarget_lock_release_recursive>
 8005162:	bf00      	nop
 8005164:	20000b0c 	.word	0x20000b0c

08005168 <_Balloc>:
 8005168:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800516a:	b570      	push	{r4, r5, r6, lr}
 800516c:	4605      	mov	r5, r0
 800516e:	460c      	mov	r4, r1
 8005170:	b17b      	cbz	r3, 8005192 <_Balloc+0x2a>
 8005172:	6ceb      	ldr	r3, [r5, #76]	; 0x4c
 8005174:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
 8005178:	b9a0      	cbnz	r0, 80051a4 <_Balloc+0x3c>
 800517a:	2101      	movs	r1, #1
 800517c:	fa01 f604 	lsl.w	r6, r1, r4
 8005180:	1d72      	adds	r2, r6, #5
 8005182:	0092      	lsls	r2, r2, #2
 8005184:	4628      	mov	r0, r5
 8005186:	f001 facd 	bl	8006724 <_calloc_r>
 800518a:	b148      	cbz	r0, 80051a0 <_Balloc+0x38>
 800518c:	e9c0 4601 	strd	r4, r6, [r0, #4]
 8005190:	e00b      	b.n	80051aa <_Balloc+0x42>
 8005192:	2221      	movs	r2, #33	; 0x21
 8005194:	2104      	movs	r1, #4
 8005196:	f001 fac5 	bl	8006724 <_calloc_r>
 800519a:	64e8      	str	r0, [r5, #76]	; 0x4c
 800519c:	2800      	cmp	r0, #0
 800519e:	d1e8      	bne.n	8005172 <_Balloc+0xa>
 80051a0:	2000      	movs	r0, #0
 80051a2:	bd70      	pop	{r4, r5, r6, pc}
 80051a4:	6802      	ldr	r2, [r0, #0]
 80051a6:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
 80051aa:	2300      	movs	r3, #0
 80051ac:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80051b0:	e7f7      	b.n	80051a2 <_Balloc+0x3a>

080051b2 <_Bfree>:
 80051b2:	b131      	cbz	r1, 80051c2 <_Bfree+0x10>
 80051b4:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 80051b6:	684a      	ldr	r2, [r1, #4]
 80051b8:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80051bc:	6008      	str	r0, [r1, #0]
 80051be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80051c2:	4770      	bx	lr

080051c4 <__multadd>:
 80051c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80051c8:	690e      	ldr	r6, [r1, #16]
 80051ca:	4607      	mov	r7, r0
 80051cc:	4698      	mov	r8, r3
 80051ce:	460c      	mov	r4, r1
 80051d0:	f101 0014 	add.w	r0, r1, #20
 80051d4:	2300      	movs	r3, #0
 80051d6:	6805      	ldr	r5, [r0, #0]
 80051d8:	b2a9      	uxth	r1, r5
 80051da:	fb02 8101 	mla	r1, r2, r1, r8
 80051de:	ea4f 4c11 	mov.w	ip, r1, lsr #16
 80051e2:	0c2d      	lsrs	r5, r5, #16
 80051e4:	fb02 c505 	mla	r5, r2, r5, ip
 80051e8:	b289      	uxth	r1, r1
 80051ea:	3301      	adds	r3, #1
 80051ec:	eb01 4105 	add.w	r1, r1, r5, lsl #16
 80051f0:	429e      	cmp	r6, r3
 80051f2:	f840 1b04 	str.w	r1, [r0], #4
 80051f6:	ea4f 4815 	mov.w	r8, r5, lsr #16
 80051fa:	dcec      	bgt.n	80051d6 <__multadd+0x12>
 80051fc:	f1b8 0f00 	cmp.w	r8, #0
 8005200:	d022      	beq.n	8005248 <__multadd+0x84>
 8005202:	68a3      	ldr	r3, [r4, #8]
 8005204:	42b3      	cmp	r3, r6
 8005206:	dc19      	bgt.n	800523c <__multadd+0x78>
 8005208:	6861      	ldr	r1, [r4, #4]
 800520a:	4638      	mov	r0, r7
 800520c:	3101      	adds	r1, #1
 800520e:	f7ff ffab 	bl	8005168 <_Balloc>
 8005212:	4605      	mov	r5, r0
 8005214:	b928      	cbnz	r0, 8005222 <__multadd+0x5e>
 8005216:	4602      	mov	r2, r0
 8005218:	4b0d      	ldr	r3, [pc, #52]	; (8005250 <__multadd+0x8c>)
 800521a:	480e      	ldr	r0, [pc, #56]	; (8005254 <__multadd+0x90>)
 800521c:	21b5      	movs	r1, #181	; 0xb5
 800521e:	f001 fa63 	bl	80066e8 <__assert_func>
 8005222:	6922      	ldr	r2, [r4, #16]
 8005224:	3202      	adds	r2, #2
 8005226:	f104 010c 	add.w	r1, r4, #12
 800522a:	0092      	lsls	r2, r2, #2
 800522c:	300c      	adds	r0, #12
 800522e:	f7ff ff67 	bl	8005100 <memcpy>
 8005232:	4621      	mov	r1, r4
 8005234:	4638      	mov	r0, r7
 8005236:	f7ff ffbc 	bl	80051b2 <_Bfree>
 800523a:	462c      	mov	r4, r5
 800523c:	eb04 0386 	add.w	r3, r4, r6, lsl #2
 8005240:	3601      	adds	r6, #1
 8005242:	f8c3 8014 	str.w	r8, [r3, #20]
 8005246:	6126      	str	r6, [r4, #16]
 8005248:	4620      	mov	r0, r4
 800524a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800524e:	bf00      	nop
 8005250:	08007281 	.word	0x08007281
 8005254:	080072f1 	.word	0x080072f1

08005258 <__hi0bits>:
 8005258:	0c02      	lsrs	r2, r0, #16
 800525a:	0412      	lsls	r2, r2, #16
 800525c:	4603      	mov	r3, r0
 800525e:	b9ca      	cbnz	r2, 8005294 <__hi0bits+0x3c>
 8005260:	0403      	lsls	r3, r0, #16
 8005262:	2010      	movs	r0, #16
 8005264:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005268:	bf04      	itt	eq
 800526a:	021b      	lsleq	r3, r3, #8
 800526c:	3008      	addeq	r0, #8
 800526e:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005272:	bf04      	itt	eq
 8005274:	011b      	lsleq	r3, r3, #4
 8005276:	3004      	addeq	r0, #4
 8005278:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800527c:	bf04      	itt	eq
 800527e:	009b      	lsleq	r3, r3, #2
 8005280:	3002      	addeq	r0, #2
 8005282:	2b00      	cmp	r3, #0
 8005284:	db05      	blt.n	8005292 <__hi0bits+0x3a>
 8005286:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 800528a:	f100 0001 	add.w	r0, r0, #1
 800528e:	bf08      	it	eq
 8005290:	2020      	moveq	r0, #32
 8005292:	4770      	bx	lr
 8005294:	2000      	movs	r0, #0
 8005296:	e7e5      	b.n	8005264 <__hi0bits+0xc>

08005298 <__lo0bits>:
 8005298:	6803      	ldr	r3, [r0, #0]
 800529a:	4602      	mov	r2, r0
 800529c:	f013 0007 	ands.w	r0, r3, #7
 80052a0:	d00b      	beq.n	80052ba <__lo0bits+0x22>
 80052a2:	07d9      	lsls	r1, r3, #31
 80052a4:	d422      	bmi.n	80052ec <__lo0bits+0x54>
 80052a6:	0798      	lsls	r0, r3, #30
 80052a8:	bf49      	itett	mi
 80052aa:	085b      	lsrmi	r3, r3, #1
 80052ac:	089b      	lsrpl	r3, r3, #2
 80052ae:	2001      	movmi	r0, #1
 80052b0:	6013      	strmi	r3, [r2, #0]
 80052b2:	bf5c      	itt	pl
 80052b4:	6013      	strpl	r3, [r2, #0]
 80052b6:	2002      	movpl	r0, #2
 80052b8:	4770      	bx	lr
 80052ba:	b299      	uxth	r1, r3
 80052bc:	b909      	cbnz	r1, 80052c2 <__lo0bits+0x2a>
 80052be:	0c1b      	lsrs	r3, r3, #16
 80052c0:	2010      	movs	r0, #16
 80052c2:	f013 0fff 	tst.w	r3, #255	; 0xff
 80052c6:	bf04      	itt	eq
 80052c8:	0a1b      	lsreq	r3, r3, #8
 80052ca:	3008      	addeq	r0, #8
 80052cc:	0719      	lsls	r1, r3, #28
 80052ce:	bf04      	itt	eq
 80052d0:	091b      	lsreq	r3, r3, #4
 80052d2:	3004      	addeq	r0, #4
 80052d4:	0799      	lsls	r1, r3, #30
 80052d6:	bf04      	itt	eq
 80052d8:	089b      	lsreq	r3, r3, #2
 80052da:	3002      	addeq	r0, #2
 80052dc:	07d9      	lsls	r1, r3, #31
 80052de:	d403      	bmi.n	80052e8 <__lo0bits+0x50>
 80052e0:	085b      	lsrs	r3, r3, #1
 80052e2:	f100 0001 	add.w	r0, r0, #1
 80052e6:	d003      	beq.n	80052f0 <__lo0bits+0x58>
 80052e8:	6013      	str	r3, [r2, #0]
 80052ea:	4770      	bx	lr
 80052ec:	2000      	movs	r0, #0
 80052ee:	4770      	bx	lr
 80052f0:	2020      	movs	r0, #32
 80052f2:	4770      	bx	lr

080052f4 <__i2b>:
 80052f4:	b510      	push	{r4, lr}
 80052f6:	460c      	mov	r4, r1
 80052f8:	2101      	movs	r1, #1
 80052fa:	f7ff ff35 	bl	8005168 <_Balloc>
 80052fe:	4602      	mov	r2, r0
 8005300:	b928      	cbnz	r0, 800530e <__i2b+0x1a>
 8005302:	4b05      	ldr	r3, [pc, #20]	; (8005318 <__i2b+0x24>)
 8005304:	4805      	ldr	r0, [pc, #20]	; (800531c <__i2b+0x28>)
 8005306:	f44f 71a0 	mov.w	r1, #320	; 0x140
 800530a:	f001 f9ed 	bl	80066e8 <__assert_func>
 800530e:	2301      	movs	r3, #1
 8005310:	6144      	str	r4, [r0, #20]
 8005312:	6103      	str	r3, [r0, #16]
 8005314:	bd10      	pop	{r4, pc}
 8005316:	bf00      	nop
 8005318:	08007281 	.word	0x08007281
 800531c:	080072f1 	.word	0x080072f1

08005320 <__multiply>:
 8005320:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005324:	4614      	mov	r4, r2
 8005326:	690a      	ldr	r2, [r1, #16]
 8005328:	6923      	ldr	r3, [r4, #16]
 800532a:	429a      	cmp	r2, r3
 800532c:	bfb8      	it	lt
 800532e:	460b      	movlt	r3, r1
 8005330:	460d      	mov	r5, r1
 8005332:	bfbc      	itt	lt
 8005334:	4625      	movlt	r5, r4
 8005336:	461c      	movlt	r4, r3
 8005338:	f8d5 a010 	ldr.w	sl, [r5, #16]
 800533c:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8005340:	68ab      	ldr	r3, [r5, #8]
 8005342:	6869      	ldr	r1, [r5, #4]
 8005344:	eb0a 0709 	add.w	r7, sl, r9
 8005348:	42bb      	cmp	r3, r7
 800534a:	b085      	sub	sp, #20
 800534c:	bfb8      	it	lt
 800534e:	3101      	addlt	r1, #1
 8005350:	f7ff ff0a 	bl	8005168 <_Balloc>
 8005354:	b930      	cbnz	r0, 8005364 <__multiply+0x44>
 8005356:	4602      	mov	r2, r0
 8005358:	4b42      	ldr	r3, [pc, #264]	; (8005464 <__multiply+0x144>)
 800535a:	4843      	ldr	r0, [pc, #268]	; (8005468 <__multiply+0x148>)
 800535c:	f240 115d 	movw	r1, #349	; 0x15d
 8005360:	f001 f9c2 	bl	80066e8 <__assert_func>
 8005364:	f100 0614 	add.w	r6, r0, #20
 8005368:	eb06 0887 	add.w	r8, r6, r7, lsl #2
 800536c:	4633      	mov	r3, r6
 800536e:	2200      	movs	r2, #0
 8005370:	4543      	cmp	r3, r8
 8005372:	d31e      	bcc.n	80053b2 <__multiply+0x92>
 8005374:	f105 0c14 	add.w	ip, r5, #20
 8005378:	f104 0314 	add.w	r3, r4, #20
 800537c:	eb0c 0c8a 	add.w	ip, ip, sl, lsl #2
 8005380:	eb03 0289 	add.w	r2, r3, r9, lsl #2
 8005384:	9202      	str	r2, [sp, #8]
 8005386:	ebac 0205 	sub.w	r2, ip, r5
 800538a:	3a15      	subs	r2, #21
 800538c:	f022 0203 	bic.w	r2, r2, #3
 8005390:	3204      	adds	r2, #4
 8005392:	f105 0115 	add.w	r1, r5, #21
 8005396:	458c      	cmp	ip, r1
 8005398:	bf38      	it	cc
 800539a:	2204      	movcc	r2, #4
 800539c:	9201      	str	r2, [sp, #4]
 800539e:	9a02      	ldr	r2, [sp, #8]
 80053a0:	9303      	str	r3, [sp, #12]
 80053a2:	429a      	cmp	r2, r3
 80053a4:	d808      	bhi.n	80053b8 <__multiply+0x98>
 80053a6:	2f00      	cmp	r7, #0
 80053a8:	dc55      	bgt.n	8005456 <__multiply+0x136>
 80053aa:	6107      	str	r7, [r0, #16]
 80053ac:	b005      	add	sp, #20
 80053ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80053b2:	f843 2b04 	str.w	r2, [r3], #4
 80053b6:	e7db      	b.n	8005370 <__multiply+0x50>
 80053b8:	f8b3 a000 	ldrh.w	sl, [r3]
 80053bc:	f1ba 0f00 	cmp.w	sl, #0
 80053c0:	d020      	beq.n	8005404 <__multiply+0xe4>
 80053c2:	f105 0e14 	add.w	lr, r5, #20
 80053c6:	46b1      	mov	r9, r6
 80053c8:	2200      	movs	r2, #0
 80053ca:	f85e 4b04 	ldr.w	r4, [lr], #4
 80053ce:	f8d9 b000 	ldr.w	fp, [r9]
 80053d2:	b2a1      	uxth	r1, r4
 80053d4:	fa1f fb8b 	uxth.w	fp, fp
 80053d8:	fb0a b101 	mla	r1, sl, r1, fp
 80053dc:	4411      	add	r1, r2
 80053de:	f8d9 2000 	ldr.w	r2, [r9]
 80053e2:	0c24      	lsrs	r4, r4, #16
 80053e4:	0c12      	lsrs	r2, r2, #16
 80053e6:	fb0a 2404 	mla	r4, sl, r4, r2
 80053ea:	eb04 4411 	add.w	r4, r4, r1, lsr #16
 80053ee:	b289      	uxth	r1, r1
 80053f0:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 80053f4:	45f4      	cmp	ip, lr
 80053f6:	f849 1b04 	str.w	r1, [r9], #4
 80053fa:	ea4f 4214 	mov.w	r2, r4, lsr #16
 80053fe:	d8e4      	bhi.n	80053ca <__multiply+0xaa>
 8005400:	9901      	ldr	r1, [sp, #4]
 8005402:	5072      	str	r2, [r6, r1]
 8005404:	9a03      	ldr	r2, [sp, #12]
 8005406:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800540a:	3304      	adds	r3, #4
 800540c:	f1b9 0f00 	cmp.w	r9, #0
 8005410:	d01f      	beq.n	8005452 <__multiply+0x132>
 8005412:	6834      	ldr	r4, [r6, #0]
 8005414:	f105 0114 	add.w	r1, r5, #20
 8005418:	46b6      	mov	lr, r6
 800541a:	f04f 0a00 	mov.w	sl, #0
 800541e:	880a      	ldrh	r2, [r1, #0]
 8005420:	f8be b002 	ldrh.w	fp, [lr, #2]
 8005424:	fb09 b202 	mla	r2, r9, r2, fp
 8005428:	4492      	add	sl, r2
 800542a:	b2a4      	uxth	r4, r4
 800542c:	ea44 440a 	orr.w	r4, r4, sl, lsl #16
 8005430:	f84e 4b04 	str.w	r4, [lr], #4
 8005434:	f851 4b04 	ldr.w	r4, [r1], #4
 8005438:	f8be 2000 	ldrh.w	r2, [lr]
 800543c:	0c24      	lsrs	r4, r4, #16
 800543e:	fb09 2404 	mla	r4, r9, r4, r2
 8005442:	eb04 441a 	add.w	r4, r4, sl, lsr #16
 8005446:	458c      	cmp	ip, r1
 8005448:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 800544c:	d8e7      	bhi.n	800541e <__multiply+0xfe>
 800544e:	9a01      	ldr	r2, [sp, #4]
 8005450:	50b4      	str	r4, [r6, r2]
 8005452:	3604      	adds	r6, #4
 8005454:	e7a3      	b.n	800539e <__multiply+0x7e>
 8005456:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800545a:	2b00      	cmp	r3, #0
 800545c:	d1a5      	bne.n	80053aa <__multiply+0x8a>
 800545e:	3f01      	subs	r7, #1
 8005460:	e7a1      	b.n	80053a6 <__multiply+0x86>
 8005462:	bf00      	nop
 8005464:	08007281 	.word	0x08007281
 8005468:	080072f1 	.word	0x080072f1

0800546c <__pow5mult>:
 800546c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005470:	4615      	mov	r5, r2
 8005472:	f012 0203 	ands.w	r2, r2, #3
 8005476:	4606      	mov	r6, r0
 8005478:	460f      	mov	r7, r1
 800547a:	d007      	beq.n	800548c <__pow5mult+0x20>
 800547c:	4c1a      	ldr	r4, [pc, #104]	; (80054e8 <__pow5mult+0x7c>)
 800547e:	3a01      	subs	r2, #1
 8005480:	2300      	movs	r3, #0
 8005482:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8005486:	f7ff fe9d 	bl	80051c4 <__multadd>
 800548a:	4607      	mov	r7, r0
 800548c:	10ad      	asrs	r5, r5, #2
 800548e:	d027      	beq.n	80054e0 <__pow5mult+0x74>
 8005490:	6cb4      	ldr	r4, [r6, #72]	; 0x48
 8005492:	b944      	cbnz	r4, 80054a6 <__pow5mult+0x3a>
 8005494:	f240 2171 	movw	r1, #625	; 0x271
 8005498:	4630      	mov	r0, r6
 800549a:	f7ff ff2b 	bl	80052f4 <__i2b>
 800549e:	2300      	movs	r3, #0
 80054a0:	64b0      	str	r0, [r6, #72]	; 0x48
 80054a2:	4604      	mov	r4, r0
 80054a4:	6003      	str	r3, [r0, #0]
 80054a6:	f04f 0900 	mov.w	r9, #0
 80054aa:	07eb      	lsls	r3, r5, #31
 80054ac:	d50a      	bpl.n	80054c4 <__pow5mult+0x58>
 80054ae:	4639      	mov	r1, r7
 80054b0:	4622      	mov	r2, r4
 80054b2:	4630      	mov	r0, r6
 80054b4:	f7ff ff34 	bl	8005320 <__multiply>
 80054b8:	4639      	mov	r1, r7
 80054ba:	4680      	mov	r8, r0
 80054bc:	4630      	mov	r0, r6
 80054be:	f7ff fe78 	bl	80051b2 <_Bfree>
 80054c2:	4647      	mov	r7, r8
 80054c4:	106d      	asrs	r5, r5, #1
 80054c6:	d00b      	beq.n	80054e0 <__pow5mult+0x74>
 80054c8:	6820      	ldr	r0, [r4, #0]
 80054ca:	b938      	cbnz	r0, 80054dc <__pow5mult+0x70>
 80054cc:	4622      	mov	r2, r4
 80054ce:	4621      	mov	r1, r4
 80054d0:	4630      	mov	r0, r6
 80054d2:	f7ff ff25 	bl	8005320 <__multiply>
 80054d6:	6020      	str	r0, [r4, #0]
 80054d8:	f8c0 9000 	str.w	r9, [r0]
 80054dc:	4604      	mov	r4, r0
 80054de:	e7e4      	b.n	80054aa <__pow5mult+0x3e>
 80054e0:	4638      	mov	r0, r7
 80054e2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80054e6:	bf00      	nop
 80054e8:	08007448 	.word	0x08007448

080054ec <__lshift>:
 80054ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054f0:	460c      	mov	r4, r1
 80054f2:	6849      	ldr	r1, [r1, #4]
 80054f4:	6923      	ldr	r3, [r4, #16]
 80054f6:	eb03 1862 	add.w	r8, r3, r2, asr #5
 80054fa:	68a3      	ldr	r3, [r4, #8]
 80054fc:	4607      	mov	r7, r0
 80054fe:	4691      	mov	r9, r2
 8005500:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005504:	f108 0601 	add.w	r6, r8, #1
 8005508:	42b3      	cmp	r3, r6
 800550a:	db0b      	blt.n	8005524 <__lshift+0x38>
 800550c:	4638      	mov	r0, r7
 800550e:	f7ff fe2b 	bl	8005168 <_Balloc>
 8005512:	4605      	mov	r5, r0
 8005514:	b948      	cbnz	r0, 800552a <__lshift+0x3e>
 8005516:	4602      	mov	r2, r0
 8005518:	4b28      	ldr	r3, [pc, #160]	; (80055bc <__lshift+0xd0>)
 800551a:	4829      	ldr	r0, [pc, #164]	; (80055c0 <__lshift+0xd4>)
 800551c:	f240 11d9 	movw	r1, #473	; 0x1d9
 8005520:	f001 f8e2 	bl	80066e8 <__assert_func>
 8005524:	3101      	adds	r1, #1
 8005526:	005b      	lsls	r3, r3, #1
 8005528:	e7ee      	b.n	8005508 <__lshift+0x1c>
 800552a:	2300      	movs	r3, #0
 800552c:	f100 0114 	add.w	r1, r0, #20
 8005530:	f100 0210 	add.w	r2, r0, #16
 8005534:	4618      	mov	r0, r3
 8005536:	4553      	cmp	r3, sl
 8005538:	db33      	blt.n	80055a2 <__lshift+0xb6>
 800553a:	6920      	ldr	r0, [r4, #16]
 800553c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005540:	f104 0314 	add.w	r3, r4, #20
 8005544:	f019 091f 	ands.w	r9, r9, #31
 8005548:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800554c:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8005550:	d02b      	beq.n	80055aa <__lshift+0xbe>
 8005552:	f1c9 0e20 	rsb	lr, r9, #32
 8005556:	468a      	mov	sl, r1
 8005558:	2200      	movs	r2, #0
 800555a:	6818      	ldr	r0, [r3, #0]
 800555c:	fa00 f009 	lsl.w	r0, r0, r9
 8005560:	4302      	orrs	r2, r0
 8005562:	f84a 2b04 	str.w	r2, [sl], #4
 8005566:	f853 2b04 	ldr.w	r2, [r3], #4
 800556a:	459c      	cmp	ip, r3
 800556c:	fa22 f20e 	lsr.w	r2, r2, lr
 8005570:	d8f3      	bhi.n	800555a <__lshift+0x6e>
 8005572:	ebac 0304 	sub.w	r3, ip, r4
 8005576:	3b15      	subs	r3, #21
 8005578:	f023 0303 	bic.w	r3, r3, #3
 800557c:	3304      	adds	r3, #4
 800557e:	f104 0015 	add.w	r0, r4, #21
 8005582:	4584      	cmp	ip, r0
 8005584:	bf38      	it	cc
 8005586:	2304      	movcc	r3, #4
 8005588:	50ca      	str	r2, [r1, r3]
 800558a:	b10a      	cbz	r2, 8005590 <__lshift+0xa4>
 800558c:	f108 0602 	add.w	r6, r8, #2
 8005590:	3e01      	subs	r6, #1
 8005592:	4638      	mov	r0, r7
 8005594:	612e      	str	r6, [r5, #16]
 8005596:	4621      	mov	r1, r4
 8005598:	f7ff fe0b 	bl	80051b2 <_Bfree>
 800559c:	4628      	mov	r0, r5
 800559e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80055a2:	f842 0f04 	str.w	r0, [r2, #4]!
 80055a6:	3301      	adds	r3, #1
 80055a8:	e7c5      	b.n	8005536 <__lshift+0x4a>
 80055aa:	3904      	subs	r1, #4
 80055ac:	f853 2b04 	ldr.w	r2, [r3], #4
 80055b0:	f841 2f04 	str.w	r2, [r1, #4]!
 80055b4:	459c      	cmp	ip, r3
 80055b6:	d8f9      	bhi.n	80055ac <__lshift+0xc0>
 80055b8:	e7ea      	b.n	8005590 <__lshift+0xa4>
 80055ba:	bf00      	nop
 80055bc:	08007281 	.word	0x08007281
 80055c0:	080072f1 	.word	0x080072f1

080055c4 <__mcmp>:
 80055c4:	690a      	ldr	r2, [r1, #16]
 80055c6:	4603      	mov	r3, r0
 80055c8:	6900      	ldr	r0, [r0, #16]
 80055ca:	1a80      	subs	r0, r0, r2
 80055cc:	b530      	push	{r4, r5, lr}
 80055ce:	d10d      	bne.n	80055ec <__mcmp+0x28>
 80055d0:	3314      	adds	r3, #20
 80055d2:	3114      	adds	r1, #20
 80055d4:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 80055d8:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 80055dc:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 80055e0:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 80055e4:	4295      	cmp	r5, r2
 80055e6:	d002      	beq.n	80055ee <__mcmp+0x2a>
 80055e8:	d304      	bcc.n	80055f4 <__mcmp+0x30>
 80055ea:	2001      	movs	r0, #1
 80055ec:	bd30      	pop	{r4, r5, pc}
 80055ee:	42a3      	cmp	r3, r4
 80055f0:	d3f4      	bcc.n	80055dc <__mcmp+0x18>
 80055f2:	e7fb      	b.n	80055ec <__mcmp+0x28>
 80055f4:	f04f 30ff 	mov.w	r0, #4294967295
 80055f8:	e7f8      	b.n	80055ec <__mcmp+0x28>
	...

080055fc <__mdiff>:
 80055fc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005600:	460c      	mov	r4, r1
 8005602:	4606      	mov	r6, r0
 8005604:	4611      	mov	r1, r2
 8005606:	4620      	mov	r0, r4
 8005608:	4617      	mov	r7, r2
 800560a:	f7ff ffdb 	bl	80055c4 <__mcmp>
 800560e:	1e05      	subs	r5, r0, #0
 8005610:	d111      	bne.n	8005636 <__mdiff+0x3a>
 8005612:	4629      	mov	r1, r5
 8005614:	4630      	mov	r0, r6
 8005616:	f7ff fda7 	bl	8005168 <_Balloc>
 800561a:	4602      	mov	r2, r0
 800561c:	b928      	cbnz	r0, 800562a <__mdiff+0x2e>
 800561e:	4b3a      	ldr	r3, [pc, #232]	; (8005708 <__mdiff+0x10c>)
 8005620:	f240 2132 	movw	r1, #562	; 0x232
 8005624:	4839      	ldr	r0, [pc, #228]	; (800570c <__mdiff+0x110>)
 8005626:	f001 f85f 	bl	80066e8 <__assert_func>
 800562a:	2301      	movs	r3, #1
 800562c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8005630:	4610      	mov	r0, r2
 8005632:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005636:	bfa4      	itt	ge
 8005638:	463b      	movge	r3, r7
 800563a:	4627      	movge	r7, r4
 800563c:	4630      	mov	r0, r6
 800563e:	6879      	ldr	r1, [r7, #4]
 8005640:	bfa6      	itte	ge
 8005642:	461c      	movge	r4, r3
 8005644:	2500      	movge	r5, #0
 8005646:	2501      	movlt	r5, #1
 8005648:	f7ff fd8e 	bl	8005168 <_Balloc>
 800564c:	4602      	mov	r2, r0
 800564e:	b918      	cbnz	r0, 8005658 <__mdiff+0x5c>
 8005650:	4b2d      	ldr	r3, [pc, #180]	; (8005708 <__mdiff+0x10c>)
 8005652:	f44f 7110 	mov.w	r1, #576	; 0x240
 8005656:	e7e5      	b.n	8005624 <__mdiff+0x28>
 8005658:	693e      	ldr	r6, [r7, #16]
 800565a:	60c5      	str	r5, [r0, #12]
 800565c:	6925      	ldr	r5, [r4, #16]
 800565e:	f107 0114 	add.w	r1, r7, #20
 8005662:	f100 0e14 	add.w	lr, r0, #20
 8005666:	f104 0914 	add.w	r9, r4, #20
 800566a:	f107 0010 	add.w	r0, r7, #16
 800566e:	eb01 0c86 	add.w	ip, r1, r6, lsl #2
 8005672:	eb09 0585 	add.w	r5, r9, r5, lsl #2
 8005676:	46f2      	mov	sl, lr
 8005678:	2700      	movs	r7, #0
 800567a:	f859 3b04 	ldr.w	r3, [r9], #4
 800567e:	f850 bf04 	ldr.w	fp, [r0, #4]!
 8005682:	fa1f f883 	uxth.w	r8, r3
 8005686:	fa17 f78b 	uxtah	r7, r7, fp
 800568a:	0c1b      	lsrs	r3, r3, #16
 800568c:	eba7 0808 	sub.w	r8, r7, r8
 8005690:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8005694:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8005698:	fa1f f888 	uxth.w	r8, r8
 800569c:	141f      	asrs	r7, r3, #16
 800569e:	454d      	cmp	r5, r9
 80056a0:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 80056a4:	f84a 3b04 	str.w	r3, [sl], #4
 80056a8:	d8e7      	bhi.n	800567a <__mdiff+0x7e>
 80056aa:	1b2b      	subs	r3, r5, r4
 80056ac:	3b15      	subs	r3, #21
 80056ae:	f023 0303 	bic.w	r3, r3, #3
 80056b2:	3304      	adds	r3, #4
 80056b4:	3415      	adds	r4, #21
 80056b6:	42a5      	cmp	r5, r4
 80056b8:	bf38      	it	cc
 80056ba:	2304      	movcc	r3, #4
 80056bc:	4419      	add	r1, r3
 80056be:	4473      	add	r3, lr
 80056c0:	469e      	mov	lr, r3
 80056c2:	460d      	mov	r5, r1
 80056c4:	4565      	cmp	r5, ip
 80056c6:	d30e      	bcc.n	80056e6 <__mdiff+0xea>
 80056c8:	f10c 0003 	add.w	r0, ip, #3
 80056cc:	1a40      	subs	r0, r0, r1
 80056ce:	f020 0003 	bic.w	r0, r0, #3
 80056d2:	3903      	subs	r1, #3
 80056d4:	458c      	cmp	ip, r1
 80056d6:	bf38      	it	cc
 80056d8:	2000      	movcc	r0, #0
 80056da:	4418      	add	r0, r3
 80056dc:	f850 3d04 	ldr.w	r3, [r0, #-4]!
 80056e0:	b17b      	cbz	r3, 8005702 <__mdiff+0x106>
 80056e2:	6116      	str	r6, [r2, #16]
 80056e4:	e7a4      	b.n	8005630 <__mdiff+0x34>
 80056e6:	f855 8b04 	ldr.w	r8, [r5], #4
 80056ea:	fa17 f488 	uxtah	r4, r7, r8
 80056ee:	1420      	asrs	r0, r4, #16
 80056f0:	eb00 4018 	add.w	r0, r0, r8, lsr #16
 80056f4:	b2a4      	uxth	r4, r4
 80056f6:	ea44 4400 	orr.w	r4, r4, r0, lsl #16
 80056fa:	f84e 4b04 	str.w	r4, [lr], #4
 80056fe:	1407      	asrs	r7, r0, #16
 8005700:	e7e0      	b.n	80056c4 <__mdiff+0xc8>
 8005702:	3e01      	subs	r6, #1
 8005704:	e7ea      	b.n	80056dc <__mdiff+0xe0>
 8005706:	bf00      	nop
 8005708:	08007281 	.word	0x08007281
 800570c:	080072f1 	.word	0x080072f1

08005710 <__d2b>:
 8005710:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005714:	2101      	movs	r1, #1
 8005716:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800571a:	4690      	mov	r8, r2
 800571c:	461d      	mov	r5, r3
 800571e:	f7ff fd23 	bl	8005168 <_Balloc>
 8005722:	4604      	mov	r4, r0
 8005724:	b930      	cbnz	r0, 8005734 <__d2b+0x24>
 8005726:	4602      	mov	r2, r0
 8005728:	4b25      	ldr	r3, [pc, #148]	; (80057c0 <__d2b+0xb0>)
 800572a:	4826      	ldr	r0, [pc, #152]	; (80057c4 <__d2b+0xb4>)
 800572c:	f240 310a 	movw	r1, #778	; 0x30a
 8005730:	f000 ffda 	bl	80066e8 <__assert_func>
 8005734:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8005738:	f3c5 550a 	ubfx	r5, r5, #20, #11
 800573c:	bb2d      	cbnz	r5, 800578a <__d2b+0x7a>
 800573e:	9301      	str	r3, [sp, #4]
 8005740:	f1b8 0300 	subs.w	r3, r8, #0
 8005744:	d026      	beq.n	8005794 <__d2b+0x84>
 8005746:	4668      	mov	r0, sp
 8005748:	9300      	str	r3, [sp, #0]
 800574a:	f7ff fda5 	bl	8005298 <__lo0bits>
 800574e:	9900      	ldr	r1, [sp, #0]
 8005750:	b1f0      	cbz	r0, 8005790 <__d2b+0x80>
 8005752:	9a01      	ldr	r2, [sp, #4]
 8005754:	f1c0 0320 	rsb	r3, r0, #32
 8005758:	fa02 f303 	lsl.w	r3, r2, r3
 800575c:	430b      	orrs	r3, r1
 800575e:	40c2      	lsrs	r2, r0
 8005760:	6163      	str	r3, [r4, #20]
 8005762:	9201      	str	r2, [sp, #4]
 8005764:	9b01      	ldr	r3, [sp, #4]
 8005766:	61a3      	str	r3, [r4, #24]
 8005768:	2b00      	cmp	r3, #0
 800576a:	bf14      	ite	ne
 800576c:	2102      	movne	r1, #2
 800576e:	2101      	moveq	r1, #1
 8005770:	6121      	str	r1, [r4, #16]
 8005772:	b1c5      	cbz	r5, 80057a6 <__d2b+0x96>
 8005774:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 8005778:	4405      	add	r5, r0
 800577a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800577e:	603d      	str	r5, [r7, #0]
 8005780:	6030      	str	r0, [r6, #0]
 8005782:	4620      	mov	r0, r4
 8005784:	b002      	add	sp, #8
 8005786:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800578a:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800578e:	e7d6      	b.n	800573e <__d2b+0x2e>
 8005790:	6161      	str	r1, [r4, #20]
 8005792:	e7e7      	b.n	8005764 <__d2b+0x54>
 8005794:	a801      	add	r0, sp, #4
 8005796:	f7ff fd7f 	bl	8005298 <__lo0bits>
 800579a:	9b01      	ldr	r3, [sp, #4]
 800579c:	6163      	str	r3, [r4, #20]
 800579e:	2101      	movs	r1, #1
 80057a0:	6121      	str	r1, [r4, #16]
 80057a2:	3020      	adds	r0, #32
 80057a4:	e7e5      	b.n	8005772 <__d2b+0x62>
 80057a6:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 80057aa:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80057ae:	6038      	str	r0, [r7, #0]
 80057b0:	6918      	ldr	r0, [r3, #16]
 80057b2:	f7ff fd51 	bl	8005258 <__hi0bits>
 80057b6:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 80057ba:	6031      	str	r1, [r6, #0]
 80057bc:	e7e1      	b.n	8005782 <__d2b+0x72>
 80057be:	bf00      	nop
 80057c0:	08007281 	.word	0x08007281
 80057c4:	080072f1 	.word	0x080072f1

080057c8 <_realloc_r>:
 80057c8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057cc:	460c      	mov	r4, r1
 80057ce:	4681      	mov	r9, r0
 80057d0:	4611      	mov	r1, r2
 80057d2:	b924      	cbnz	r4, 80057de <_realloc_r+0x16>
 80057d4:	b003      	add	sp, #12
 80057d6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80057da:	f7ff ba4f 	b.w	8004c7c <_malloc_r>
 80057de:	9201      	str	r2, [sp, #4]
 80057e0:	f7ff fcb6 	bl	8005150 <__malloc_lock>
 80057e4:	9901      	ldr	r1, [sp, #4]
 80057e6:	f101 080b 	add.w	r8, r1, #11
 80057ea:	f1b8 0f16 	cmp.w	r8, #22
 80057ee:	d90b      	bls.n	8005808 <_realloc_r+0x40>
 80057f0:	f038 0807 	bics.w	r8, r8, #7
 80057f4:	d50a      	bpl.n	800580c <_realloc_r+0x44>
 80057f6:	230c      	movs	r3, #12
 80057f8:	f8c9 3000 	str.w	r3, [r9]
 80057fc:	f04f 0b00 	mov.w	fp, #0
 8005800:	4658      	mov	r0, fp
 8005802:	b003      	add	sp, #12
 8005804:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005808:	f04f 0810 	mov.w	r8, #16
 800580c:	4588      	cmp	r8, r1
 800580e:	d3f2      	bcc.n	80057f6 <_realloc_r+0x2e>
 8005810:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8005814:	f025 0603 	bic.w	r6, r5, #3
 8005818:	45b0      	cmp	r8, r6
 800581a:	f1a4 0a08 	sub.w	sl, r4, #8
 800581e:	f340 816e 	ble.w	8005afe <_realloc_r+0x336>
 8005822:	48a8      	ldr	r0, [pc, #672]	; (8005ac4 <_realloc_r+0x2fc>)
 8005824:	9001      	str	r0, [sp, #4]
 8005826:	f8d0 c008 	ldr.w	ip, [r0, #8]
 800582a:	eb0a 0306 	add.w	r3, sl, r6
 800582e:	459c      	cmp	ip, r3
 8005830:	685a      	ldr	r2, [r3, #4]
 8005832:	d005      	beq.n	8005840 <_realloc_r+0x78>
 8005834:	f022 0001 	bic.w	r0, r2, #1
 8005838:	4418      	add	r0, r3
 800583a:	6840      	ldr	r0, [r0, #4]
 800583c:	07c7      	lsls	r7, r0, #31
 800583e:	d427      	bmi.n	8005890 <_realloc_r+0xc8>
 8005840:	f022 0203 	bic.w	r2, r2, #3
 8005844:	459c      	cmp	ip, r3
 8005846:	eb06 0702 	add.w	r7, r6, r2
 800584a:	d119      	bne.n	8005880 <_realloc_r+0xb8>
 800584c:	f108 0010 	add.w	r0, r8, #16
 8005850:	42b8      	cmp	r0, r7
 8005852:	dc1f      	bgt.n	8005894 <_realloc_r+0xcc>
 8005854:	eb0a 0308 	add.w	r3, sl, r8
 8005858:	9a01      	ldr	r2, [sp, #4]
 800585a:	eba7 0708 	sub.w	r7, r7, r8
 800585e:	f047 0701 	orr.w	r7, r7, #1
 8005862:	6093      	str	r3, [r2, #8]
 8005864:	605f      	str	r7, [r3, #4]
 8005866:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800586a:	f003 0301 	and.w	r3, r3, #1
 800586e:	ea43 0308 	orr.w	r3, r3, r8
 8005872:	f844 3c04 	str.w	r3, [r4, #-4]
 8005876:	4648      	mov	r0, r9
 8005878:	f7ff fc70 	bl	800515c <__malloc_unlock>
 800587c:	46a3      	mov	fp, r4
 800587e:	e7bf      	b.n	8005800 <_realloc_r+0x38>
 8005880:	45b8      	cmp	r8, r7
 8005882:	dc07      	bgt.n	8005894 <_realloc_r+0xcc>
 8005884:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 8005888:	60da      	str	r2, [r3, #12]
 800588a:	6093      	str	r3, [r2, #8]
 800588c:	4655      	mov	r5, sl
 800588e:	e07f      	b.n	8005990 <_realloc_r+0x1c8>
 8005890:	2200      	movs	r2, #0
 8005892:	4613      	mov	r3, r2
 8005894:	07e8      	lsls	r0, r5, #31
 8005896:	f100 80e5 	bmi.w	8005a64 <_realloc_r+0x29c>
 800589a:	f854 5c08 	ldr.w	r5, [r4, #-8]
 800589e:	ebaa 0505 	sub.w	r5, sl, r5
 80058a2:	6868      	ldr	r0, [r5, #4]
 80058a4:	f020 0003 	bic.w	r0, r0, #3
 80058a8:	eb00 0b06 	add.w	fp, r0, r6
 80058ac:	2b00      	cmp	r3, #0
 80058ae:	f000 80a5 	beq.w	80059fc <_realloc_r+0x234>
 80058b2:	459c      	cmp	ip, r3
 80058b4:	eb02 070b 	add.w	r7, r2, fp
 80058b8:	d14a      	bne.n	8005950 <_realloc_r+0x188>
 80058ba:	f108 0310 	add.w	r3, r8, #16
 80058be:	42bb      	cmp	r3, r7
 80058c0:	f300 809c 	bgt.w	80059fc <_realloc_r+0x234>
 80058c4:	46ab      	mov	fp, r5
 80058c6:	68eb      	ldr	r3, [r5, #12]
 80058c8:	f85b 2f08 	ldr.w	r2, [fp, #8]!
 80058cc:	60d3      	str	r3, [r2, #12]
 80058ce:	609a      	str	r2, [r3, #8]
 80058d0:	1f32      	subs	r2, r6, #4
 80058d2:	2a24      	cmp	r2, #36	; 0x24
 80058d4:	d837      	bhi.n	8005946 <_realloc_r+0x17e>
 80058d6:	2a13      	cmp	r2, #19
 80058d8:	d933      	bls.n	8005942 <_realloc_r+0x17a>
 80058da:	6823      	ldr	r3, [r4, #0]
 80058dc:	60ab      	str	r3, [r5, #8]
 80058de:	6863      	ldr	r3, [r4, #4]
 80058e0:	60eb      	str	r3, [r5, #12]
 80058e2:	2a1b      	cmp	r2, #27
 80058e4:	d81b      	bhi.n	800591e <_realloc_r+0x156>
 80058e6:	3408      	adds	r4, #8
 80058e8:	f105 0310 	add.w	r3, r5, #16
 80058ec:	6822      	ldr	r2, [r4, #0]
 80058ee:	601a      	str	r2, [r3, #0]
 80058f0:	6862      	ldr	r2, [r4, #4]
 80058f2:	605a      	str	r2, [r3, #4]
 80058f4:	68a2      	ldr	r2, [r4, #8]
 80058f6:	609a      	str	r2, [r3, #8]
 80058f8:	eb05 0308 	add.w	r3, r5, r8
 80058fc:	9a01      	ldr	r2, [sp, #4]
 80058fe:	eba7 0708 	sub.w	r7, r7, r8
 8005902:	f047 0701 	orr.w	r7, r7, #1
 8005906:	6093      	str	r3, [r2, #8]
 8005908:	605f      	str	r7, [r3, #4]
 800590a:	686b      	ldr	r3, [r5, #4]
 800590c:	f003 0301 	and.w	r3, r3, #1
 8005910:	ea43 0308 	orr.w	r3, r3, r8
 8005914:	606b      	str	r3, [r5, #4]
 8005916:	4648      	mov	r0, r9
 8005918:	f7ff fc20 	bl	800515c <__malloc_unlock>
 800591c:	e770      	b.n	8005800 <_realloc_r+0x38>
 800591e:	68a3      	ldr	r3, [r4, #8]
 8005920:	612b      	str	r3, [r5, #16]
 8005922:	68e3      	ldr	r3, [r4, #12]
 8005924:	616b      	str	r3, [r5, #20]
 8005926:	2a24      	cmp	r2, #36	; 0x24
 8005928:	bf01      	itttt	eq
 800592a:	6923      	ldreq	r3, [r4, #16]
 800592c:	61ab      	streq	r3, [r5, #24]
 800592e:	6962      	ldreq	r2, [r4, #20]
 8005930:	61ea      	streq	r2, [r5, #28]
 8005932:	bf19      	ittee	ne
 8005934:	3410      	addne	r4, #16
 8005936:	f105 0318 	addne.w	r3, r5, #24
 800593a:	f105 0320 	addeq.w	r3, r5, #32
 800593e:	3418      	addeq	r4, #24
 8005940:	e7d4      	b.n	80058ec <_realloc_r+0x124>
 8005942:	465b      	mov	r3, fp
 8005944:	e7d2      	b.n	80058ec <_realloc_r+0x124>
 8005946:	4621      	mov	r1, r4
 8005948:	4658      	mov	r0, fp
 800594a:	f7ff fbe7 	bl	800511c <memmove>
 800594e:	e7d3      	b.n	80058f8 <_realloc_r+0x130>
 8005950:	45b8      	cmp	r8, r7
 8005952:	dc53      	bgt.n	80059fc <_realloc_r+0x234>
 8005954:	e9d3 3202 	ldrd	r3, r2, [r3, #8]
 8005958:	4628      	mov	r0, r5
 800595a:	60da      	str	r2, [r3, #12]
 800595c:	6093      	str	r3, [r2, #8]
 800595e:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8005962:	68eb      	ldr	r3, [r5, #12]
 8005964:	60d3      	str	r3, [r2, #12]
 8005966:	609a      	str	r2, [r3, #8]
 8005968:	1f32      	subs	r2, r6, #4
 800596a:	2a24      	cmp	r2, #36	; 0x24
 800596c:	d842      	bhi.n	80059f4 <_realloc_r+0x22c>
 800596e:	2a13      	cmp	r2, #19
 8005970:	d908      	bls.n	8005984 <_realloc_r+0x1bc>
 8005972:	6823      	ldr	r3, [r4, #0]
 8005974:	60ab      	str	r3, [r5, #8]
 8005976:	6863      	ldr	r3, [r4, #4]
 8005978:	60eb      	str	r3, [r5, #12]
 800597a:	2a1b      	cmp	r2, #27
 800597c:	d828      	bhi.n	80059d0 <_realloc_r+0x208>
 800597e:	3408      	adds	r4, #8
 8005980:	f105 0010 	add.w	r0, r5, #16
 8005984:	6823      	ldr	r3, [r4, #0]
 8005986:	6003      	str	r3, [r0, #0]
 8005988:	6863      	ldr	r3, [r4, #4]
 800598a:	6043      	str	r3, [r0, #4]
 800598c:	68a3      	ldr	r3, [r4, #8]
 800598e:	6083      	str	r3, [r0, #8]
 8005990:	686a      	ldr	r2, [r5, #4]
 8005992:	eba7 0008 	sub.w	r0, r7, r8
 8005996:	280f      	cmp	r0, #15
 8005998:	f002 0201 	and.w	r2, r2, #1
 800599c:	eb05 0307 	add.w	r3, r5, r7
 80059a0:	f240 80af 	bls.w	8005b02 <_realloc_r+0x33a>
 80059a4:	eb05 0108 	add.w	r1, r5, r8
 80059a8:	ea48 0202 	orr.w	r2, r8, r2
 80059ac:	f040 0001 	orr.w	r0, r0, #1
 80059b0:	606a      	str	r2, [r5, #4]
 80059b2:	6048      	str	r0, [r1, #4]
 80059b4:	685a      	ldr	r2, [r3, #4]
 80059b6:	f042 0201 	orr.w	r2, r2, #1
 80059ba:	605a      	str	r2, [r3, #4]
 80059bc:	3108      	adds	r1, #8
 80059be:	4648      	mov	r0, r9
 80059c0:	f7fe febe 	bl	8004740 <_free_r>
 80059c4:	4648      	mov	r0, r9
 80059c6:	f7ff fbc9 	bl	800515c <__malloc_unlock>
 80059ca:	f105 0b08 	add.w	fp, r5, #8
 80059ce:	e717      	b.n	8005800 <_realloc_r+0x38>
 80059d0:	68a3      	ldr	r3, [r4, #8]
 80059d2:	612b      	str	r3, [r5, #16]
 80059d4:	68e3      	ldr	r3, [r4, #12]
 80059d6:	616b      	str	r3, [r5, #20]
 80059d8:	2a24      	cmp	r2, #36	; 0x24
 80059da:	bf01      	itttt	eq
 80059dc:	6923      	ldreq	r3, [r4, #16]
 80059de:	61ab      	streq	r3, [r5, #24]
 80059e0:	6963      	ldreq	r3, [r4, #20]
 80059e2:	61eb      	streq	r3, [r5, #28]
 80059e4:	bf19      	ittee	ne
 80059e6:	3410      	addne	r4, #16
 80059e8:	f105 0018 	addne.w	r0, r5, #24
 80059ec:	f105 0020 	addeq.w	r0, r5, #32
 80059f0:	3418      	addeq	r4, #24
 80059f2:	e7c7      	b.n	8005984 <_realloc_r+0x1bc>
 80059f4:	4621      	mov	r1, r4
 80059f6:	f7ff fb91 	bl	800511c <memmove>
 80059fa:	e7c9      	b.n	8005990 <_realloc_r+0x1c8>
 80059fc:	45d8      	cmp	r8, fp
 80059fe:	dc31      	bgt.n	8005a64 <_realloc_r+0x29c>
 8005a00:	4628      	mov	r0, r5
 8005a02:	68eb      	ldr	r3, [r5, #12]
 8005a04:	f850 2f08 	ldr.w	r2, [r0, #8]!
 8005a08:	60d3      	str	r3, [r2, #12]
 8005a0a:	609a      	str	r2, [r3, #8]
 8005a0c:	1f32      	subs	r2, r6, #4
 8005a0e:	2a24      	cmp	r2, #36	; 0x24
 8005a10:	d824      	bhi.n	8005a5c <_realloc_r+0x294>
 8005a12:	2a13      	cmp	r2, #19
 8005a14:	d908      	bls.n	8005a28 <_realloc_r+0x260>
 8005a16:	6823      	ldr	r3, [r4, #0]
 8005a18:	60ab      	str	r3, [r5, #8]
 8005a1a:	6863      	ldr	r3, [r4, #4]
 8005a1c:	60eb      	str	r3, [r5, #12]
 8005a1e:	2a1b      	cmp	r2, #27
 8005a20:	d80a      	bhi.n	8005a38 <_realloc_r+0x270>
 8005a22:	3408      	adds	r4, #8
 8005a24:	f105 0010 	add.w	r0, r5, #16
 8005a28:	6823      	ldr	r3, [r4, #0]
 8005a2a:	6003      	str	r3, [r0, #0]
 8005a2c:	6863      	ldr	r3, [r4, #4]
 8005a2e:	6043      	str	r3, [r0, #4]
 8005a30:	68a3      	ldr	r3, [r4, #8]
 8005a32:	6083      	str	r3, [r0, #8]
 8005a34:	465f      	mov	r7, fp
 8005a36:	e7ab      	b.n	8005990 <_realloc_r+0x1c8>
 8005a38:	68a3      	ldr	r3, [r4, #8]
 8005a3a:	612b      	str	r3, [r5, #16]
 8005a3c:	68e3      	ldr	r3, [r4, #12]
 8005a3e:	616b      	str	r3, [r5, #20]
 8005a40:	2a24      	cmp	r2, #36	; 0x24
 8005a42:	bf01      	itttt	eq
 8005a44:	6923      	ldreq	r3, [r4, #16]
 8005a46:	61ab      	streq	r3, [r5, #24]
 8005a48:	6963      	ldreq	r3, [r4, #20]
 8005a4a:	61eb      	streq	r3, [r5, #28]
 8005a4c:	bf19      	ittee	ne
 8005a4e:	3410      	addne	r4, #16
 8005a50:	f105 0018 	addne.w	r0, r5, #24
 8005a54:	f105 0020 	addeq.w	r0, r5, #32
 8005a58:	3418      	addeq	r4, #24
 8005a5a:	e7e5      	b.n	8005a28 <_realloc_r+0x260>
 8005a5c:	4621      	mov	r1, r4
 8005a5e:	f7ff fb5d 	bl	800511c <memmove>
 8005a62:	e7e7      	b.n	8005a34 <_realloc_r+0x26c>
 8005a64:	4648      	mov	r0, r9
 8005a66:	f7ff f909 	bl	8004c7c <_malloc_r>
 8005a6a:	4683      	mov	fp, r0
 8005a6c:	2800      	cmp	r0, #0
 8005a6e:	f43f af52 	beq.w	8005916 <_realloc_r+0x14e>
 8005a72:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005a76:	f023 0301 	bic.w	r3, r3, #1
 8005a7a:	4453      	add	r3, sl
 8005a7c:	f1a0 0208 	sub.w	r2, r0, #8
 8005a80:	4293      	cmp	r3, r2
 8005a82:	d105      	bne.n	8005a90 <_realloc_r+0x2c8>
 8005a84:	f850 7c04 	ldr.w	r7, [r0, #-4]
 8005a88:	f027 0703 	bic.w	r7, r7, #3
 8005a8c:	4437      	add	r7, r6
 8005a8e:	e6fd      	b.n	800588c <_realloc_r+0xc4>
 8005a90:	1f32      	subs	r2, r6, #4
 8005a92:	2a24      	cmp	r2, #36	; 0x24
 8005a94:	d82f      	bhi.n	8005af6 <_realloc_r+0x32e>
 8005a96:	2a13      	cmp	r2, #19
 8005a98:	d92a      	bls.n	8005af0 <_realloc_r+0x328>
 8005a9a:	6823      	ldr	r3, [r4, #0]
 8005a9c:	6003      	str	r3, [r0, #0]
 8005a9e:	6863      	ldr	r3, [r4, #4]
 8005aa0:	6043      	str	r3, [r0, #4]
 8005aa2:	2a1b      	cmp	r2, #27
 8005aa4:	d810      	bhi.n	8005ac8 <_realloc_r+0x300>
 8005aa6:	f104 0208 	add.w	r2, r4, #8
 8005aaa:	f100 0308 	add.w	r3, r0, #8
 8005aae:	6811      	ldr	r1, [r2, #0]
 8005ab0:	6019      	str	r1, [r3, #0]
 8005ab2:	6851      	ldr	r1, [r2, #4]
 8005ab4:	6059      	str	r1, [r3, #4]
 8005ab6:	6892      	ldr	r2, [r2, #8]
 8005ab8:	609a      	str	r2, [r3, #8]
 8005aba:	4621      	mov	r1, r4
 8005abc:	4648      	mov	r0, r9
 8005abe:	f7fe fe3f 	bl	8004740 <_free_r>
 8005ac2:	e728      	b.n	8005916 <_realloc_r+0x14e>
 8005ac4:	20000444 	.word	0x20000444
 8005ac8:	68a3      	ldr	r3, [r4, #8]
 8005aca:	6083      	str	r3, [r0, #8]
 8005acc:	68e3      	ldr	r3, [r4, #12]
 8005ace:	60c3      	str	r3, [r0, #12]
 8005ad0:	2a24      	cmp	r2, #36	; 0x24
 8005ad2:	bf01      	itttt	eq
 8005ad4:	6923      	ldreq	r3, [r4, #16]
 8005ad6:	6103      	streq	r3, [r0, #16]
 8005ad8:	6961      	ldreq	r1, [r4, #20]
 8005ada:	6141      	streq	r1, [r0, #20]
 8005adc:	bf19      	ittee	ne
 8005ade:	f104 0210 	addne.w	r2, r4, #16
 8005ae2:	f100 0310 	addne.w	r3, r0, #16
 8005ae6:	f104 0218 	addeq.w	r2, r4, #24
 8005aea:	f100 0318 	addeq.w	r3, r0, #24
 8005aee:	e7de      	b.n	8005aae <_realloc_r+0x2e6>
 8005af0:	4603      	mov	r3, r0
 8005af2:	4622      	mov	r2, r4
 8005af4:	e7db      	b.n	8005aae <_realloc_r+0x2e6>
 8005af6:	4621      	mov	r1, r4
 8005af8:	f7ff fb10 	bl	800511c <memmove>
 8005afc:	e7dd      	b.n	8005aba <_realloc_r+0x2f2>
 8005afe:	4637      	mov	r7, r6
 8005b00:	e6c4      	b.n	800588c <_realloc_r+0xc4>
 8005b02:	4317      	orrs	r7, r2
 8005b04:	606f      	str	r7, [r5, #4]
 8005b06:	685a      	ldr	r2, [r3, #4]
 8005b08:	f042 0201 	orr.w	r2, r2, #1
 8005b0c:	605a      	str	r2, [r3, #4]
 8005b0e:	e759      	b.n	80059c4 <_realloc_r+0x1fc>

08005b10 <frexp>:
 8005b10:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005b12:	4617      	mov	r7, r2
 8005b14:	2200      	movs	r2, #0
 8005b16:	603a      	str	r2, [r7, #0]
 8005b18:	4a14      	ldr	r2, [pc, #80]	; (8005b6c <frexp+0x5c>)
 8005b1a:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8005b1e:	4296      	cmp	r6, r2
 8005b20:	4604      	mov	r4, r0
 8005b22:	460d      	mov	r5, r1
 8005b24:	460b      	mov	r3, r1
 8005b26:	dc1e      	bgt.n	8005b66 <frexp+0x56>
 8005b28:	4602      	mov	r2, r0
 8005b2a:	4332      	orrs	r2, r6
 8005b2c:	d01b      	beq.n	8005b66 <frexp+0x56>
 8005b2e:	4a10      	ldr	r2, [pc, #64]	; (8005b70 <frexp+0x60>)
 8005b30:	400a      	ands	r2, r1
 8005b32:	b952      	cbnz	r2, 8005b4a <frexp+0x3a>
 8005b34:	4b0f      	ldr	r3, [pc, #60]	; (8005b74 <frexp+0x64>)
 8005b36:	2200      	movs	r2, #0
 8005b38:	f7fa fd6e 	bl	8000618 <__aeabi_dmul>
 8005b3c:	f06f 0235 	mvn.w	r2, #53	; 0x35
 8005b40:	4604      	mov	r4, r0
 8005b42:	460b      	mov	r3, r1
 8005b44:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8005b48:	603a      	str	r2, [r7, #0]
 8005b4a:	683a      	ldr	r2, [r7, #0]
 8005b4c:	1536      	asrs	r6, r6, #20
 8005b4e:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8005b52:	f2a6 36fe 	subw	r6, r6, #1022	; 0x3fe
 8005b56:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8005b5a:	4416      	add	r6, r2
 8005b5c:	f043 557f 	orr.w	r5, r3, #1069547520	; 0x3fc00000
 8005b60:	603e      	str	r6, [r7, #0]
 8005b62:	f445 1500 	orr.w	r5, r5, #2097152	; 0x200000
 8005b66:	4620      	mov	r0, r4
 8005b68:	4629      	mov	r1, r5
 8005b6a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005b6c:	7fefffff 	.word	0x7fefffff
 8005b70:	7ff00000 	.word	0x7ff00000
 8005b74:	43500000 	.word	0x43500000

08005b78 <_sbrk_r>:
 8005b78:	b538      	push	{r3, r4, r5, lr}
 8005b7a:	4d06      	ldr	r5, [pc, #24]	; (8005b94 <_sbrk_r+0x1c>)
 8005b7c:	2300      	movs	r3, #0
 8005b7e:	4604      	mov	r4, r0
 8005b80:	4608      	mov	r0, r1
 8005b82:	602b      	str	r3, [r5, #0]
 8005b84:	f7fc fa50 	bl	8002028 <_sbrk>
 8005b88:	1c43      	adds	r3, r0, #1
 8005b8a:	d102      	bne.n	8005b92 <_sbrk_r+0x1a>
 8005b8c:	682b      	ldr	r3, [r5, #0]
 8005b8e:	b103      	cbz	r3, 8005b92 <_sbrk_r+0x1a>
 8005b90:	6023      	str	r3, [r4, #0]
 8005b92:	bd38      	pop	{r3, r4, r5, pc}
 8005b94:	20000b14 	.word	0x20000b14

08005b98 <__sread>:
 8005b98:	b510      	push	{r4, lr}
 8005b9a:	460c      	mov	r4, r1
 8005b9c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005ba0:	f000 ff1e 	bl	80069e0 <_read_r>
 8005ba4:	2800      	cmp	r0, #0
 8005ba6:	bfab      	itete	ge
 8005ba8:	6d23      	ldrge	r3, [r4, #80]	; 0x50
 8005baa:	89a3      	ldrhlt	r3, [r4, #12]
 8005bac:	181b      	addge	r3, r3, r0
 8005bae:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8005bb2:	bfac      	ite	ge
 8005bb4:	6523      	strge	r3, [r4, #80]	; 0x50
 8005bb6:	81a3      	strhlt	r3, [r4, #12]
 8005bb8:	bd10      	pop	{r4, pc}

08005bba <__swrite>:
 8005bba:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005bbe:	461f      	mov	r7, r3
 8005bc0:	898b      	ldrh	r3, [r1, #12]
 8005bc2:	05db      	lsls	r3, r3, #23
 8005bc4:	4605      	mov	r5, r0
 8005bc6:	460c      	mov	r4, r1
 8005bc8:	4616      	mov	r6, r2
 8005bca:	d505      	bpl.n	8005bd8 <__swrite+0x1e>
 8005bcc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005bd0:	2302      	movs	r3, #2
 8005bd2:	2200      	movs	r2, #0
 8005bd4:	f000 fee0 	bl	8006998 <_lseek_r>
 8005bd8:	89a3      	ldrh	r3, [r4, #12]
 8005bda:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005bde:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8005be2:	81a3      	strh	r3, [r4, #12]
 8005be4:	4632      	mov	r2, r6
 8005be6:	463b      	mov	r3, r7
 8005be8:	4628      	mov	r0, r5
 8005bea:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8005bee:	f000 bd29 	b.w	8006644 <_write_r>

08005bf2 <__sseek>:
 8005bf2:	b510      	push	{r4, lr}
 8005bf4:	460c      	mov	r4, r1
 8005bf6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005bfa:	f000 fecd 	bl	8006998 <_lseek_r>
 8005bfe:	1c43      	adds	r3, r0, #1
 8005c00:	89a3      	ldrh	r3, [r4, #12]
 8005c02:	bf15      	itete	ne
 8005c04:	6520      	strne	r0, [r4, #80]	; 0x50
 8005c06:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8005c0a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8005c0e:	81a3      	strheq	r3, [r4, #12]
 8005c10:	bf18      	it	ne
 8005c12:	81a3      	strhne	r3, [r4, #12]
 8005c14:	bd10      	pop	{r4, pc}

08005c16 <__sclose>:
 8005c16:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005c1a:	f000 bdb1 	b.w	8006780 <_close_r>

08005c1e <strncpy>:
 8005c1e:	b510      	push	{r4, lr}
 8005c20:	3901      	subs	r1, #1
 8005c22:	4603      	mov	r3, r0
 8005c24:	b132      	cbz	r2, 8005c34 <strncpy+0x16>
 8005c26:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 8005c2a:	f803 4b01 	strb.w	r4, [r3], #1
 8005c2e:	3a01      	subs	r2, #1
 8005c30:	2c00      	cmp	r4, #0
 8005c32:	d1f7      	bne.n	8005c24 <strncpy+0x6>
 8005c34:	441a      	add	r2, r3
 8005c36:	2100      	movs	r1, #0
 8005c38:	4293      	cmp	r3, r2
 8005c3a:	d100      	bne.n	8005c3e <strncpy+0x20>
 8005c3c:	bd10      	pop	{r4, pc}
 8005c3e:	f803 1b01 	strb.w	r1, [r3], #1
 8005c42:	e7f9      	b.n	8005c38 <strncpy+0x1a>

08005c44 <sysconf>:
 8005c44:	2808      	cmp	r0, #8
 8005c46:	b508      	push	{r3, lr}
 8005c48:	d006      	beq.n	8005c58 <sysconf+0x14>
 8005c4a:	f7fc fa4d 	bl	80020e8 <__errno>
 8005c4e:	2316      	movs	r3, #22
 8005c50:	6003      	str	r3, [r0, #0]
 8005c52:	f04f 30ff 	mov.w	r0, #4294967295
 8005c56:	bd08      	pop	{r3, pc}
 8005c58:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8005c5c:	e7fb      	b.n	8005c56 <sysconf+0x12>

08005c5e <__sprint_r>:
 8005c5e:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c62:	6893      	ldr	r3, [r2, #8]
 8005c64:	4680      	mov	r8, r0
 8005c66:	460f      	mov	r7, r1
 8005c68:	4614      	mov	r4, r2
 8005c6a:	b91b      	cbnz	r3, 8005c74 <__sprint_r+0x16>
 8005c6c:	6053      	str	r3, [r2, #4]
 8005c6e:	4618      	mov	r0, r3
 8005c70:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c74:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 8005c76:	049d      	lsls	r5, r3, #18
 8005c78:	d520      	bpl.n	8005cbc <__sprint_r+0x5e>
 8005c7a:	6815      	ldr	r5, [r2, #0]
 8005c7c:	3508      	adds	r5, #8
 8005c7e:	e955 b602 	ldrd	fp, r6, [r5, #-8]
 8005c82:	f04f 0900 	mov.w	r9, #0
 8005c86:	ea4f 0a96 	mov.w	sl, r6, lsr #2
 8005c8a:	45ca      	cmp	sl, r9
 8005c8c:	dc0b      	bgt.n	8005ca6 <__sprint_r+0x48>
 8005c8e:	68a0      	ldr	r0, [r4, #8]
 8005c90:	f026 0603 	bic.w	r6, r6, #3
 8005c94:	1b80      	subs	r0, r0, r6
 8005c96:	60a0      	str	r0, [r4, #8]
 8005c98:	3508      	adds	r5, #8
 8005c9a:	2800      	cmp	r0, #0
 8005c9c:	d1ef      	bne.n	8005c7e <__sprint_r+0x20>
 8005c9e:	2300      	movs	r3, #0
 8005ca0:	e9c4 3301 	strd	r3, r3, [r4, #4]
 8005ca4:	e7e4      	b.n	8005c70 <__sprint_r+0x12>
 8005ca6:	f85b 1029 	ldr.w	r1, [fp, r9, lsl #2]
 8005caa:	463a      	mov	r2, r7
 8005cac:	4640      	mov	r0, r8
 8005cae:	f000 fe22 	bl	80068f6 <_fputwc_r>
 8005cb2:	1c43      	adds	r3, r0, #1
 8005cb4:	d0f3      	beq.n	8005c9e <__sprint_r+0x40>
 8005cb6:	f109 0901 	add.w	r9, r9, #1
 8005cba:	e7e6      	b.n	8005c8a <__sprint_r+0x2c>
 8005cbc:	f7fe fe00 	bl	80048c0 <__sfvwrite_r>
 8005cc0:	e7ed      	b.n	8005c9e <__sprint_r+0x40>
	...

08005cc4 <_vfiprintf_r>:
 8005cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005cc8:	b0bb      	sub	sp, #236	; 0xec
 8005cca:	460f      	mov	r7, r1
 8005ccc:	9202      	str	r2, [sp, #8]
 8005cce:	461d      	mov	r5, r3
 8005cd0:	461c      	mov	r4, r3
 8005cd2:	4681      	mov	r9, r0
 8005cd4:	b118      	cbz	r0, 8005cde <_vfiprintf_r+0x1a>
 8005cd6:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8005cd8:	b90b      	cbnz	r3, 8005cde <_vfiprintf_r+0x1a>
 8005cda:	f7fe fca1 	bl	8004620 <__sinit>
 8005cde:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005ce0:	07d8      	lsls	r0, r3, #31
 8005ce2:	d405      	bmi.n	8005cf0 <_vfiprintf_r+0x2c>
 8005ce4:	89bb      	ldrh	r3, [r7, #12]
 8005ce6:	0599      	lsls	r1, r3, #22
 8005ce8:	d402      	bmi.n	8005cf0 <_vfiprintf_r+0x2c>
 8005cea:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8005cec:	f7fe ff58 	bl	8004ba0 <__retarget_lock_acquire_recursive>
 8005cf0:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8005cf4:	049a      	lsls	r2, r3, #18
 8005cf6:	d406      	bmi.n	8005d06 <_vfiprintf_r+0x42>
 8005cf8:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8005cfc:	81bb      	strh	r3, [r7, #12]
 8005cfe:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005d00:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8005d04:	667b      	str	r3, [r7, #100]	; 0x64
 8005d06:	89bb      	ldrh	r3, [r7, #12]
 8005d08:	071e      	lsls	r6, r3, #28
 8005d0a:	d501      	bpl.n	8005d10 <_vfiprintf_r+0x4c>
 8005d0c:	693b      	ldr	r3, [r7, #16]
 8005d0e:	b9ab      	cbnz	r3, 8005d3c <_vfiprintf_r+0x78>
 8005d10:	4639      	mov	r1, r7
 8005d12:	4648      	mov	r0, r9
 8005d14:	f7fd fcdc 	bl	80036d0 <__swsetup_r>
 8005d18:	b180      	cbz	r0, 8005d3c <_vfiprintf_r+0x78>
 8005d1a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8005d1c:	07d8      	lsls	r0, r3, #31
 8005d1e:	d506      	bpl.n	8005d2e <_vfiprintf_r+0x6a>
 8005d20:	f04f 33ff 	mov.w	r3, #4294967295
 8005d24:	9303      	str	r3, [sp, #12]
 8005d26:	9803      	ldr	r0, [sp, #12]
 8005d28:	b03b      	add	sp, #236	; 0xec
 8005d2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005d2e:	89bb      	ldrh	r3, [r7, #12]
 8005d30:	0599      	lsls	r1, r3, #22
 8005d32:	d4f5      	bmi.n	8005d20 <_vfiprintf_r+0x5c>
 8005d34:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8005d36:	f7fe ff34 	bl	8004ba2 <__retarget_lock_release_recursive>
 8005d3a:	e7f1      	b.n	8005d20 <_vfiprintf_r+0x5c>
 8005d3c:	89bb      	ldrh	r3, [r7, #12]
 8005d3e:	f003 021a 	and.w	r2, r3, #26
 8005d42:	2a0a      	cmp	r2, #10
 8005d44:	d113      	bne.n	8005d6e <_vfiprintf_r+0xaa>
 8005d46:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8005d4a:	2a00      	cmp	r2, #0
 8005d4c:	db0f      	blt.n	8005d6e <_vfiprintf_r+0xaa>
 8005d4e:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 8005d50:	07d2      	lsls	r2, r2, #31
 8005d52:	d404      	bmi.n	8005d5e <_vfiprintf_r+0x9a>
 8005d54:	059e      	lsls	r6, r3, #22
 8005d56:	d402      	bmi.n	8005d5e <_vfiprintf_r+0x9a>
 8005d58:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8005d5a:	f7fe ff22 	bl	8004ba2 <__retarget_lock_release_recursive>
 8005d5e:	9a02      	ldr	r2, [sp, #8]
 8005d60:	462b      	mov	r3, r5
 8005d62:	4639      	mov	r1, r7
 8005d64:	4648      	mov	r0, r9
 8005d66:	f000 fc2d 	bl	80065c4 <__sbprintf>
 8005d6a:	9003      	str	r0, [sp, #12]
 8005d6c:	e7db      	b.n	8005d26 <_vfiprintf_r+0x62>
 8005d6e:	2300      	movs	r3, #0
 8005d70:	e9cd 330f 	strd	r3, r3, [sp, #60]	; 0x3c
 8005d74:	e9cd 3306 	strd	r3, r3, [sp, #24]
 8005d78:	ae11      	add	r6, sp, #68	; 0x44
 8005d7a:	960e      	str	r6, [sp, #56]	; 0x38
 8005d7c:	9308      	str	r3, [sp, #32]
 8005d7e:	930a      	str	r3, [sp, #40]	; 0x28
 8005d80:	9303      	str	r3, [sp, #12]
 8005d82:	9b02      	ldr	r3, [sp, #8]
 8005d84:	461d      	mov	r5, r3
 8005d86:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005d8a:	b10a      	cbz	r2, 8005d90 <_vfiprintf_r+0xcc>
 8005d8c:	2a25      	cmp	r2, #37	; 0x25
 8005d8e:	d1f9      	bne.n	8005d84 <_vfiprintf_r+0xc0>
 8005d90:	9b02      	ldr	r3, [sp, #8]
 8005d92:	ebb5 0803 	subs.w	r8, r5, r3
 8005d96:	d00d      	beq.n	8005db4 <_vfiprintf_r+0xf0>
 8005d98:	e9c6 3800 	strd	r3, r8, [r6]
 8005d9c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8005d9e:	4443      	add	r3, r8
 8005da0:	9310      	str	r3, [sp, #64]	; 0x40
 8005da2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005da4:	3301      	adds	r3, #1
 8005da6:	2b07      	cmp	r3, #7
 8005da8:	930f      	str	r3, [sp, #60]	; 0x3c
 8005daa:	dc75      	bgt.n	8005e98 <_vfiprintf_r+0x1d4>
 8005dac:	3608      	adds	r6, #8
 8005dae:	9b03      	ldr	r3, [sp, #12]
 8005db0:	4443      	add	r3, r8
 8005db2:	9303      	str	r3, [sp, #12]
 8005db4:	782b      	ldrb	r3, [r5, #0]
 8005db6:	2b00      	cmp	r3, #0
 8005db8:	f000 83c6 	beq.w	8006548 <_vfiprintf_r+0x884>
 8005dbc:	2300      	movs	r3, #0
 8005dbe:	f04f 31ff 	mov.w	r1, #4294967295
 8005dc2:	1c6a      	adds	r2, r5, #1
 8005dc4:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8005dc8:	9101      	str	r1, [sp, #4]
 8005dca:	9304      	str	r3, [sp, #16]
 8005dcc:	469a      	mov	sl, r3
 8005dce:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005dd2:	9202      	str	r2, [sp, #8]
 8005dd4:	f1a3 0220 	sub.w	r2, r3, #32
 8005dd8:	2a5a      	cmp	r2, #90	; 0x5a
 8005dda:	f200 830e 	bhi.w	80063fa <_vfiprintf_r+0x736>
 8005dde:	e8df f012 	tbh	[pc, r2, lsl #1]
 8005de2:	0098      	.short	0x0098
 8005de4:	030c030c 	.word	0x030c030c
 8005de8:	030c00a0 	.word	0x030c00a0
 8005dec:	030c030c 	.word	0x030c030c
 8005df0:	030c0080 	.word	0x030c0080
 8005df4:	00a3030c 	.word	0x00a3030c
 8005df8:	030c00ad 	.word	0x030c00ad
 8005dfc:	00af00aa 	.word	0x00af00aa
 8005e00:	00ca030c 	.word	0x00ca030c
 8005e04:	00cd00cd 	.word	0x00cd00cd
 8005e08:	00cd00cd 	.word	0x00cd00cd
 8005e0c:	00cd00cd 	.word	0x00cd00cd
 8005e10:	00cd00cd 	.word	0x00cd00cd
 8005e14:	030c00cd 	.word	0x030c00cd
 8005e18:	030c030c 	.word	0x030c030c
 8005e1c:	030c030c 	.word	0x030c030c
 8005e20:	030c030c 	.word	0x030c030c
 8005e24:	030c030c 	.word	0x030c030c
 8005e28:	010500f7 	.word	0x010500f7
 8005e2c:	030c030c 	.word	0x030c030c
 8005e30:	030c030c 	.word	0x030c030c
 8005e34:	030c030c 	.word	0x030c030c
 8005e38:	030c030c 	.word	0x030c030c
 8005e3c:	030c030c 	.word	0x030c030c
 8005e40:	030c014c 	.word	0x030c014c
 8005e44:	030c030c 	.word	0x030c030c
 8005e48:	030c0191 	.word	0x030c0191
 8005e4c:	030c026f 	.word	0x030c026f
 8005e50:	028d030c 	.word	0x028d030c
 8005e54:	030c030c 	.word	0x030c030c
 8005e58:	030c030c 	.word	0x030c030c
 8005e5c:	030c030c 	.word	0x030c030c
 8005e60:	030c030c 	.word	0x030c030c
 8005e64:	030c030c 	.word	0x030c030c
 8005e68:	010700f7 	.word	0x010700f7
 8005e6c:	030c030c 	.word	0x030c030c
 8005e70:	00dd030c 	.word	0x00dd030c
 8005e74:	00f10107 	.word	0x00f10107
 8005e78:	00ea030c 	.word	0x00ea030c
 8005e7c:	012f030c 	.word	0x012f030c
 8005e80:	0181014e 	.word	0x0181014e
 8005e84:	030c00f1 	.word	0x030c00f1
 8005e88:	00960191 	.word	0x00960191
 8005e8c:	030c0271 	.word	0x030c0271
 8005e90:	0065030c 	.word	0x0065030c
 8005e94:	0096030c 	.word	0x0096030c
 8005e98:	aa0e      	add	r2, sp, #56	; 0x38
 8005e9a:	4639      	mov	r1, r7
 8005e9c:	4648      	mov	r0, r9
 8005e9e:	f7ff fede 	bl	8005c5e <__sprint_r>
 8005ea2:	2800      	cmp	r0, #0
 8005ea4:	f040 832f 	bne.w	8006506 <_vfiprintf_r+0x842>
 8005ea8:	ae11      	add	r6, sp, #68	; 0x44
 8005eaa:	e780      	b.n	8005dae <_vfiprintf_r+0xea>
 8005eac:	4a94      	ldr	r2, [pc, #592]	; (8006100 <_vfiprintf_r+0x43c>)
 8005eae:	9206      	str	r2, [sp, #24]
 8005eb0:	f01a 0f20 	tst.w	sl, #32
 8005eb4:	f000 8224 	beq.w	8006300 <_vfiprintf_r+0x63c>
 8005eb8:	3407      	adds	r4, #7
 8005eba:	f024 0b07 	bic.w	fp, r4, #7
 8005ebe:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 8005ec2:	f01a 0f01 	tst.w	sl, #1
 8005ec6:	d009      	beq.n	8005edc <_vfiprintf_r+0x218>
 8005ec8:	ea54 0205 	orrs.w	r2, r4, r5
 8005ecc:	bf1f      	itttt	ne
 8005ece:	2230      	movne	r2, #48	; 0x30
 8005ed0:	f88d 2034 	strbne.w	r2, [sp, #52]	; 0x34
 8005ed4:	f88d 3035 	strbne.w	r3, [sp, #53]	; 0x35
 8005ed8:	f04a 0a02 	orrne.w	sl, sl, #2
 8005edc:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 8005ee0:	e10c      	b.n	80060fc <_vfiprintf_r+0x438>
 8005ee2:	4648      	mov	r0, r9
 8005ee4:	f7fe fe56 	bl	8004b94 <_localeconv_r>
 8005ee8:	6843      	ldr	r3, [r0, #4]
 8005eea:	930a      	str	r3, [sp, #40]	; 0x28
 8005eec:	4618      	mov	r0, r3
 8005eee:	f7fa f97f 	bl	80001f0 <strlen>
 8005ef2:	9008      	str	r0, [sp, #32]
 8005ef4:	4648      	mov	r0, r9
 8005ef6:	f7fe fe4d 	bl	8004b94 <_localeconv_r>
 8005efa:	6883      	ldr	r3, [r0, #8]
 8005efc:	9307      	str	r3, [sp, #28]
 8005efe:	9b08      	ldr	r3, [sp, #32]
 8005f00:	b12b      	cbz	r3, 8005f0e <_vfiprintf_r+0x24a>
 8005f02:	9b07      	ldr	r3, [sp, #28]
 8005f04:	b11b      	cbz	r3, 8005f0e <_vfiprintf_r+0x24a>
 8005f06:	781b      	ldrb	r3, [r3, #0]
 8005f08:	b10b      	cbz	r3, 8005f0e <_vfiprintf_r+0x24a>
 8005f0a:	f44a 6a80 	orr.w	sl, sl, #1024	; 0x400
 8005f0e:	9a02      	ldr	r2, [sp, #8]
 8005f10:	e75d      	b.n	8005dce <_vfiprintf_r+0x10a>
 8005f12:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8005f16:	2b00      	cmp	r3, #0
 8005f18:	d1f9      	bne.n	8005f0e <_vfiprintf_r+0x24a>
 8005f1a:	2320      	movs	r3, #32
 8005f1c:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8005f20:	e7f5      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005f22:	f04a 0a01 	orr.w	sl, sl, #1
 8005f26:	e7f2      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005f28:	f854 3b04 	ldr.w	r3, [r4], #4
 8005f2c:	9304      	str	r3, [sp, #16]
 8005f2e:	2b00      	cmp	r3, #0
 8005f30:	daed      	bge.n	8005f0e <_vfiprintf_r+0x24a>
 8005f32:	425b      	negs	r3, r3
 8005f34:	9304      	str	r3, [sp, #16]
 8005f36:	f04a 0a04 	orr.w	sl, sl, #4
 8005f3a:	e7e8      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005f3c:	232b      	movs	r3, #43	; 0x2b
 8005f3e:	e7ed      	b.n	8005f1c <_vfiprintf_r+0x258>
 8005f40:	9a02      	ldr	r2, [sp, #8]
 8005f42:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005f46:	2b2a      	cmp	r3, #42	; 0x2a
 8005f48:	d112      	bne.n	8005f70 <_vfiprintf_r+0x2ac>
 8005f4a:	f854 0b04 	ldr.w	r0, [r4], #4
 8005f4e:	ea40 73e0 	orr.w	r3, r0, r0, asr #31
 8005f52:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8005f56:	e7da      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005f58:	9b01      	ldr	r3, [sp, #4]
 8005f5a:	200a      	movs	r0, #10
 8005f5c:	fb00 1303 	mla	r3, r0, r3, r1
 8005f60:	9301      	str	r3, [sp, #4]
 8005f62:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005f66:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8005f6a:	2909      	cmp	r1, #9
 8005f6c:	d9f4      	bls.n	8005f58 <_vfiprintf_r+0x294>
 8005f6e:	e730      	b.n	8005dd2 <_vfiprintf_r+0x10e>
 8005f70:	2100      	movs	r1, #0
 8005f72:	9101      	str	r1, [sp, #4]
 8005f74:	e7f7      	b.n	8005f66 <_vfiprintf_r+0x2a2>
 8005f76:	f04a 0a80 	orr.w	sl, sl, #128	; 0x80
 8005f7a:	e7c8      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005f7c:	2100      	movs	r1, #0
 8005f7e:	9a02      	ldr	r2, [sp, #8]
 8005f80:	9104      	str	r1, [sp, #16]
 8005f82:	9904      	ldr	r1, [sp, #16]
 8005f84:	3b30      	subs	r3, #48	; 0x30
 8005f86:	200a      	movs	r0, #10
 8005f88:	fb00 3301 	mla	r3, r0, r1, r3
 8005f8c:	9304      	str	r3, [sp, #16]
 8005f8e:	f812 3b01 	ldrb.w	r3, [r2], #1
 8005f92:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8005f96:	2909      	cmp	r1, #9
 8005f98:	d9f3      	bls.n	8005f82 <_vfiprintf_r+0x2be>
 8005f9a:	e71a      	b.n	8005dd2 <_vfiprintf_r+0x10e>
 8005f9c:	9b02      	ldr	r3, [sp, #8]
 8005f9e:	781b      	ldrb	r3, [r3, #0]
 8005fa0:	2b68      	cmp	r3, #104	; 0x68
 8005fa2:	bf01      	itttt	eq
 8005fa4:	9b02      	ldreq	r3, [sp, #8]
 8005fa6:	3301      	addeq	r3, #1
 8005fa8:	9302      	streq	r3, [sp, #8]
 8005faa:	f44a 7a00 	orreq.w	sl, sl, #512	; 0x200
 8005fae:	bf18      	it	ne
 8005fb0:	f04a 0a40 	orrne.w	sl, sl, #64	; 0x40
 8005fb4:	e7ab      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005fb6:	9b02      	ldr	r3, [sp, #8]
 8005fb8:	781b      	ldrb	r3, [r3, #0]
 8005fba:	2b6c      	cmp	r3, #108	; 0x6c
 8005fbc:	d105      	bne.n	8005fca <_vfiprintf_r+0x306>
 8005fbe:	9b02      	ldr	r3, [sp, #8]
 8005fc0:	3301      	adds	r3, #1
 8005fc2:	9302      	str	r3, [sp, #8]
 8005fc4:	f04a 0a20 	orr.w	sl, sl, #32
 8005fc8:	e7a1      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005fca:	f04a 0a10 	orr.w	sl, sl, #16
 8005fce:	e79e      	b.n	8005f0e <_vfiprintf_r+0x24a>
 8005fd0:	46a3      	mov	fp, r4
 8005fd2:	2100      	movs	r1, #0
 8005fd4:	f85b 3b04 	ldr.w	r3, [fp], #4
 8005fd8:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 8005fdc:	f88d 1033 	strb.w	r1, [sp, #51]	; 0x33
 8005fe0:	2301      	movs	r3, #1
 8005fe2:	9301      	str	r3, [sp, #4]
 8005fe4:	460d      	mov	r5, r1
 8005fe6:	f10d 0884 	add.w	r8, sp, #132	; 0x84
 8005fea:	e0a0      	b.n	800612e <_vfiprintf_r+0x46a>
 8005fec:	f04a 0a10 	orr.w	sl, sl, #16
 8005ff0:	f01a 0f20 	tst.w	sl, #32
 8005ff4:	d011      	beq.n	800601a <_vfiprintf_r+0x356>
 8005ff6:	3407      	adds	r4, #7
 8005ff8:	f024 0b07 	bic.w	fp, r4, #7
 8005ffc:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 8006000:	2c00      	cmp	r4, #0
 8006002:	f175 0300 	sbcs.w	r3, r5, #0
 8006006:	da06      	bge.n	8006016 <_vfiprintf_r+0x352>
 8006008:	4264      	negs	r4, r4
 800600a:	f04f 032d 	mov.w	r3, #45	; 0x2d
 800600e:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8006012:	f88d 3033 	strb.w	r3, [sp, #51]	; 0x33
 8006016:	2301      	movs	r3, #1
 8006018:	e03f      	b.n	800609a <_vfiprintf_r+0x3d6>
 800601a:	f01a 0f10 	tst.w	sl, #16
 800601e:	f104 0b04 	add.w	fp, r4, #4
 8006022:	d002      	beq.n	800602a <_vfiprintf_r+0x366>
 8006024:	6824      	ldr	r4, [r4, #0]
 8006026:	17e5      	asrs	r5, r4, #31
 8006028:	e7ea      	b.n	8006000 <_vfiprintf_r+0x33c>
 800602a:	f01a 0f40 	tst.w	sl, #64	; 0x40
 800602e:	6824      	ldr	r4, [r4, #0]
 8006030:	d001      	beq.n	8006036 <_vfiprintf_r+0x372>
 8006032:	b224      	sxth	r4, r4
 8006034:	e7f7      	b.n	8006026 <_vfiprintf_r+0x362>
 8006036:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800603a:	bf18      	it	ne
 800603c:	b264      	sxtbne	r4, r4
 800603e:	e7f2      	b.n	8006026 <_vfiprintf_r+0x362>
 8006040:	f01a 0f20 	tst.w	sl, #32
 8006044:	f854 3b04 	ldr.w	r3, [r4], #4
 8006048:	d005      	beq.n	8006056 <_vfiprintf_r+0x392>
 800604a:	9a03      	ldr	r2, [sp, #12]
 800604c:	4610      	mov	r0, r2
 800604e:	17d1      	asrs	r1, r2, #31
 8006050:	e9c3 0100 	strd	r0, r1, [r3]
 8006054:	e695      	b.n	8005d82 <_vfiprintf_r+0xbe>
 8006056:	f01a 0f10 	tst.w	sl, #16
 800605a:	d002      	beq.n	8006062 <_vfiprintf_r+0x39e>
 800605c:	9a03      	ldr	r2, [sp, #12]
 800605e:	601a      	str	r2, [r3, #0]
 8006060:	e68f      	b.n	8005d82 <_vfiprintf_r+0xbe>
 8006062:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8006066:	d002      	beq.n	800606e <_vfiprintf_r+0x3aa>
 8006068:	9a03      	ldr	r2, [sp, #12]
 800606a:	801a      	strh	r2, [r3, #0]
 800606c:	e689      	b.n	8005d82 <_vfiprintf_r+0xbe>
 800606e:	f41a 7f00 	tst.w	sl, #512	; 0x200
 8006072:	d0f3      	beq.n	800605c <_vfiprintf_r+0x398>
 8006074:	9a03      	ldr	r2, [sp, #12]
 8006076:	701a      	strb	r2, [r3, #0]
 8006078:	e683      	b.n	8005d82 <_vfiprintf_r+0xbe>
 800607a:	f04a 0a10 	orr.w	sl, sl, #16
 800607e:	f01a 0f20 	tst.w	sl, #32
 8006082:	d01d      	beq.n	80060c0 <_vfiprintf_r+0x3fc>
 8006084:	3407      	adds	r4, #7
 8006086:	f024 0b07 	bic.w	fp, r4, #7
 800608a:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 800608e:	f42a 6a80 	bic.w	sl, sl, #1024	; 0x400
 8006092:	2300      	movs	r3, #0
 8006094:	2200      	movs	r2, #0
 8006096:	f88d 2033 	strb.w	r2, [sp, #51]	; 0x33
 800609a:	9a01      	ldr	r2, [sp, #4]
 800609c:	3201      	adds	r2, #1
 800609e:	f000 8260 	beq.w	8006562 <_vfiprintf_r+0x89e>
 80060a2:	f02a 0280 	bic.w	r2, sl, #128	; 0x80
 80060a6:	9205      	str	r2, [sp, #20]
 80060a8:	ea54 0205 	orrs.w	r2, r4, r5
 80060ac:	f040 825f 	bne.w	800656e <_vfiprintf_r+0x8aa>
 80060b0:	9a01      	ldr	r2, [sp, #4]
 80060b2:	2a00      	cmp	r2, #0
 80060b4:	f000 8196 	beq.w	80063e4 <_vfiprintf_r+0x720>
 80060b8:	2b01      	cmp	r3, #1
 80060ba:	f040 825b 	bne.w	8006574 <_vfiprintf_r+0x8b0>
 80060be:	e135      	b.n	800632c <_vfiprintf_r+0x668>
 80060c0:	f01a 0f10 	tst.w	sl, #16
 80060c4:	f104 0b04 	add.w	fp, r4, #4
 80060c8:	d001      	beq.n	80060ce <_vfiprintf_r+0x40a>
 80060ca:	6824      	ldr	r4, [r4, #0]
 80060cc:	e003      	b.n	80060d6 <_vfiprintf_r+0x412>
 80060ce:	f01a 0f40 	tst.w	sl, #64	; 0x40
 80060d2:	d002      	beq.n	80060da <_vfiprintf_r+0x416>
 80060d4:	8824      	ldrh	r4, [r4, #0]
 80060d6:	2500      	movs	r5, #0
 80060d8:	e7d9      	b.n	800608e <_vfiprintf_r+0x3ca>
 80060da:	f41a 7f00 	tst.w	sl, #512	; 0x200
 80060de:	d0f4      	beq.n	80060ca <_vfiprintf_r+0x406>
 80060e0:	7824      	ldrb	r4, [r4, #0]
 80060e2:	e7f8      	b.n	80060d6 <_vfiprintf_r+0x412>
 80060e4:	46a3      	mov	fp, r4
 80060e6:	f647 0330 	movw	r3, #30768	; 0x7830
 80060ea:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80060ee:	f85b 4b04 	ldr.w	r4, [fp], #4
 80060f2:	4b03      	ldr	r3, [pc, #12]	; (8006100 <_vfiprintf_r+0x43c>)
 80060f4:	9306      	str	r3, [sp, #24]
 80060f6:	2500      	movs	r5, #0
 80060f8:	f04a 0a02 	orr.w	sl, sl, #2
 80060fc:	2302      	movs	r3, #2
 80060fe:	e7c9      	b.n	8006094 <_vfiprintf_r+0x3d0>
 8006100:	08007230 	.word	0x08007230
 8006104:	9b01      	ldr	r3, [sp, #4]
 8006106:	46a3      	mov	fp, r4
 8006108:	2500      	movs	r5, #0
 800610a:	1c5c      	adds	r4, r3, #1
 800610c:	f85b 8b04 	ldr.w	r8, [fp], #4
 8006110:	f88d 5033 	strb.w	r5, [sp, #51]	; 0x33
 8006114:	f000 80cf 	beq.w	80062b6 <_vfiprintf_r+0x5f2>
 8006118:	461a      	mov	r2, r3
 800611a:	4629      	mov	r1, r5
 800611c:	4640      	mov	r0, r8
 800611e:	f7fa f86f 	bl	8000200 <memchr>
 8006122:	2800      	cmp	r0, #0
 8006124:	f000 8173 	beq.w	800640e <_vfiprintf_r+0x74a>
 8006128:	eba0 0308 	sub.w	r3, r0, r8
 800612c:	9301      	str	r3, [sp, #4]
 800612e:	9b01      	ldr	r3, [sp, #4]
 8006130:	42ab      	cmp	r3, r5
 8006132:	bfb8      	it	lt
 8006134:	462b      	movlt	r3, r5
 8006136:	9305      	str	r3, [sp, #20]
 8006138:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800613c:	b113      	cbz	r3, 8006144 <_vfiprintf_r+0x480>
 800613e:	9b05      	ldr	r3, [sp, #20]
 8006140:	3301      	adds	r3, #1
 8006142:	9305      	str	r3, [sp, #20]
 8006144:	f01a 0302 	ands.w	r3, sl, #2
 8006148:	9309      	str	r3, [sp, #36]	; 0x24
 800614a:	bf1e      	ittt	ne
 800614c:	9b05      	ldrne	r3, [sp, #20]
 800614e:	3302      	addne	r3, #2
 8006150:	9305      	strne	r3, [sp, #20]
 8006152:	f01a 0384 	ands.w	r3, sl, #132	; 0x84
 8006156:	930b      	str	r3, [sp, #44]	; 0x2c
 8006158:	d11f      	bne.n	800619a <_vfiprintf_r+0x4d6>
 800615a:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 800615e:	1a9c      	subs	r4, r3, r2
 8006160:	2c00      	cmp	r4, #0
 8006162:	dd1a      	ble.n	800619a <_vfiprintf_r+0x4d6>
 8006164:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 8006168:	48b4      	ldr	r0, [pc, #720]	; (800643c <_vfiprintf_r+0x778>)
 800616a:	6030      	str	r0, [r6, #0]
 800616c:	2c10      	cmp	r4, #16
 800616e:	f103 0301 	add.w	r3, r3, #1
 8006172:	f106 0108 	add.w	r1, r6, #8
 8006176:	f300 814c 	bgt.w	8006412 <_vfiprintf_r+0x74e>
 800617a:	6074      	str	r4, [r6, #4]
 800617c:	2b07      	cmp	r3, #7
 800617e:	4414      	add	r4, r2
 8006180:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 8006184:	f340 8157 	ble.w	8006436 <_vfiprintf_r+0x772>
 8006188:	aa0e      	add	r2, sp, #56	; 0x38
 800618a:	4639      	mov	r1, r7
 800618c:	4648      	mov	r0, r9
 800618e:	f7ff fd66 	bl	8005c5e <__sprint_r>
 8006192:	2800      	cmp	r0, #0
 8006194:	f040 81b7 	bne.w	8006506 <_vfiprintf_r+0x842>
 8006198:	ae11      	add	r6, sp, #68	; 0x44
 800619a:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800619e:	b173      	cbz	r3, 80061be <_vfiprintf_r+0x4fa>
 80061a0:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 80061a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80061a6:	6032      	str	r2, [r6, #0]
 80061a8:	2201      	movs	r2, #1
 80061aa:	6072      	str	r2, [r6, #4]
 80061ac:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80061ae:	3301      	adds	r3, #1
 80061b0:	3201      	adds	r2, #1
 80061b2:	2b07      	cmp	r3, #7
 80061b4:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 80061b8:	f300 8146 	bgt.w	8006448 <_vfiprintf_r+0x784>
 80061bc:	3608      	adds	r6, #8
 80061be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80061c0:	b16b      	cbz	r3, 80061de <_vfiprintf_r+0x51a>
 80061c2:	aa0d      	add	r2, sp, #52	; 0x34
 80061c4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80061c6:	6032      	str	r2, [r6, #0]
 80061c8:	2202      	movs	r2, #2
 80061ca:	6072      	str	r2, [r6, #4]
 80061cc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80061ce:	3301      	adds	r3, #1
 80061d0:	3202      	adds	r2, #2
 80061d2:	2b07      	cmp	r3, #7
 80061d4:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 80061d8:	f300 813f 	bgt.w	800645a <_vfiprintf_r+0x796>
 80061dc:	3608      	adds	r6, #8
 80061de:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80061e0:	2b80      	cmp	r3, #128	; 0x80
 80061e2:	d11f      	bne.n	8006224 <_vfiprintf_r+0x560>
 80061e4:	e9dd 3204 	ldrd	r3, r2, [sp, #16]
 80061e8:	1a9c      	subs	r4, r3, r2
 80061ea:	2c00      	cmp	r4, #0
 80061ec:	dd1a      	ble.n	8006224 <_vfiprintf_r+0x560>
 80061ee:	e9dd 320f 	ldrd	r3, r2, [sp, #60]	; 0x3c
 80061f2:	4893      	ldr	r0, [pc, #588]	; (8006440 <_vfiprintf_r+0x77c>)
 80061f4:	6030      	str	r0, [r6, #0]
 80061f6:	2c10      	cmp	r4, #16
 80061f8:	f103 0301 	add.w	r3, r3, #1
 80061fc:	f106 0108 	add.w	r1, r6, #8
 8006200:	f300 8134 	bgt.w	800646c <_vfiprintf_r+0x7a8>
 8006204:	6074      	str	r4, [r6, #4]
 8006206:	2b07      	cmp	r3, #7
 8006208:	4414      	add	r4, r2
 800620a:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 800620e:	f340 813f 	ble.w	8006490 <_vfiprintf_r+0x7cc>
 8006212:	aa0e      	add	r2, sp, #56	; 0x38
 8006214:	4639      	mov	r1, r7
 8006216:	4648      	mov	r0, r9
 8006218:	f7ff fd21 	bl	8005c5e <__sprint_r>
 800621c:	2800      	cmp	r0, #0
 800621e:	f040 8172 	bne.w	8006506 <_vfiprintf_r+0x842>
 8006222:	ae11      	add	r6, sp, #68	; 0x44
 8006224:	9b01      	ldr	r3, [sp, #4]
 8006226:	1aec      	subs	r4, r5, r3
 8006228:	2c00      	cmp	r4, #0
 800622a:	dd1a      	ble.n	8006262 <_vfiprintf_r+0x59e>
 800622c:	4d84      	ldr	r5, [pc, #528]	; (8006440 <_vfiprintf_r+0x77c>)
 800622e:	6035      	str	r5, [r6, #0]
 8006230:	e9dd 310f 	ldrd	r3, r1, [sp, #60]	; 0x3c
 8006234:	2c10      	cmp	r4, #16
 8006236:	f103 0301 	add.w	r3, r3, #1
 800623a:	f106 0208 	add.w	r2, r6, #8
 800623e:	f300 8129 	bgt.w	8006494 <_vfiprintf_r+0x7d0>
 8006242:	6074      	str	r4, [r6, #4]
 8006244:	2b07      	cmp	r3, #7
 8006246:	440c      	add	r4, r1
 8006248:	e9cd 340f 	strd	r3, r4, [sp, #60]	; 0x3c
 800624c:	f340 8133 	ble.w	80064b6 <_vfiprintf_r+0x7f2>
 8006250:	aa0e      	add	r2, sp, #56	; 0x38
 8006252:	4639      	mov	r1, r7
 8006254:	4648      	mov	r0, r9
 8006256:	f7ff fd02 	bl	8005c5e <__sprint_r>
 800625a:	2800      	cmp	r0, #0
 800625c:	f040 8153 	bne.w	8006506 <_vfiprintf_r+0x842>
 8006260:	ae11      	add	r6, sp, #68	; 0x44
 8006262:	9b01      	ldr	r3, [sp, #4]
 8006264:	9810      	ldr	r0, [sp, #64]	; 0x40
 8006266:	6073      	str	r3, [r6, #4]
 8006268:	4418      	add	r0, r3
 800626a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800626c:	f8c6 8000 	str.w	r8, [r6]
 8006270:	3301      	adds	r3, #1
 8006272:	2b07      	cmp	r3, #7
 8006274:	9010      	str	r0, [sp, #64]	; 0x40
 8006276:	930f      	str	r3, [sp, #60]	; 0x3c
 8006278:	f300 811f 	bgt.w	80064ba <_vfiprintf_r+0x7f6>
 800627c:	f106 0308 	add.w	r3, r6, #8
 8006280:	f01a 0f04 	tst.w	sl, #4
 8006284:	f040 8121 	bne.w	80064ca <_vfiprintf_r+0x806>
 8006288:	e9dd 3203 	ldrd	r3, r2, [sp, #12]
 800628c:	9905      	ldr	r1, [sp, #20]
 800628e:	428a      	cmp	r2, r1
 8006290:	bfac      	ite	ge
 8006292:	189b      	addge	r3, r3, r2
 8006294:	185b      	addlt	r3, r3, r1
 8006296:	9303      	str	r3, [sp, #12]
 8006298:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800629a:	b13b      	cbz	r3, 80062ac <_vfiprintf_r+0x5e8>
 800629c:	aa0e      	add	r2, sp, #56	; 0x38
 800629e:	4639      	mov	r1, r7
 80062a0:	4648      	mov	r0, r9
 80062a2:	f7ff fcdc 	bl	8005c5e <__sprint_r>
 80062a6:	2800      	cmp	r0, #0
 80062a8:	f040 812d 	bne.w	8006506 <_vfiprintf_r+0x842>
 80062ac:	2300      	movs	r3, #0
 80062ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80062b0:	465c      	mov	r4, fp
 80062b2:	ae11      	add	r6, sp, #68	; 0x44
 80062b4:	e565      	b.n	8005d82 <_vfiprintf_r+0xbe>
 80062b6:	4640      	mov	r0, r8
 80062b8:	f7f9 ff9a 	bl	80001f0 <strlen>
 80062bc:	9001      	str	r0, [sp, #4]
 80062be:	e736      	b.n	800612e <_vfiprintf_r+0x46a>
 80062c0:	f04a 0a10 	orr.w	sl, sl, #16
 80062c4:	f01a 0f20 	tst.w	sl, #32
 80062c8:	d006      	beq.n	80062d8 <_vfiprintf_r+0x614>
 80062ca:	3407      	adds	r4, #7
 80062cc:	f024 0b07 	bic.w	fp, r4, #7
 80062d0:	e8fb 4502 	ldrd	r4, r5, [fp], #8
 80062d4:	2301      	movs	r3, #1
 80062d6:	e6dd      	b.n	8006094 <_vfiprintf_r+0x3d0>
 80062d8:	f01a 0f10 	tst.w	sl, #16
 80062dc:	f104 0b04 	add.w	fp, r4, #4
 80062e0:	d001      	beq.n	80062e6 <_vfiprintf_r+0x622>
 80062e2:	6824      	ldr	r4, [r4, #0]
 80062e4:	e003      	b.n	80062ee <_vfiprintf_r+0x62a>
 80062e6:	f01a 0f40 	tst.w	sl, #64	; 0x40
 80062ea:	d002      	beq.n	80062f2 <_vfiprintf_r+0x62e>
 80062ec:	8824      	ldrh	r4, [r4, #0]
 80062ee:	2500      	movs	r5, #0
 80062f0:	e7f0      	b.n	80062d4 <_vfiprintf_r+0x610>
 80062f2:	f41a 7f00 	tst.w	sl, #512	; 0x200
 80062f6:	d0f4      	beq.n	80062e2 <_vfiprintf_r+0x61e>
 80062f8:	7824      	ldrb	r4, [r4, #0]
 80062fa:	e7f8      	b.n	80062ee <_vfiprintf_r+0x62a>
 80062fc:	4a51      	ldr	r2, [pc, #324]	; (8006444 <_vfiprintf_r+0x780>)
 80062fe:	e5d6      	b.n	8005eae <_vfiprintf_r+0x1ea>
 8006300:	f01a 0f10 	tst.w	sl, #16
 8006304:	f104 0b04 	add.w	fp, r4, #4
 8006308:	d001      	beq.n	800630e <_vfiprintf_r+0x64a>
 800630a:	6824      	ldr	r4, [r4, #0]
 800630c:	e003      	b.n	8006316 <_vfiprintf_r+0x652>
 800630e:	f01a 0f40 	tst.w	sl, #64	; 0x40
 8006312:	d002      	beq.n	800631a <_vfiprintf_r+0x656>
 8006314:	8824      	ldrh	r4, [r4, #0]
 8006316:	2500      	movs	r5, #0
 8006318:	e5d3      	b.n	8005ec2 <_vfiprintf_r+0x1fe>
 800631a:	f41a 7f00 	tst.w	sl, #512	; 0x200
 800631e:	d0f4      	beq.n	800630a <_vfiprintf_r+0x646>
 8006320:	7824      	ldrb	r4, [r4, #0]
 8006322:	e7f8      	b.n	8006316 <_vfiprintf_r+0x652>
 8006324:	2d00      	cmp	r5, #0
 8006326:	bf08      	it	eq
 8006328:	2c0a      	cmpeq	r4, #10
 800632a:	d205      	bcs.n	8006338 <_vfiprintf_r+0x674>
 800632c:	3430      	adds	r4, #48	; 0x30
 800632e:	f88d 40e7 	strb.w	r4, [sp, #231]	; 0xe7
 8006332:	f10d 08e7 	add.w	r8, sp, #231	; 0xe7
 8006336:	e13b      	b.n	80065b0 <_vfiprintf_r+0x8ec>
 8006338:	ab3a      	add	r3, sp, #232	; 0xe8
 800633a:	9309      	str	r3, [sp, #36]	; 0x24
 800633c:	9b05      	ldr	r3, [sp, #20]
 800633e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8006342:	f04f 0a00 	mov.w	sl, #0
 8006346:	930b      	str	r3, [sp, #44]	; 0x2c
 8006348:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800634a:	220a      	movs	r2, #10
 800634c:	f103 38ff 	add.w	r8, r3, #4294967295
 8006350:	4620      	mov	r0, r4
 8006352:	2300      	movs	r3, #0
 8006354:	4629      	mov	r1, r5
 8006356:	f7fa fc37 	bl	8000bc8 <__aeabi_uldivmod>
 800635a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800635c:	3230      	adds	r2, #48	; 0x30
 800635e:	f803 2c01 	strb.w	r2, [r3, #-1]
 8006362:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006364:	f10a 0a01 	add.w	sl, sl, #1
 8006368:	b1d3      	cbz	r3, 80063a0 <_vfiprintf_r+0x6dc>
 800636a:	9b07      	ldr	r3, [sp, #28]
 800636c:	781b      	ldrb	r3, [r3, #0]
 800636e:	4553      	cmp	r3, sl
 8006370:	d116      	bne.n	80063a0 <_vfiprintf_r+0x6dc>
 8006372:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8006376:	d013      	beq.n	80063a0 <_vfiprintf_r+0x6dc>
 8006378:	2d00      	cmp	r5, #0
 800637a:	bf08      	it	eq
 800637c:	2c0a      	cmpeq	r4, #10
 800637e:	d30f      	bcc.n	80063a0 <_vfiprintf_r+0x6dc>
 8006380:	9b08      	ldr	r3, [sp, #32]
 8006382:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006384:	eba8 0803 	sub.w	r8, r8, r3
 8006388:	461a      	mov	r2, r3
 800638a:	4640      	mov	r0, r8
 800638c:	f7ff fc47 	bl	8005c1e <strncpy>
 8006390:	9b07      	ldr	r3, [sp, #28]
 8006392:	785b      	ldrb	r3, [r3, #1]
 8006394:	b1a3      	cbz	r3, 80063c0 <_vfiprintf_r+0x6fc>
 8006396:	9b07      	ldr	r3, [sp, #28]
 8006398:	3301      	adds	r3, #1
 800639a:	9307      	str	r3, [sp, #28]
 800639c:	f04f 0a00 	mov.w	sl, #0
 80063a0:	220a      	movs	r2, #10
 80063a2:	2300      	movs	r3, #0
 80063a4:	4620      	mov	r0, r4
 80063a6:	4629      	mov	r1, r5
 80063a8:	f7fa fc0e 	bl	8000bc8 <__aeabi_uldivmod>
 80063ac:	2d00      	cmp	r5, #0
 80063ae:	bf08      	it	eq
 80063b0:	2c0a      	cmpeq	r4, #10
 80063b2:	f0c0 80fd 	bcc.w	80065b0 <_vfiprintf_r+0x8ec>
 80063b6:	4604      	mov	r4, r0
 80063b8:	460d      	mov	r5, r1
 80063ba:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 80063be:	e7c3      	b.n	8006348 <_vfiprintf_r+0x684>
 80063c0:	469a      	mov	sl, r3
 80063c2:	e7ed      	b.n	80063a0 <_vfiprintf_r+0x6dc>
 80063c4:	9a06      	ldr	r2, [sp, #24]
 80063c6:	f004 030f 	and.w	r3, r4, #15
 80063ca:	5cd3      	ldrb	r3, [r2, r3]
 80063cc:	f808 3d01 	strb.w	r3, [r8, #-1]!
 80063d0:	0923      	lsrs	r3, r4, #4
 80063d2:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 80063d6:	092a      	lsrs	r2, r5, #4
 80063d8:	461c      	mov	r4, r3
 80063da:	4615      	mov	r5, r2
 80063dc:	ea54 0305 	orrs.w	r3, r4, r5
 80063e0:	d1f0      	bne.n	80063c4 <_vfiprintf_r+0x700>
 80063e2:	e0e5      	b.n	80065b0 <_vfiprintf_r+0x8ec>
 80063e4:	b933      	cbnz	r3, 80063f4 <_vfiprintf_r+0x730>
 80063e6:	f01a 0f01 	tst.w	sl, #1
 80063ea:	d003      	beq.n	80063f4 <_vfiprintf_r+0x730>
 80063ec:	2330      	movs	r3, #48	; 0x30
 80063ee:	f88d 30e7 	strb.w	r3, [sp, #231]	; 0xe7
 80063f2:	e79e      	b.n	8006332 <_vfiprintf_r+0x66e>
 80063f4:	f10d 08e8 	add.w	r8, sp, #232	; 0xe8
 80063f8:	e0da      	b.n	80065b0 <_vfiprintf_r+0x8ec>
 80063fa:	2b00      	cmp	r3, #0
 80063fc:	f000 80a4 	beq.w	8006548 <_vfiprintf_r+0x884>
 8006400:	2100      	movs	r1, #0
 8006402:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
 8006406:	f88d 1033 	strb.w	r1, [sp, #51]	; 0x33
 800640a:	46a3      	mov	fp, r4
 800640c:	e5e8      	b.n	8005fe0 <_vfiprintf_r+0x31c>
 800640e:	4605      	mov	r5, r0
 8006410:	e68d      	b.n	800612e <_vfiprintf_r+0x46a>
 8006412:	2010      	movs	r0, #16
 8006414:	4402      	add	r2, r0
 8006416:	2b07      	cmp	r3, #7
 8006418:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 800641c:	6070      	str	r0, [r6, #4]
 800641e:	dd07      	ble.n	8006430 <_vfiprintf_r+0x76c>
 8006420:	aa0e      	add	r2, sp, #56	; 0x38
 8006422:	4639      	mov	r1, r7
 8006424:	4648      	mov	r0, r9
 8006426:	f7ff fc1a 	bl	8005c5e <__sprint_r>
 800642a:	2800      	cmp	r0, #0
 800642c:	d16b      	bne.n	8006506 <_vfiprintf_r+0x842>
 800642e:	a911      	add	r1, sp, #68	; 0x44
 8006430:	3c10      	subs	r4, #16
 8006432:	460e      	mov	r6, r1
 8006434:	e696      	b.n	8006164 <_vfiprintf_r+0x4a0>
 8006436:	460e      	mov	r6, r1
 8006438:	e6af      	b.n	800619a <_vfiprintf_r+0x4d6>
 800643a:	bf00      	nop
 800643c:	08007454 	.word	0x08007454
 8006440:	08007464 	.word	0x08007464
 8006444:	08007241 	.word	0x08007241
 8006448:	aa0e      	add	r2, sp, #56	; 0x38
 800644a:	4639      	mov	r1, r7
 800644c:	4648      	mov	r0, r9
 800644e:	f7ff fc06 	bl	8005c5e <__sprint_r>
 8006452:	2800      	cmp	r0, #0
 8006454:	d157      	bne.n	8006506 <_vfiprintf_r+0x842>
 8006456:	ae11      	add	r6, sp, #68	; 0x44
 8006458:	e6b1      	b.n	80061be <_vfiprintf_r+0x4fa>
 800645a:	aa0e      	add	r2, sp, #56	; 0x38
 800645c:	4639      	mov	r1, r7
 800645e:	4648      	mov	r0, r9
 8006460:	f7ff fbfd 	bl	8005c5e <__sprint_r>
 8006464:	2800      	cmp	r0, #0
 8006466:	d14e      	bne.n	8006506 <_vfiprintf_r+0x842>
 8006468:	ae11      	add	r6, sp, #68	; 0x44
 800646a:	e6b8      	b.n	80061de <_vfiprintf_r+0x51a>
 800646c:	2010      	movs	r0, #16
 800646e:	4402      	add	r2, r0
 8006470:	2b07      	cmp	r3, #7
 8006472:	e9cd 320f 	strd	r3, r2, [sp, #60]	; 0x3c
 8006476:	6070      	str	r0, [r6, #4]
 8006478:	dd07      	ble.n	800648a <_vfiprintf_r+0x7c6>
 800647a:	aa0e      	add	r2, sp, #56	; 0x38
 800647c:	4639      	mov	r1, r7
 800647e:	4648      	mov	r0, r9
 8006480:	f7ff fbed 	bl	8005c5e <__sprint_r>
 8006484:	2800      	cmp	r0, #0
 8006486:	d13e      	bne.n	8006506 <_vfiprintf_r+0x842>
 8006488:	a911      	add	r1, sp, #68	; 0x44
 800648a:	3c10      	subs	r4, #16
 800648c:	460e      	mov	r6, r1
 800648e:	e6ae      	b.n	80061ee <_vfiprintf_r+0x52a>
 8006490:	460e      	mov	r6, r1
 8006492:	e6c7      	b.n	8006224 <_vfiprintf_r+0x560>
 8006494:	2010      	movs	r0, #16
 8006496:	4401      	add	r1, r0
 8006498:	2b07      	cmp	r3, #7
 800649a:	e9cd 310f 	strd	r3, r1, [sp, #60]	; 0x3c
 800649e:	6070      	str	r0, [r6, #4]
 80064a0:	dd06      	ble.n	80064b0 <_vfiprintf_r+0x7ec>
 80064a2:	aa0e      	add	r2, sp, #56	; 0x38
 80064a4:	4639      	mov	r1, r7
 80064a6:	4648      	mov	r0, r9
 80064a8:	f7ff fbd9 	bl	8005c5e <__sprint_r>
 80064ac:	bb58      	cbnz	r0, 8006506 <_vfiprintf_r+0x842>
 80064ae:	aa11      	add	r2, sp, #68	; 0x44
 80064b0:	3c10      	subs	r4, #16
 80064b2:	4616      	mov	r6, r2
 80064b4:	e6bb      	b.n	800622e <_vfiprintf_r+0x56a>
 80064b6:	4616      	mov	r6, r2
 80064b8:	e6d3      	b.n	8006262 <_vfiprintf_r+0x59e>
 80064ba:	aa0e      	add	r2, sp, #56	; 0x38
 80064bc:	4639      	mov	r1, r7
 80064be:	4648      	mov	r0, r9
 80064c0:	f7ff fbcd 	bl	8005c5e <__sprint_r>
 80064c4:	b9f8      	cbnz	r0, 8006506 <_vfiprintf_r+0x842>
 80064c6:	ab11      	add	r3, sp, #68	; 0x44
 80064c8:	e6da      	b.n	8006280 <_vfiprintf_r+0x5bc>
 80064ca:	e9dd 2104 	ldrd	r2, r1, [sp, #16]
 80064ce:	1a54      	subs	r4, r2, r1
 80064d0:	2c00      	cmp	r4, #0
 80064d2:	f77f aed9 	ble.w	8006288 <_vfiprintf_r+0x5c4>
 80064d6:	4d3a      	ldr	r5, [pc, #232]	; (80065c0 <_vfiprintf_r+0x8fc>)
 80064d8:	2610      	movs	r6, #16
 80064da:	e9dd 210f 	ldrd	r2, r1, [sp, #60]	; 0x3c
 80064de:	2c10      	cmp	r4, #16
 80064e0:	f102 0201 	add.w	r2, r2, #1
 80064e4:	601d      	str	r5, [r3, #0]
 80064e6:	dc1d      	bgt.n	8006524 <_vfiprintf_r+0x860>
 80064e8:	605c      	str	r4, [r3, #4]
 80064ea:	2a07      	cmp	r2, #7
 80064ec:	440c      	add	r4, r1
 80064ee:	e9cd 240f 	strd	r2, r4, [sp, #60]	; 0x3c
 80064f2:	f77f aec9 	ble.w	8006288 <_vfiprintf_r+0x5c4>
 80064f6:	aa0e      	add	r2, sp, #56	; 0x38
 80064f8:	4639      	mov	r1, r7
 80064fa:	4648      	mov	r0, r9
 80064fc:	f7ff fbaf 	bl	8005c5e <__sprint_r>
 8006500:	2800      	cmp	r0, #0
 8006502:	f43f aec1 	beq.w	8006288 <_vfiprintf_r+0x5c4>
 8006506:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8006508:	07d9      	lsls	r1, r3, #31
 800650a:	d405      	bmi.n	8006518 <_vfiprintf_r+0x854>
 800650c:	89bb      	ldrh	r3, [r7, #12]
 800650e:	059a      	lsls	r2, r3, #22
 8006510:	d402      	bmi.n	8006518 <_vfiprintf_r+0x854>
 8006512:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8006514:	f7fe fb45 	bl	8004ba2 <__retarget_lock_release_recursive>
 8006518:	89bb      	ldrh	r3, [r7, #12]
 800651a:	065b      	lsls	r3, r3, #25
 800651c:	f57f ac03 	bpl.w	8005d26 <_vfiprintf_r+0x62>
 8006520:	f7ff bbfe 	b.w	8005d20 <_vfiprintf_r+0x5c>
 8006524:	3110      	adds	r1, #16
 8006526:	2a07      	cmp	r2, #7
 8006528:	e9cd 210f 	strd	r2, r1, [sp, #60]	; 0x3c
 800652c:	605e      	str	r6, [r3, #4]
 800652e:	dc02      	bgt.n	8006536 <_vfiprintf_r+0x872>
 8006530:	3308      	adds	r3, #8
 8006532:	3c10      	subs	r4, #16
 8006534:	e7d1      	b.n	80064da <_vfiprintf_r+0x816>
 8006536:	aa0e      	add	r2, sp, #56	; 0x38
 8006538:	4639      	mov	r1, r7
 800653a:	4648      	mov	r0, r9
 800653c:	f7ff fb8f 	bl	8005c5e <__sprint_r>
 8006540:	2800      	cmp	r0, #0
 8006542:	d1e0      	bne.n	8006506 <_vfiprintf_r+0x842>
 8006544:	ab11      	add	r3, sp, #68	; 0x44
 8006546:	e7f4      	b.n	8006532 <_vfiprintf_r+0x86e>
 8006548:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800654a:	b913      	cbnz	r3, 8006552 <_vfiprintf_r+0x88e>
 800654c:	2300      	movs	r3, #0
 800654e:	930f      	str	r3, [sp, #60]	; 0x3c
 8006550:	e7d9      	b.n	8006506 <_vfiprintf_r+0x842>
 8006552:	aa0e      	add	r2, sp, #56	; 0x38
 8006554:	4639      	mov	r1, r7
 8006556:	4648      	mov	r0, r9
 8006558:	f7ff fb81 	bl	8005c5e <__sprint_r>
 800655c:	2800      	cmp	r0, #0
 800655e:	d0f5      	beq.n	800654c <_vfiprintf_r+0x888>
 8006560:	e7d1      	b.n	8006506 <_vfiprintf_r+0x842>
 8006562:	ea54 0205 	orrs.w	r2, r4, r5
 8006566:	f8cd a014 	str.w	sl, [sp, #20]
 800656a:	f43f ada5 	beq.w	80060b8 <_vfiprintf_r+0x3f4>
 800656e:	2b01      	cmp	r3, #1
 8006570:	f43f aed8 	beq.w	8006324 <_vfiprintf_r+0x660>
 8006574:	2b02      	cmp	r3, #2
 8006576:	f10d 08e8 	add.w	r8, sp, #232	; 0xe8
 800657a:	f43f af23 	beq.w	80063c4 <_vfiprintf_r+0x700>
 800657e:	08e2      	lsrs	r2, r4, #3
 8006580:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
 8006584:	08e8      	lsrs	r0, r5, #3
 8006586:	f004 0307 	and.w	r3, r4, #7
 800658a:	4605      	mov	r5, r0
 800658c:	4614      	mov	r4, r2
 800658e:	3330      	adds	r3, #48	; 0x30
 8006590:	ea54 0205 	orrs.w	r2, r4, r5
 8006594:	4641      	mov	r1, r8
 8006596:	f808 3d01 	strb.w	r3, [r8, #-1]!
 800659a:	d1f0      	bne.n	800657e <_vfiprintf_r+0x8ba>
 800659c:	9a05      	ldr	r2, [sp, #20]
 800659e:	07d0      	lsls	r0, r2, #31
 80065a0:	d506      	bpl.n	80065b0 <_vfiprintf_r+0x8ec>
 80065a2:	2b30      	cmp	r3, #48	; 0x30
 80065a4:	d004      	beq.n	80065b0 <_vfiprintf_r+0x8ec>
 80065a6:	2330      	movs	r3, #48	; 0x30
 80065a8:	f808 3c01 	strb.w	r3, [r8, #-1]
 80065ac:	f1a1 0802 	sub.w	r8, r1, #2
 80065b0:	ab3a      	add	r3, sp, #232	; 0xe8
 80065b2:	eba3 0308 	sub.w	r3, r3, r8
 80065b6:	9d01      	ldr	r5, [sp, #4]
 80065b8:	f8dd a014 	ldr.w	sl, [sp, #20]
 80065bc:	9301      	str	r3, [sp, #4]
 80065be:	e5b6      	b.n	800612e <_vfiprintf_r+0x46a>
 80065c0:	08007454 	.word	0x08007454

080065c4 <__sbprintf>:
 80065c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065c6:	461f      	mov	r7, r3
 80065c8:	898b      	ldrh	r3, [r1, #12]
 80065ca:	f2ad 4d6c 	subw	sp, sp, #1132	; 0x46c
 80065ce:	f023 0302 	bic.w	r3, r3, #2
 80065d2:	f8ad 300c 	strh.w	r3, [sp, #12]
 80065d6:	6e4b      	ldr	r3, [r1, #100]	; 0x64
 80065d8:	9319      	str	r3, [sp, #100]	; 0x64
 80065da:	89cb      	ldrh	r3, [r1, #14]
 80065dc:	f8ad 300e 	strh.w	r3, [sp, #14]
 80065e0:	69cb      	ldr	r3, [r1, #28]
 80065e2:	9307      	str	r3, [sp, #28]
 80065e4:	6a4b      	ldr	r3, [r1, #36]	; 0x24
 80065e6:	9309      	str	r3, [sp, #36]	; 0x24
 80065e8:	ab1a      	add	r3, sp, #104	; 0x68
 80065ea:	9300      	str	r3, [sp, #0]
 80065ec:	9304      	str	r3, [sp, #16]
 80065ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80065f2:	4615      	mov	r5, r2
 80065f4:	4606      	mov	r6, r0
 80065f6:	9302      	str	r3, [sp, #8]
 80065f8:	9305      	str	r3, [sp, #20]
 80065fa:	a816      	add	r0, sp, #88	; 0x58
 80065fc:	2300      	movs	r3, #0
 80065fe:	460c      	mov	r4, r1
 8006600:	9306      	str	r3, [sp, #24]
 8006602:	f7fe facb 	bl	8004b9c <__retarget_lock_init_recursive>
 8006606:	462a      	mov	r2, r5
 8006608:	463b      	mov	r3, r7
 800660a:	4669      	mov	r1, sp
 800660c:	4630      	mov	r0, r6
 800660e:	f7ff fb59 	bl	8005cc4 <_vfiprintf_r>
 8006612:	1e05      	subs	r5, r0, #0
 8006614:	db07      	blt.n	8006626 <__sbprintf+0x62>
 8006616:	4669      	mov	r1, sp
 8006618:	4630      	mov	r0, r6
 800661a:	f7fd ff95 	bl	8004548 <_fflush_r>
 800661e:	2800      	cmp	r0, #0
 8006620:	bf18      	it	ne
 8006622:	f04f 35ff 	movne.w	r5, #4294967295
 8006626:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800662a:	9816      	ldr	r0, [sp, #88]	; 0x58
 800662c:	065b      	lsls	r3, r3, #25
 800662e:	bf42      	ittt	mi
 8006630:	89a3      	ldrhmi	r3, [r4, #12]
 8006632:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 8006636:	81a3      	strhmi	r3, [r4, #12]
 8006638:	f7fe fab1 	bl	8004b9e <__retarget_lock_close_recursive>
 800663c:	4628      	mov	r0, r5
 800663e:	f20d 4d6c 	addw	sp, sp, #1132	; 0x46c
 8006642:	bdf0      	pop	{r4, r5, r6, r7, pc}

08006644 <_write_r>:
 8006644:	b538      	push	{r3, r4, r5, lr}
 8006646:	4d07      	ldr	r5, [pc, #28]	; (8006664 <_write_r+0x20>)
 8006648:	4604      	mov	r4, r0
 800664a:	4608      	mov	r0, r1
 800664c:	4611      	mov	r1, r2
 800664e:	2200      	movs	r2, #0
 8006650:	602a      	str	r2, [r5, #0]
 8006652:	461a      	mov	r2, r3
 8006654:	f000 fb40 	bl	8006cd8 <_write>
 8006658:	1c43      	adds	r3, r0, #1
 800665a:	d102      	bne.n	8006662 <_write_r+0x1e>
 800665c:	682b      	ldr	r3, [r5, #0]
 800665e:	b103      	cbz	r3, 8006662 <_write_r+0x1e>
 8006660:	6023      	str	r3, [r4, #0]
 8006662:	bd38      	pop	{r3, r4, r5, pc}
 8006664:	20000b14 	.word	0x20000b14

08006668 <__register_exitproc>:
 8006668:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800666c:	4d1c      	ldr	r5, [pc, #112]	; (80066e0 <__register_exitproc+0x78>)
 800666e:	4606      	mov	r6, r0
 8006670:	6828      	ldr	r0, [r5, #0]
 8006672:	4698      	mov	r8, r3
 8006674:	460f      	mov	r7, r1
 8006676:	4691      	mov	r9, r2
 8006678:	f7fe fa92 	bl	8004ba0 <__retarget_lock_acquire_recursive>
 800667c:	4b19      	ldr	r3, [pc, #100]	; (80066e4 <__register_exitproc+0x7c>)
 800667e:	681b      	ldr	r3, [r3, #0]
 8006680:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
 8006684:	4628      	mov	r0, r5
 8006686:	b91c      	cbnz	r4, 8006690 <__register_exitproc+0x28>
 8006688:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
 800668c:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
 8006690:	6865      	ldr	r5, [r4, #4]
 8006692:	6800      	ldr	r0, [r0, #0]
 8006694:	2d1f      	cmp	r5, #31
 8006696:	dd05      	ble.n	80066a4 <__register_exitproc+0x3c>
 8006698:	f7fe fa83 	bl	8004ba2 <__retarget_lock_release_recursive>
 800669c:	f04f 30ff 	mov.w	r0, #4294967295
 80066a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80066a4:	b19e      	cbz	r6, 80066ce <__register_exitproc+0x66>
 80066a6:	eb04 0185 	add.w	r1, r4, r5, lsl #2
 80066aa:	2201      	movs	r2, #1
 80066ac:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
 80066b0:	f8d4 3188 	ldr.w	r3, [r4, #392]	; 0x188
 80066b4:	40aa      	lsls	r2, r5
 80066b6:	4313      	orrs	r3, r2
 80066b8:	2e02      	cmp	r6, #2
 80066ba:	f8c4 3188 	str.w	r3, [r4, #392]	; 0x188
 80066be:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
 80066c2:	bf02      	ittt	eq
 80066c4:	f8d4 318c 	ldreq.w	r3, [r4, #396]	; 0x18c
 80066c8:	431a      	orreq	r2, r3
 80066ca:	f8c4 218c 	streq.w	r2, [r4, #396]	; 0x18c
 80066ce:	1c6b      	adds	r3, r5, #1
 80066d0:	3502      	adds	r5, #2
 80066d2:	6063      	str	r3, [r4, #4]
 80066d4:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
 80066d8:	f7fe fa63 	bl	8004ba2 <__retarget_lock_release_recursive>
 80066dc:	2000      	movs	r0, #0
 80066de:	e7df      	b.n	80066a0 <__register_exitproc+0x38>
 80066e0:	20000440 	.word	0x20000440
 80066e4:	0800721c 	.word	0x0800721c

080066e8 <__assert_func>:
 80066e8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80066ea:	4614      	mov	r4, r2
 80066ec:	461a      	mov	r2, r3
 80066ee:	4b09      	ldr	r3, [pc, #36]	; (8006714 <__assert_func+0x2c>)
 80066f0:	681b      	ldr	r3, [r3, #0]
 80066f2:	4605      	mov	r5, r0
 80066f4:	68d8      	ldr	r0, [r3, #12]
 80066f6:	b14c      	cbz	r4, 800670c <__assert_func+0x24>
 80066f8:	4b07      	ldr	r3, [pc, #28]	; (8006718 <__assert_func+0x30>)
 80066fa:	9100      	str	r1, [sp, #0]
 80066fc:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8006700:	4906      	ldr	r1, [pc, #24]	; (800671c <__assert_func+0x34>)
 8006702:	462b      	mov	r3, r5
 8006704:	f000 f8a4 	bl	8006850 <fiprintf>
 8006708:	f000 f9e9 	bl	8006ade <abort>
 800670c:	4b04      	ldr	r3, [pc, #16]	; (8006720 <__assert_func+0x38>)
 800670e:	461c      	mov	r4, r3
 8006710:	e7f3      	b.n	80066fa <__assert_func+0x12>
 8006712:	bf00      	nop
 8006714:	20000014 	.word	0x20000014
 8006718:	08007474 	.word	0x08007474
 800671c:	08007481 	.word	0x08007481
 8006720:	080074af 	.word	0x080074af

08006724 <_calloc_r>:
 8006724:	b510      	push	{r4, lr}
 8006726:	4351      	muls	r1, r2
 8006728:	f7fe faa8 	bl	8004c7c <_malloc_r>
 800672c:	4604      	mov	r4, r0
 800672e:	b198      	cbz	r0, 8006758 <_calloc_r+0x34>
 8006730:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8006734:	f022 0203 	bic.w	r2, r2, #3
 8006738:	3a04      	subs	r2, #4
 800673a:	2a24      	cmp	r2, #36	; 0x24
 800673c:	d81b      	bhi.n	8006776 <_calloc_r+0x52>
 800673e:	2a13      	cmp	r2, #19
 8006740:	d917      	bls.n	8006772 <_calloc_r+0x4e>
 8006742:	2100      	movs	r1, #0
 8006744:	2a1b      	cmp	r2, #27
 8006746:	e9c0 1100 	strd	r1, r1, [r0]
 800674a:	d807      	bhi.n	800675c <_calloc_r+0x38>
 800674c:	f100 0308 	add.w	r3, r0, #8
 8006750:	2200      	movs	r2, #0
 8006752:	e9c3 2200 	strd	r2, r2, [r3]
 8006756:	609a      	str	r2, [r3, #8]
 8006758:	4620      	mov	r0, r4
 800675a:	bd10      	pop	{r4, pc}
 800675c:	2a24      	cmp	r2, #36	; 0x24
 800675e:	e9c0 1102 	strd	r1, r1, [r0, #8]
 8006762:	bf11      	iteee	ne
 8006764:	f100 0310 	addne.w	r3, r0, #16
 8006768:	6101      	streq	r1, [r0, #16]
 800676a:	f100 0318 	addeq.w	r3, r0, #24
 800676e:	6141      	streq	r1, [r0, #20]
 8006770:	e7ee      	b.n	8006750 <_calloc_r+0x2c>
 8006772:	4603      	mov	r3, r0
 8006774:	e7ec      	b.n	8006750 <_calloc_r+0x2c>
 8006776:	2100      	movs	r1, #0
 8006778:	f7fb fce0 	bl	800213c <memset>
 800677c:	e7ec      	b.n	8006758 <_calloc_r+0x34>
	...

08006780 <_close_r>:
 8006780:	b538      	push	{r3, r4, r5, lr}
 8006782:	4d06      	ldr	r5, [pc, #24]	; (800679c <_close_r+0x1c>)
 8006784:	2300      	movs	r3, #0
 8006786:	4604      	mov	r4, r0
 8006788:	4608      	mov	r0, r1
 800678a:	602b      	str	r3, [r5, #0]
 800678c:	f000 fad2 	bl	8006d34 <_close>
 8006790:	1c43      	adds	r3, r0, #1
 8006792:	d102      	bne.n	800679a <_close_r+0x1a>
 8006794:	682b      	ldr	r3, [r5, #0]
 8006796:	b103      	cbz	r3, 800679a <_close_r+0x1a>
 8006798:	6023      	str	r3, [r4, #0]
 800679a:	bd38      	pop	{r3, r4, r5, pc}
 800679c:	20000b14 	.word	0x20000b14

080067a0 <_fclose_r>:
 80067a0:	b570      	push	{r4, r5, r6, lr}
 80067a2:	4606      	mov	r6, r0
 80067a4:	460c      	mov	r4, r1
 80067a6:	b911      	cbnz	r1, 80067ae <_fclose_r+0xe>
 80067a8:	2500      	movs	r5, #0
 80067aa:	4628      	mov	r0, r5
 80067ac:	bd70      	pop	{r4, r5, r6, pc}
 80067ae:	b118      	cbz	r0, 80067b8 <_fclose_r+0x18>
 80067b0:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80067b2:	b90b      	cbnz	r3, 80067b8 <_fclose_r+0x18>
 80067b4:	f7fd ff34 	bl	8004620 <__sinit>
 80067b8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80067ba:	07d8      	lsls	r0, r3, #31
 80067bc:	d405      	bmi.n	80067ca <_fclose_r+0x2a>
 80067be:	89a3      	ldrh	r3, [r4, #12]
 80067c0:	0599      	lsls	r1, r3, #22
 80067c2:	d402      	bmi.n	80067ca <_fclose_r+0x2a>
 80067c4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80067c6:	f7fe f9eb 	bl	8004ba0 <__retarget_lock_acquire_recursive>
 80067ca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80067ce:	b93b      	cbnz	r3, 80067e0 <_fclose_r+0x40>
 80067d0:	6e65      	ldr	r5, [r4, #100]	; 0x64
 80067d2:	f015 0501 	ands.w	r5, r5, #1
 80067d6:	d1e7      	bne.n	80067a8 <_fclose_r+0x8>
 80067d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80067da:	f7fe f9e2 	bl	8004ba2 <__retarget_lock_release_recursive>
 80067de:	e7e4      	b.n	80067aa <_fclose_r+0xa>
 80067e0:	4621      	mov	r1, r4
 80067e2:	4630      	mov	r0, r6
 80067e4:	f7fd fe22 	bl	800442c <__sflush_r>
 80067e8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80067ea:	4605      	mov	r5, r0
 80067ec:	b133      	cbz	r3, 80067fc <_fclose_r+0x5c>
 80067ee:	69e1      	ldr	r1, [r4, #28]
 80067f0:	4630      	mov	r0, r6
 80067f2:	4798      	blx	r3
 80067f4:	2800      	cmp	r0, #0
 80067f6:	bfb8      	it	lt
 80067f8:	f04f 35ff 	movlt.w	r5, #4294967295
 80067fc:	89a3      	ldrh	r3, [r4, #12]
 80067fe:	061a      	lsls	r2, r3, #24
 8006800:	d503      	bpl.n	800680a <_fclose_r+0x6a>
 8006802:	6921      	ldr	r1, [r4, #16]
 8006804:	4630      	mov	r0, r6
 8006806:	f7fd ff9b 	bl	8004740 <_free_r>
 800680a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800680c:	b141      	cbz	r1, 8006820 <_fclose_r+0x80>
 800680e:	f104 0340 	add.w	r3, r4, #64	; 0x40
 8006812:	4299      	cmp	r1, r3
 8006814:	d002      	beq.n	800681c <_fclose_r+0x7c>
 8006816:	4630      	mov	r0, r6
 8006818:	f7fd ff92 	bl	8004740 <_free_r>
 800681c:	2300      	movs	r3, #0
 800681e:	6323      	str	r3, [r4, #48]	; 0x30
 8006820:	6c61      	ldr	r1, [r4, #68]	; 0x44
 8006822:	b121      	cbz	r1, 800682e <_fclose_r+0x8e>
 8006824:	4630      	mov	r0, r6
 8006826:	f7fd ff8b 	bl	8004740 <_free_r>
 800682a:	2300      	movs	r3, #0
 800682c:	6463      	str	r3, [r4, #68]	; 0x44
 800682e:	f7fd fedf 	bl	80045f0 <__sfp_lock_acquire>
 8006832:	2300      	movs	r3, #0
 8006834:	81a3      	strh	r3, [r4, #12]
 8006836:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006838:	07db      	lsls	r3, r3, #31
 800683a:	d402      	bmi.n	8006842 <_fclose_r+0xa2>
 800683c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800683e:	f7fe f9b0 	bl	8004ba2 <__retarget_lock_release_recursive>
 8006842:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006844:	f7fe f9ab 	bl	8004b9e <__retarget_lock_close_recursive>
 8006848:	f7fd fed8 	bl	80045fc <__sfp_lock_release>
 800684c:	e7ad      	b.n	80067aa <_fclose_r+0xa>
	...

08006850 <fiprintf>:
 8006850:	b40e      	push	{r1, r2, r3}
 8006852:	b503      	push	{r0, r1, lr}
 8006854:	4601      	mov	r1, r0
 8006856:	ab03      	add	r3, sp, #12
 8006858:	4805      	ldr	r0, [pc, #20]	; (8006870 <fiprintf+0x20>)
 800685a:	f853 2b04 	ldr.w	r2, [r3], #4
 800685e:	6800      	ldr	r0, [r0, #0]
 8006860:	9301      	str	r3, [sp, #4]
 8006862:	f7ff fa2f 	bl	8005cc4 <_vfiprintf_r>
 8006866:	b002      	add	sp, #8
 8006868:	f85d eb04 	ldr.w	lr, [sp], #4
 800686c:	b003      	add	sp, #12
 800686e:	4770      	bx	lr
 8006870:	20000014 	.word	0x20000014

08006874 <__fputwc>:
 8006874:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006878:	4680      	mov	r8, r0
 800687a:	460e      	mov	r6, r1
 800687c:	4615      	mov	r5, r2
 800687e:	f000 f885 	bl	800698c <__locale_mb_cur_max>
 8006882:	2801      	cmp	r0, #1
 8006884:	4604      	mov	r4, r0
 8006886:	d11b      	bne.n	80068c0 <__fputwc+0x4c>
 8006888:	1e73      	subs	r3, r6, #1
 800688a:	2bfe      	cmp	r3, #254	; 0xfe
 800688c:	d818      	bhi.n	80068c0 <__fputwc+0x4c>
 800688e:	f88d 6004 	strb.w	r6, [sp, #4]
 8006892:	2700      	movs	r7, #0
 8006894:	f10d 0904 	add.w	r9, sp, #4
 8006898:	42a7      	cmp	r7, r4
 800689a:	d020      	beq.n	80068de <__fputwc+0x6a>
 800689c:	68ab      	ldr	r3, [r5, #8]
 800689e:	f817 1009 	ldrb.w	r1, [r7, r9]
 80068a2:	3b01      	subs	r3, #1
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	60ab      	str	r3, [r5, #8]
 80068a8:	da04      	bge.n	80068b4 <__fputwc+0x40>
 80068aa:	69aa      	ldr	r2, [r5, #24]
 80068ac:	4293      	cmp	r3, r2
 80068ae:	db1a      	blt.n	80068e6 <__fputwc+0x72>
 80068b0:	290a      	cmp	r1, #10
 80068b2:	d018      	beq.n	80068e6 <__fputwc+0x72>
 80068b4:	682b      	ldr	r3, [r5, #0]
 80068b6:	1c5a      	adds	r2, r3, #1
 80068b8:	602a      	str	r2, [r5, #0]
 80068ba:	7019      	strb	r1, [r3, #0]
 80068bc:	3701      	adds	r7, #1
 80068be:	e7eb      	b.n	8006898 <__fputwc+0x24>
 80068c0:	4632      	mov	r2, r6
 80068c2:	f105 035c 	add.w	r3, r5, #92	; 0x5c
 80068c6:	a901      	add	r1, sp, #4
 80068c8:	4640      	mov	r0, r8
 80068ca:	f000 f8e5 	bl	8006a98 <_wcrtomb_r>
 80068ce:	1c42      	adds	r2, r0, #1
 80068d0:	4604      	mov	r4, r0
 80068d2:	d1de      	bne.n	8006892 <__fputwc+0x1e>
 80068d4:	89ab      	ldrh	r3, [r5, #12]
 80068d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80068da:	81ab      	strh	r3, [r5, #12]
 80068dc:	4606      	mov	r6, r0
 80068de:	4630      	mov	r0, r6
 80068e0:	b003      	add	sp, #12
 80068e2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80068e6:	462a      	mov	r2, r5
 80068e8:	4640      	mov	r0, r8
 80068ea:	f000 f88b 	bl	8006a04 <__swbuf_r>
 80068ee:	1c43      	adds	r3, r0, #1
 80068f0:	d1e4      	bne.n	80068bc <__fputwc+0x48>
 80068f2:	4606      	mov	r6, r0
 80068f4:	e7f3      	b.n	80068de <__fputwc+0x6a>

080068f6 <_fputwc_r>:
 80068f6:	6e53      	ldr	r3, [r2, #100]	; 0x64
 80068f8:	07db      	lsls	r3, r3, #31
 80068fa:	b570      	push	{r4, r5, r6, lr}
 80068fc:	4605      	mov	r5, r0
 80068fe:	460e      	mov	r6, r1
 8006900:	4614      	mov	r4, r2
 8006902:	d405      	bmi.n	8006910 <_fputwc_r+0x1a>
 8006904:	8993      	ldrh	r3, [r2, #12]
 8006906:	0598      	lsls	r0, r3, #22
 8006908:	d402      	bmi.n	8006910 <_fputwc_r+0x1a>
 800690a:	6d90      	ldr	r0, [r2, #88]	; 0x58
 800690c:	f7fe f948 	bl	8004ba0 <__retarget_lock_acquire_recursive>
 8006910:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006914:	0499      	lsls	r1, r3, #18
 8006916:	d406      	bmi.n	8006926 <_fputwc_r+0x30>
 8006918:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800691c:	81a3      	strh	r3, [r4, #12]
 800691e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006920:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006924:	6663      	str	r3, [r4, #100]	; 0x64
 8006926:	4622      	mov	r2, r4
 8006928:	4628      	mov	r0, r5
 800692a:	4631      	mov	r1, r6
 800692c:	f7ff ffa2 	bl	8006874 <__fputwc>
 8006930:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006932:	07da      	lsls	r2, r3, #31
 8006934:	4605      	mov	r5, r0
 8006936:	d405      	bmi.n	8006944 <_fputwc_r+0x4e>
 8006938:	89a3      	ldrh	r3, [r4, #12]
 800693a:	059b      	lsls	r3, r3, #22
 800693c:	d402      	bmi.n	8006944 <_fputwc_r+0x4e>
 800693e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8006940:	f7fe f92f 	bl	8004ba2 <__retarget_lock_release_recursive>
 8006944:	4628      	mov	r0, r5
 8006946:	bd70      	pop	{r4, r5, r6, pc}

08006948 <_fstat_r>:
 8006948:	b538      	push	{r3, r4, r5, lr}
 800694a:	4d07      	ldr	r5, [pc, #28]	; (8006968 <_fstat_r+0x20>)
 800694c:	2300      	movs	r3, #0
 800694e:	4604      	mov	r4, r0
 8006950:	4608      	mov	r0, r1
 8006952:	4611      	mov	r1, r2
 8006954:	602b      	str	r3, [r5, #0]
 8006956:	f000 fa36 	bl	8006dc6 <_fstat>
 800695a:	1c43      	adds	r3, r0, #1
 800695c:	d102      	bne.n	8006964 <_fstat_r+0x1c>
 800695e:	682b      	ldr	r3, [r5, #0]
 8006960:	b103      	cbz	r3, 8006964 <_fstat_r+0x1c>
 8006962:	6023      	str	r3, [r4, #0]
 8006964:	bd38      	pop	{r3, r4, r5, pc}
 8006966:	bf00      	nop
 8006968:	20000b14 	.word	0x20000b14

0800696c <_isatty_r>:
 800696c:	b538      	push	{r3, r4, r5, lr}
 800696e:	4d06      	ldr	r5, [pc, #24]	; (8006988 <_isatty_r+0x1c>)
 8006970:	2300      	movs	r3, #0
 8006972:	4604      	mov	r4, r0
 8006974:	4608      	mov	r0, r1
 8006976:	602b      	str	r3, [r5, #0]
 8006978:	f000 fb96 	bl	80070a8 <_isatty>
 800697c:	1c43      	adds	r3, r0, #1
 800697e:	d102      	bne.n	8006986 <_isatty_r+0x1a>
 8006980:	682b      	ldr	r3, [r5, #0]
 8006982:	b103      	cbz	r3, 8006986 <_isatty_r+0x1a>
 8006984:	6023      	str	r3, [r4, #0]
 8006986:	bd38      	pop	{r3, r4, r5, pc}
 8006988:	20000b14 	.word	0x20000b14

0800698c <__locale_mb_cur_max>:
 800698c:	4b01      	ldr	r3, [pc, #4]	; (8006994 <__locale_mb_cur_max+0x8>)
 800698e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 8006992:	4770      	bx	lr
 8006994:	20000854 	.word	0x20000854

08006998 <_lseek_r>:
 8006998:	b538      	push	{r3, r4, r5, lr}
 800699a:	4d07      	ldr	r5, [pc, #28]	; (80069b8 <_lseek_r+0x20>)
 800699c:	4604      	mov	r4, r0
 800699e:	4608      	mov	r0, r1
 80069a0:	4611      	mov	r1, r2
 80069a2:	2200      	movs	r2, #0
 80069a4:	602a      	str	r2, [r5, #0]
 80069a6:	461a      	mov	r2, r3
 80069a8:	f000 f984 	bl	8006cb4 <_lseek>
 80069ac:	1c43      	adds	r3, r0, #1
 80069ae:	d102      	bne.n	80069b6 <_lseek_r+0x1e>
 80069b0:	682b      	ldr	r3, [r5, #0]
 80069b2:	b103      	cbz	r3, 80069b6 <_lseek_r+0x1e>
 80069b4:	6023      	str	r3, [r4, #0]
 80069b6:	bd38      	pop	{r3, r4, r5, pc}
 80069b8:	20000b14 	.word	0x20000b14

080069bc <__ascii_mbtowc>:
 80069bc:	b082      	sub	sp, #8
 80069be:	b901      	cbnz	r1, 80069c2 <__ascii_mbtowc+0x6>
 80069c0:	a901      	add	r1, sp, #4
 80069c2:	b142      	cbz	r2, 80069d6 <__ascii_mbtowc+0x1a>
 80069c4:	b14b      	cbz	r3, 80069da <__ascii_mbtowc+0x1e>
 80069c6:	7813      	ldrb	r3, [r2, #0]
 80069c8:	600b      	str	r3, [r1, #0]
 80069ca:	7812      	ldrb	r2, [r2, #0]
 80069cc:	1e10      	subs	r0, r2, #0
 80069ce:	bf18      	it	ne
 80069d0:	2001      	movne	r0, #1
 80069d2:	b002      	add	sp, #8
 80069d4:	4770      	bx	lr
 80069d6:	4610      	mov	r0, r2
 80069d8:	e7fb      	b.n	80069d2 <__ascii_mbtowc+0x16>
 80069da:	f06f 0001 	mvn.w	r0, #1
 80069de:	e7f8      	b.n	80069d2 <__ascii_mbtowc+0x16>

080069e0 <_read_r>:
 80069e0:	b538      	push	{r3, r4, r5, lr}
 80069e2:	4d07      	ldr	r5, [pc, #28]	; (8006a00 <_read_r+0x20>)
 80069e4:	4604      	mov	r4, r0
 80069e6:	4608      	mov	r0, r1
 80069e8:	4611      	mov	r1, r2
 80069ea:	2200      	movs	r2, #0
 80069ec:	602a      	str	r2, [r5, #0]
 80069ee:	461a      	mov	r2, r3
 80069f0:	f000 f90a 	bl	8006c08 <_read>
 80069f4:	1c43      	adds	r3, r0, #1
 80069f6:	d102      	bne.n	80069fe <_read_r+0x1e>
 80069f8:	682b      	ldr	r3, [r5, #0]
 80069fa:	b103      	cbz	r3, 80069fe <_read_r+0x1e>
 80069fc:	6023      	str	r3, [r4, #0]
 80069fe:	bd38      	pop	{r3, r4, r5, pc}
 8006a00:	20000b14 	.word	0x20000b14

08006a04 <__swbuf_r>:
 8006a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a06:	460e      	mov	r6, r1
 8006a08:	4614      	mov	r4, r2
 8006a0a:	4605      	mov	r5, r0
 8006a0c:	b118      	cbz	r0, 8006a16 <__swbuf_r+0x12>
 8006a0e:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006a10:	b90b      	cbnz	r3, 8006a16 <__swbuf_r+0x12>
 8006a12:	f7fd fe05 	bl	8004620 <__sinit>
 8006a16:	69a3      	ldr	r3, [r4, #24]
 8006a18:	60a3      	str	r3, [r4, #8]
 8006a1a:	89a3      	ldrh	r3, [r4, #12]
 8006a1c:	0719      	lsls	r1, r3, #28
 8006a1e:	d529      	bpl.n	8006a74 <__swbuf_r+0x70>
 8006a20:	6923      	ldr	r3, [r4, #16]
 8006a22:	b33b      	cbz	r3, 8006a74 <__swbuf_r+0x70>
 8006a24:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006a28:	b2f6      	uxtb	r6, r6
 8006a2a:	049a      	lsls	r2, r3, #18
 8006a2c:	4637      	mov	r7, r6
 8006a2e:	d52a      	bpl.n	8006a86 <__swbuf_r+0x82>
 8006a30:	6823      	ldr	r3, [r4, #0]
 8006a32:	6920      	ldr	r0, [r4, #16]
 8006a34:	1a18      	subs	r0, r3, r0
 8006a36:	6963      	ldr	r3, [r4, #20]
 8006a38:	4283      	cmp	r3, r0
 8006a3a:	dc04      	bgt.n	8006a46 <__swbuf_r+0x42>
 8006a3c:	4621      	mov	r1, r4
 8006a3e:	4628      	mov	r0, r5
 8006a40:	f7fd fd82 	bl	8004548 <_fflush_r>
 8006a44:	b9e0      	cbnz	r0, 8006a80 <__swbuf_r+0x7c>
 8006a46:	68a3      	ldr	r3, [r4, #8]
 8006a48:	3b01      	subs	r3, #1
 8006a4a:	60a3      	str	r3, [r4, #8]
 8006a4c:	6823      	ldr	r3, [r4, #0]
 8006a4e:	1c5a      	adds	r2, r3, #1
 8006a50:	6022      	str	r2, [r4, #0]
 8006a52:	701e      	strb	r6, [r3, #0]
 8006a54:	6963      	ldr	r3, [r4, #20]
 8006a56:	3001      	adds	r0, #1
 8006a58:	4283      	cmp	r3, r0
 8006a5a:	d004      	beq.n	8006a66 <__swbuf_r+0x62>
 8006a5c:	89a3      	ldrh	r3, [r4, #12]
 8006a5e:	07db      	lsls	r3, r3, #31
 8006a60:	d506      	bpl.n	8006a70 <__swbuf_r+0x6c>
 8006a62:	2e0a      	cmp	r6, #10
 8006a64:	d104      	bne.n	8006a70 <__swbuf_r+0x6c>
 8006a66:	4621      	mov	r1, r4
 8006a68:	4628      	mov	r0, r5
 8006a6a:	f7fd fd6d 	bl	8004548 <_fflush_r>
 8006a6e:	b938      	cbnz	r0, 8006a80 <__swbuf_r+0x7c>
 8006a70:	4638      	mov	r0, r7
 8006a72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8006a74:	4621      	mov	r1, r4
 8006a76:	4628      	mov	r0, r5
 8006a78:	f7fc fe2a 	bl	80036d0 <__swsetup_r>
 8006a7c:	2800      	cmp	r0, #0
 8006a7e:	d0d1      	beq.n	8006a24 <__swbuf_r+0x20>
 8006a80:	f04f 37ff 	mov.w	r7, #4294967295
 8006a84:	e7f4      	b.n	8006a70 <__swbuf_r+0x6c>
 8006a86:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006a8a:	81a3      	strh	r3, [r4, #12]
 8006a8c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8006a8e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006a92:	6663      	str	r3, [r4, #100]	; 0x64
 8006a94:	e7cc      	b.n	8006a30 <__swbuf_r+0x2c>
	...

08006a98 <_wcrtomb_r>:
 8006a98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006a9a:	4c09      	ldr	r4, [pc, #36]	; (8006ac0 <_wcrtomb_r+0x28>)
 8006a9c:	b085      	sub	sp, #20
 8006a9e:	f8d4 70e0 	ldr.w	r7, [r4, #224]	; 0xe0
 8006aa2:	4605      	mov	r5, r0
 8006aa4:	461e      	mov	r6, r3
 8006aa6:	b909      	cbnz	r1, 8006aac <_wcrtomb_r+0x14>
 8006aa8:	460a      	mov	r2, r1
 8006aaa:	a901      	add	r1, sp, #4
 8006aac:	47b8      	blx	r7
 8006aae:	1c43      	adds	r3, r0, #1
 8006ab0:	bf01      	itttt	eq
 8006ab2:	2300      	moveq	r3, #0
 8006ab4:	6033      	streq	r3, [r6, #0]
 8006ab6:	238a      	moveq	r3, #138	; 0x8a
 8006ab8:	602b      	streq	r3, [r5, #0]
 8006aba:	b005      	add	sp, #20
 8006abc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006abe:	bf00      	nop
 8006ac0:	20000854 	.word	0x20000854

08006ac4 <__ascii_wctomb>:
 8006ac4:	4603      	mov	r3, r0
 8006ac6:	4608      	mov	r0, r1
 8006ac8:	b141      	cbz	r1, 8006adc <__ascii_wctomb+0x18>
 8006aca:	2aff      	cmp	r2, #255	; 0xff
 8006acc:	d904      	bls.n	8006ad8 <__ascii_wctomb+0x14>
 8006ace:	228a      	movs	r2, #138	; 0x8a
 8006ad0:	601a      	str	r2, [r3, #0]
 8006ad2:	f04f 30ff 	mov.w	r0, #4294967295
 8006ad6:	4770      	bx	lr
 8006ad8:	700a      	strb	r2, [r1, #0]
 8006ada:	2001      	movs	r0, #1
 8006adc:	4770      	bx	lr

08006ade <abort>:
 8006ade:	b508      	push	{r3, lr}
 8006ae0:	2006      	movs	r0, #6
 8006ae2:	f000 f82d 	bl	8006b40 <raise>
 8006ae6:	2001      	movs	r0, #1
 8006ae8:	f000 fafa 	bl	80070e0 <_exit>

08006aec <_raise_r>:
 8006aec:	291f      	cmp	r1, #31
 8006aee:	b538      	push	{r3, r4, r5, lr}
 8006af0:	4604      	mov	r4, r0
 8006af2:	460d      	mov	r5, r1
 8006af4:	d904      	bls.n	8006b00 <_raise_r+0x14>
 8006af6:	2316      	movs	r3, #22
 8006af8:	6003      	str	r3, [r0, #0]
 8006afa:	f04f 30ff 	mov.w	r0, #4294967295
 8006afe:	bd38      	pop	{r3, r4, r5, pc}
 8006b00:	f8d0 22dc 	ldr.w	r2, [r0, #732]	; 0x2dc
 8006b04:	b112      	cbz	r2, 8006b0c <_raise_r+0x20>
 8006b06:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8006b0a:	b94b      	cbnz	r3, 8006b20 <_raise_r+0x34>
 8006b0c:	4620      	mov	r0, r4
 8006b0e:	f000 f831 	bl	8006b74 <_getpid_r>
 8006b12:	462a      	mov	r2, r5
 8006b14:	4601      	mov	r1, r0
 8006b16:	4620      	mov	r0, r4
 8006b18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8006b1c:	f000 b818 	b.w	8006b50 <_kill_r>
 8006b20:	2b01      	cmp	r3, #1
 8006b22:	d00a      	beq.n	8006b3a <_raise_r+0x4e>
 8006b24:	1c59      	adds	r1, r3, #1
 8006b26:	d103      	bne.n	8006b30 <_raise_r+0x44>
 8006b28:	2316      	movs	r3, #22
 8006b2a:	6003      	str	r3, [r0, #0]
 8006b2c:	2001      	movs	r0, #1
 8006b2e:	e7e6      	b.n	8006afe <_raise_r+0x12>
 8006b30:	2400      	movs	r4, #0
 8006b32:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8006b36:	4628      	mov	r0, r5
 8006b38:	4798      	blx	r3
 8006b3a:	2000      	movs	r0, #0
 8006b3c:	e7df      	b.n	8006afe <_raise_r+0x12>
	...

08006b40 <raise>:
 8006b40:	4b02      	ldr	r3, [pc, #8]	; (8006b4c <raise+0xc>)
 8006b42:	4601      	mov	r1, r0
 8006b44:	6818      	ldr	r0, [r3, #0]
 8006b46:	f7ff bfd1 	b.w	8006aec <_raise_r>
 8006b4a:	bf00      	nop
 8006b4c:	20000014 	.word	0x20000014

08006b50 <_kill_r>:
 8006b50:	b538      	push	{r3, r4, r5, lr}
 8006b52:	4d07      	ldr	r5, [pc, #28]	; (8006b70 <_kill_r+0x20>)
 8006b54:	2300      	movs	r3, #0
 8006b56:	4604      	mov	r4, r0
 8006b58:	4608      	mov	r0, r1
 8006b5a:	4611      	mov	r1, r2
 8006b5c:	602b      	str	r3, [r5, #0]
 8006b5e:	f000 fadd 	bl	800711c <_kill>
 8006b62:	1c43      	adds	r3, r0, #1
 8006b64:	d102      	bne.n	8006b6c <_kill_r+0x1c>
 8006b66:	682b      	ldr	r3, [r5, #0]
 8006b68:	b103      	cbz	r3, 8006b6c <_kill_r+0x1c>
 8006b6a:	6023      	str	r3, [r4, #0]
 8006b6c:	bd38      	pop	{r3, r4, r5, pc}
 8006b6e:	bf00      	nop
 8006b70:	20000b14 	.word	0x20000b14

08006b74 <_getpid_r>:
 8006b74:	f000 b904 	b.w	8006d80 <_getpid>

08006b78 <findslot>:
 8006b78:	4b0a      	ldr	r3, [pc, #40]	; (8006ba4 <findslot+0x2c>)
 8006b7a:	b510      	push	{r4, lr}
 8006b7c:	4604      	mov	r4, r0
 8006b7e:	6818      	ldr	r0, [r3, #0]
 8006b80:	b118      	cbz	r0, 8006b8a <findslot+0x12>
 8006b82:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8006b84:	b90b      	cbnz	r3, 8006b8a <findslot+0x12>
 8006b86:	f7fd fd4b 	bl	8004620 <__sinit>
 8006b8a:	2c13      	cmp	r4, #19
 8006b8c:	d807      	bhi.n	8006b9e <findslot+0x26>
 8006b8e:	4806      	ldr	r0, [pc, #24]	; (8006ba8 <findslot+0x30>)
 8006b90:	f850 2034 	ldr.w	r2, [r0, r4, lsl #3]
 8006b94:	3201      	adds	r2, #1
 8006b96:	d002      	beq.n	8006b9e <findslot+0x26>
 8006b98:	eb00 00c4 	add.w	r0, r0, r4, lsl #3
 8006b9c:	bd10      	pop	{r4, pc}
 8006b9e:	2000      	movs	r0, #0
 8006ba0:	e7fc      	b.n	8006b9c <findslot+0x24>
 8006ba2:	bf00      	nop
 8006ba4:	20000014 	.word	0x20000014
 8006ba8:	20000a40 	.word	0x20000a40

08006bac <checkerror>:
 8006bac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bae:	1c43      	adds	r3, r0, #1
 8006bb0:	4604      	mov	r4, r0
 8006bb2:	d109      	bne.n	8006bc8 <checkerror+0x1c>
 8006bb4:	f7fb fa98 	bl	80020e8 <__errno>
 8006bb8:	2613      	movs	r6, #19
 8006bba:	4605      	mov	r5, r0
 8006bbc:	2700      	movs	r7, #0
 8006bbe:	4630      	mov	r0, r6
 8006bc0:	4639      	mov	r1, r7
 8006bc2:	beab      	bkpt	0x00ab
 8006bc4:	4606      	mov	r6, r0
 8006bc6:	602e      	str	r6, [r5, #0]
 8006bc8:	4620      	mov	r0, r4
 8006bca:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006bcc <error>:
 8006bcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006bce:	4604      	mov	r4, r0
 8006bd0:	f7fb fa8a 	bl	80020e8 <__errno>
 8006bd4:	2613      	movs	r6, #19
 8006bd6:	4605      	mov	r5, r0
 8006bd8:	2700      	movs	r7, #0
 8006bda:	4630      	mov	r0, r6
 8006bdc:	4639      	mov	r1, r7
 8006bde:	beab      	bkpt	0x00ab
 8006be0:	4606      	mov	r6, r0
 8006be2:	602e      	str	r6, [r5, #0]
 8006be4:	4620      	mov	r0, r4
 8006be6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08006be8 <_swiread>:
 8006be8:	b530      	push	{r4, r5, lr}
 8006bea:	b085      	sub	sp, #20
 8006bec:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8006bf0:	9203      	str	r2, [sp, #12]
 8006bf2:	2406      	movs	r4, #6
 8006bf4:	ad01      	add	r5, sp, #4
 8006bf6:	4620      	mov	r0, r4
 8006bf8:	4629      	mov	r1, r5
 8006bfa:	beab      	bkpt	0x00ab
 8006bfc:	4604      	mov	r4, r0
 8006bfe:	4620      	mov	r0, r4
 8006c00:	f7ff ffd4 	bl	8006bac <checkerror>
 8006c04:	b005      	add	sp, #20
 8006c06:	bd30      	pop	{r4, r5, pc}

08006c08 <_read>:
 8006c08:	b570      	push	{r4, r5, r6, lr}
 8006c0a:	460e      	mov	r6, r1
 8006c0c:	4615      	mov	r5, r2
 8006c0e:	f7ff ffb3 	bl	8006b78 <findslot>
 8006c12:	4604      	mov	r4, r0
 8006c14:	b930      	cbnz	r0, 8006c24 <_read+0x1c>
 8006c16:	f7fb fa67 	bl	80020e8 <__errno>
 8006c1a:	2309      	movs	r3, #9
 8006c1c:	6003      	str	r3, [r0, #0]
 8006c1e:	f04f 30ff 	mov.w	r0, #4294967295
 8006c22:	bd70      	pop	{r4, r5, r6, pc}
 8006c24:	6800      	ldr	r0, [r0, #0]
 8006c26:	462a      	mov	r2, r5
 8006c28:	4631      	mov	r1, r6
 8006c2a:	f7ff ffdd 	bl	8006be8 <_swiread>
 8006c2e:	1c43      	adds	r3, r0, #1
 8006c30:	bf1f      	itttt	ne
 8006c32:	6863      	ldrne	r3, [r4, #4]
 8006c34:	1a28      	subne	r0, r5, r0
 8006c36:	181b      	addne	r3, r3, r0
 8006c38:	6063      	strne	r3, [r4, #4]
 8006c3a:	e7f2      	b.n	8006c22 <_read+0x1a>

08006c3c <_swilseek>:
 8006c3c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c3e:	460c      	mov	r4, r1
 8006c40:	4616      	mov	r6, r2
 8006c42:	f7ff ff99 	bl	8006b78 <findslot>
 8006c46:	4605      	mov	r5, r0
 8006c48:	b940      	cbnz	r0, 8006c5c <_swilseek+0x20>
 8006c4a:	f7fb fa4d 	bl	80020e8 <__errno>
 8006c4e:	2309      	movs	r3, #9
 8006c50:	6003      	str	r3, [r0, #0]
 8006c52:	f04f 34ff 	mov.w	r4, #4294967295
 8006c56:	4620      	mov	r0, r4
 8006c58:	b003      	add	sp, #12
 8006c5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006c5c:	2e02      	cmp	r6, #2
 8006c5e:	d903      	bls.n	8006c68 <_swilseek+0x2c>
 8006c60:	f7fb fa42 	bl	80020e8 <__errno>
 8006c64:	2316      	movs	r3, #22
 8006c66:	e7f3      	b.n	8006c50 <_swilseek+0x14>
 8006c68:	2e01      	cmp	r6, #1
 8006c6a:	d112      	bne.n	8006c92 <_swilseek+0x56>
 8006c6c:	6843      	ldr	r3, [r0, #4]
 8006c6e:	18e4      	adds	r4, r4, r3
 8006c70:	d4f6      	bmi.n	8006c60 <_swilseek+0x24>
 8006c72:	682b      	ldr	r3, [r5, #0]
 8006c74:	260a      	movs	r6, #10
 8006c76:	e9cd 3400 	strd	r3, r4, [sp]
 8006c7a:	466f      	mov	r7, sp
 8006c7c:	4630      	mov	r0, r6
 8006c7e:	4639      	mov	r1, r7
 8006c80:	beab      	bkpt	0x00ab
 8006c82:	4606      	mov	r6, r0
 8006c84:	4630      	mov	r0, r6
 8006c86:	f7ff ff91 	bl	8006bac <checkerror>
 8006c8a:	2800      	cmp	r0, #0
 8006c8c:	dbe1      	blt.n	8006c52 <_swilseek+0x16>
 8006c8e:	606c      	str	r4, [r5, #4]
 8006c90:	e7e1      	b.n	8006c56 <_swilseek+0x1a>
 8006c92:	2e02      	cmp	r6, #2
 8006c94:	d1ed      	bne.n	8006c72 <_swilseek+0x36>
 8006c96:	6803      	ldr	r3, [r0, #0]
 8006c98:	9300      	str	r3, [sp, #0]
 8006c9a:	260c      	movs	r6, #12
 8006c9c:	466f      	mov	r7, sp
 8006c9e:	4630      	mov	r0, r6
 8006ca0:	4639      	mov	r1, r7
 8006ca2:	beab      	bkpt	0x00ab
 8006ca4:	4606      	mov	r6, r0
 8006ca6:	4630      	mov	r0, r6
 8006ca8:	f7ff ff80 	bl	8006bac <checkerror>
 8006cac:	1c43      	adds	r3, r0, #1
 8006cae:	d0d0      	beq.n	8006c52 <_swilseek+0x16>
 8006cb0:	4404      	add	r4, r0
 8006cb2:	e7de      	b.n	8006c72 <_swilseek+0x36>

08006cb4 <_lseek>:
 8006cb4:	f7ff bfc2 	b.w	8006c3c <_swilseek>

08006cb8 <_swiwrite>:
 8006cb8:	b530      	push	{r4, r5, lr}
 8006cba:	b085      	sub	sp, #20
 8006cbc:	e9cd 0101 	strd	r0, r1, [sp, #4]
 8006cc0:	9203      	str	r2, [sp, #12]
 8006cc2:	2405      	movs	r4, #5
 8006cc4:	ad01      	add	r5, sp, #4
 8006cc6:	4620      	mov	r0, r4
 8006cc8:	4629      	mov	r1, r5
 8006cca:	beab      	bkpt	0x00ab
 8006ccc:	4604      	mov	r4, r0
 8006cce:	4620      	mov	r0, r4
 8006cd0:	f7ff ff6c 	bl	8006bac <checkerror>
 8006cd4:	b005      	add	sp, #20
 8006cd6:	bd30      	pop	{r4, r5, pc}

08006cd8 <_write>:
 8006cd8:	b570      	push	{r4, r5, r6, lr}
 8006cda:	460e      	mov	r6, r1
 8006cdc:	4615      	mov	r5, r2
 8006cde:	f7ff ff4b 	bl	8006b78 <findslot>
 8006ce2:	4604      	mov	r4, r0
 8006ce4:	b930      	cbnz	r0, 8006cf4 <_write+0x1c>
 8006ce6:	f7fb f9ff 	bl	80020e8 <__errno>
 8006cea:	2309      	movs	r3, #9
 8006cec:	6003      	str	r3, [r0, #0]
 8006cee:	f04f 30ff 	mov.w	r0, #4294967295
 8006cf2:	bd70      	pop	{r4, r5, r6, pc}
 8006cf4:	6800      	ldr	r0, [r0, #0]
 8006cf6:	462a      	mov	r2, r5
 8006cf8:	4631      	mov	r1, r6
 8006cfa:	f7ff ffdd 	bl	8006cb8 <_swiwrite>
 8006cfe:	1e03      	subs	r3, r0, #0
 8006d00:	dbf5      	blt.n	8006cee <_write+0x16>
 8006d02:	6862      	ldr	r2, [r4, #4]
 8006d04:	1ae8      	subs	r0, r5, r3
 8006d06:	4402      	add	r2, r0
 8006d08:	42ab      	cmp	r3, r5
 8006d0a:	6062      	str	r2, [r4, #4]
 8006d0c:	d1f1      	bne.n	8006cf2 <_write+0x1a>
 8006d0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8006d12:	2000      	movs	r0, #0
 8006d14:	f7ff bf5a 	b.w	8006bcc <error>

08006d18 <_swiclose>:
 8006d18:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006d1a:	2402      	movs	r4, #2
 8006d1c:	9001      	str	r0, [sp, #4]
 8006d1e:	ad01      	add	r5, sp, #4
 8006d20:	4620      	mov	r0, r4
 8006d22:	4629      	mov	r1, r5
 8006d24:	beab      	bkpt	0x00ab
 8006d26:	4604      	mov	r4, r0
 8006d28:	4620      	mov	r0, r4
 8006d2a:	f7ff ff3f 	bl	8006bac <checkerror>
 8006d2e:	b003      	add	sp, #12
 8006d30:	bd30      	pop	{r4, r5, pc}
	...

08006d34 <_close>:
 8006d34:	b538      	push	{r3, r4, r5, lr}
 8006d36:	4605      	mov	r5, r0
 8006d38:	f7ff ff1e 	bl	8006b78 <findslot>
 8006d3c:	4604      	mov	r4, r0
 8006d3e:	b930      	cbnz	r0, 8006d4e <_close+0x1a>
 8006d40:	f7fb f9d2 	bl	80020e8 <__errno>
 8006d44:	2309      	movs	r3, #9
 8006d46:	6003      	str	r3, [r0, #0]
 8006d48:	f04f 30ff 	mov.w	r0, #4294967295
 8006d4c:	bd38      	pop	{r3, r4, r5, pc}
 8006d4e:	3d01      	subs	r5, #1
 8006d50:	2d01      	cmp	r5, #1
 8006d52:	d809      	bhi.n	8006d68 <_close+0x34>
 8006d54:	4b09      	ldr	r3, [pc, #36]	; (8006d7c <_close+0x48>)
 8006d56:	689a      	ldr	r2, [r3, #8]
 8006d58:	691b      	ldr	r3, [r3, #16]
 8006d5a:	429a      	cmp	r2, r3
 8006d5c:	d104      	bne.n	8006d68 <_close+0x34>
 8006d5e:	f04f 33ff 	mov.w	r3, #4294967295
 8006d62:	6003      	str	r3, [r0, #0]
 8006d64:	2000      	movs	r0, #0
 8006d66:	e7f1      	b.n	8006d4c <_close+0x18>
 8006d68:	6820      	ldr	r0, [r4, #0]
 8006d6a:	f7ff ffd5 	bl	8006d18 <_swiclose>
 8006d6e:	2800      	cmp	r0, #0
 8006d70:	d1ec      	bne.n	8006d4c <_close+0x18>
 8006d72:	f04f 33ff 	mov.w	r3, #4294967295
 8006d76:	6023      	str	r3, [r4, #0]
 8006d78:	e7e8      	b.n	8006d4c <_close+0x18>
 8006d7a:	bf00      	nop
 8006d7c:	20000a40 	.word	0x20000a40

08006d80 <_getpid>:
 8006d80:	2001      	movs	r0, #1
 8006d82:	4770      	bx	lr

08006d84 <_swistat>:
 8006d84:	b570      	push	{r4, r5, r6, lr}
 8006d86:	460c      	mov	r4, r1
 8006d88:	f7ff fef6 	bl	8006b78 <findslot>
 8006d8c:	4605      	mov	r5, r0
 8006d8e:	b930      	cbnz	r0, 8006d9e <_swistat+0x1a>
 8006d90:	f7fb f9aa 	bl	80020e8 <__errno>
 8006d94:	2309      	movs	r3, #9
 8006d96:	6003      	str	r3, [r0, #0]
 8006d98:	f04f 30ff 	mov.w	r0, #4294967295
 8006d9c:	bd70      	pop	{r4, r5, r6, pc}
 8006d9e:	6863      	ldr	r3, [r4, #4]
 8006da0:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8006da4:	6063      	str	r3, [r4, #4]
 8006da6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8006daa:	64a3      	str	r3, [r4, #72]	; 0x48
 8006dac:	260c      	movs	r6, #12
 8006dae:	4630      	mov	r0, r6
 8006db0:	4629      	mov	r1, r5
 8006db2:	beab      	bkpt	0x00ab
 8006db4:	4605      	mov	r5, r0
 8006db6:	4628      	mov	r0, r5
 8006db8:	f7ff fef8 	bl	8006bac <checkerror>
 8006dbc:	1c43      	adds	r3, r0, #1
 8006dbe:	bf1c      	itt	ne
 8006dc0:	6120      	strne	r0, [r4, #16]
 8006dc2:	2000      	movne	r0, #0
 8006dc4:	e7ea      	b.n	8006d9c <_swistat+0x18>

08006dc6 <_fstat>:
 8006dc6:	460b      	mov	r3, r1
 8006dc8:	b510      	push	{r4, lr}
 8006dca:	2100      	movs	r1, #0
 8006dcc:	4604      	mov	r4, r0
 8006dce:	2258      	movs	r2, #88	; 0x58
 8006dd0:	4618      	mov	r0, r3
 8006dd2:	f7fb f9b3 	bl	800213c <memset>
 8006dd6:	4601      	mov	r1, r0
 8006dd8:	4620      	mov	r0, r4
 8006dda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8006dde:	f7ff bfd1 	b.w	8006d84 <_swistat>

08006de2 <_stat>:
 8006de2:	b538      	push	{r3, r4, r5, lr}
 8006de4:	460d      	mov	r5, r1
 8006de6:	4604      	mov	r4, r0
 8006de8:	2258      	movs	r2, #88	; 0x58
 8006dea:	2100      	movs	r1, #0
 8006dec:	4628      	mov	r0, r5
 8006dee:	f7fb f9a5 	bl	800213c <memset>
 8006df2:	4620      	mov	r0, r4
 8006df4:	2100      	movs	r1, #0
 8006df6:	f000 f811 	bl	8006e1c <_swiopen>
 8006dfa:	1c43      	adds	r3, r0, #1
 8006dfc:	4604      	mov	r4, r0
 8006dfe:	d00b      	beq.n	8006e18 <_stat+0x36>
 8006e00:	686b      	ldr	r3, [r5, #4]
 8006e02:	f443 4301 	orr.w	r3, r3, #33024	; 0x8100
 8006e06:	606b      	str	r3, [r5, #4]
 8006e08:	4629      	mov	r1, r5
 8006e0a:	f7ff ffbb 	bl	8006d84 <_swistat>
 8006e0e:	4605      	mov	r5, r0
 8006e10:	4620      	mov	r0, r4
 8006e12:	f7ff ff8f 	bl	8006d34 <_close>
 8006e16:	462c      	mov	r4, r5
 8006e18:	4620      	mov	r0, r4
 8006e1a:	bd38      	pop	{r3, r4, r5, pc}

08006e1c <_swiopen>:
 8006e1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006e20:	4b2a      	ldr	r3, [pc, #168]	; (8006ecc <_swiopen+0xb0>)
 8006e22:	b097      	sub	sp, #92	; 0x5c
 8006e24:	4681      	mov	r9, r0
 8006e26:	460f      	mov	r7, r1
 8006e28:	2500      	movs	r5, #0
 8006e2a:	461e      	mov	r6, r3
 8006e2c:	f853 4035 	ldr.w	r4, [r3, r5, lsl #3]
 8006e30:	1c61      	adds	r1, r4, #1
 8006e32:	d037      	beq.n	8006ea4 <_swiopen+0x88>
 8006e34:	3501      	adds	r5, #1
 8006e36:	2d14      	cmp	r5, #20
 8006e38:	d1f8      	bne.n	8006e2c <_swiopen+0x10>
 8006e3a:	f7fb f955 	bl	80020e8 <__errno>
 8006e3e:	2318      	movs	r3, #24
 8006e40:	6003      	str	r3, [r0, #0]
 8006e42:	f04f 34ff 	mov.w	r4, #4294967295
 8006e46:	e03d      	b.n	8006ec4 <_swiopen+0xa8>
 8006e48:	f3c7 4400 	ubfx	r4, r7, #16, #1
 8006e4c:	f240 6301 	movw	r3, #1537	; 0x601
 8006e50:	07ba      	lsls	r2, r7, #30
 8006e52:	bf48      	it	mi
 8006e54:	f044 0402 	orrmi.w	r4, r4, #2
 8006e58:	421f      	tst	r7, r3
 8006e5a:	bf18      	it	ne
 8006e5c:	f044 0404 	orrne.w	r4, r4, #4
 8006e60:	073b      	lsls	r3, r7, #28
 8006e62:	bf48      	it	mi
 8006e64:	f024 0404 	bicmi.w	r4, r4, #4
 8006e68:	4648      	mov	r0, r9
 8006e6a:	bf48      	it	mi
 8006e6c:	f044 0408 	orrmi.w	r4, r4, #8
 8006e70:	f8cd 9000 	str.w	r9, [sp]
 8006e74:	f7f9 f9bc 	bl	80001f0 <strlen>
 8006e78:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8006e7c:	2401      	movs	r4, #1
 8006e7e:	4620      	mov	r0, r4
 8006e80:	4641      	mov	r1, r8
 8006e82:	beab      	bkpt	0x00ab
 8006e84:	4604      	mov	r4, r0
 8006e86:	2c00      	cmp	r4, #0
 8006e88:	db07      	blt.n	8006e9a <_swiopen+0x7e>
 8006e8a:	f846 4035 	str.w	r4, [r6, r5, lsl #3]
 8006e8e:	eb06 06c5 	add.w	r6, r6, r5, lsl #3
 8006e92:	2300      	movs	r3, #0
 8006e94:	6073      	str	r3, [r6, #4]
 8006e96:	462c      	mov	r4, r5
 8006e98:	e014      	b.n	8006ec4 <_swiopen+0xa8>
 8006e9a:	4620      	mov	r0, r4
 8006e9c:	f7ff fe96 	bl	8006bcc <error>
 8006ea0:	4604      	mov	r4, r0
 8006ea2:	e00f      	b.n	8006ec4 <_swiopen+0xa8>
 8006ea4:	f407 6320 	and.w	r3, r7, #2560	; 0xa00
 8006ea8:	f5b3 6f20 	cmp.w	r3, #2560	; 0xa00
 8006eac:	46e8      	mov	r8, sp
 8006eae:	d1cb      	bne.n	8006e48 <_swiopen+0x2c>
 8006eb0:	4641      	mov	r1, r8
 8006eb2:	4648      	mov	r0, r9
 8006eb4:	f7ff ff95 	bl	8006de2 <_stat>
 8006eb8:	3001      	adds	r0, #1
 8006eba:	d0c5      	beq.n	8006e48 <_swiopen+0x2c>
 8006ebc:	f7fb f914 	bl	80020e8 <__errno>
 8006ec0:	2311      	movs	r3, #17
 8006ec2:	6003      	str	r3, [r0, #0]
 8006ec4:	4620      	mov	r0, r4
 8006ec6:	b017      	add	sp, #92	; 0x5c
 8006ec8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006ecc:	20000a40 	.word	0x20000a40

08006ed0 <_get_semihosting_exts>:
 8006ed0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006ed4:	4606      	mov	r6, r0
 8006ed6:	460f      	mov	r7, r1
 8006ed8:	482a      	ldr	r0, [pc, #168]	; (8006f84 <_get_semihosting_exts+0xb4>)
 8006eda:	2100      	movs	r1, #0
 8006edc:	4615      	mov	r5, r2
 8006ede:	f7ff ff9d 	bl	8006e1c <_swiopen>
 8006ee2:	462a      	mov	r2, r5
 8006ee4:	4604      	mov	r4, r0
 8006ee6:	2100      	movs	r1, #0
 8006ee8:	4630      	mov	r0, r6
 8006eea:	f7fb f927 	bl	800213c <memset>
 8006eee:	1c63      	adds	r3, r4, #1
 8006ef0:	d016      	beq.n	8006f20 <_get_semihosting_exts+0x50>
 8006ef2:	4620      	mov	r0, r4
 8006ef4:	f7ff fe40 	bl	8006b78 <findslot>
 8006ef8:	f04f 080c 	mov.w	r8, #12
 8006efc:	4681      	mov	r9, r0
 8006efe:	4640      	mov	r0, r8
 8006f00:	4649      	mov	r1, r9
 8006f02:	beab      	bkpt	0x00ab
 8006f04:	4680      	mov	r8, r0
 8006f06:	4640      	mov	r0, r8
 8006f08:	f7ff fe50 	bl	8006bac <checkerror>
 8006f0c:	2803      	cmp	r0, #3
 8006f0e:	dd02      	ble.n	8006f16 <_get_semihosting_exts+0x46>
 8006f10:	1ec3      	subs	r3, r0, #3
 8006f12:	42ab      	cmp	r3, r5
 8006f14:	dc08      	bgt.n	8006f28 <_get_semihosting_exts+0x58>
 8006f16:	4620      	mov	r0, r4
 8006f18:	f7ff ff0c 	bl	8006d34 <_close>
 8006f1c:	f04f 34ff 	mov.w	r4, #4294967295
 8006f20:	4620      	mov	r0, r4
 8006f22:	b003      	add	sp, #12
 8006f24:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8006f28:	2204      	movs	r2, #4
 8006f2a:	eb0d 0102 	add.w	r1, sp, r2
 8006f2e:	4620      	mov	r0, r4
 8006f30:	f7ff fe6a 	bl	8006c08 <_read>
 8006f34:	2803      	cmp	r0, #3
 8006f36:	ddee      	ble.n	8006f16 <_get_semihosting_exts+0x46>
 8006f38:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8006f3c:	2b53      	cmp	r3, #83	; 0x53
 8006f3e:	d1ea      	bne.n	8006f16 <_get_semihosting_exts+0x46>
 8006f40:	f89d 3005 	ldrb.w	r3, [sp, #5]
 8006f44:	2b48      	cmp	r3, #72	; 0x48
 8006f46:	d1e6      	bne.n	8006f16 <_get_semihosting_exts+0x46>
 8006f48:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8006f4c:	2b46      	cmp	r3, #70	; 0x46
 8006f4e:	d1e2      	bne.n	8006f16 <_get_semihosting_exts+0x46>
 8006f50:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8006f54:	2b42      	cmp	r3, #66	; 0x42
 8006f56:	d1de      	bne.n	8006f16 <_get_semihosting_exts+0x46>
 8006f58:	2201      	movs	r2, #1
 8006f5a:	4639      	mov	r1, r7
 8006f5c:	4620      	mov	r0, r4
 8006f5e:	f7ff fe6d 	bl	8006c3c <_swilseek>
 8006f62:	2800      	cmp	r0, #0
 8006f64:	dbd7      	blt.n	8006f16 <_get_semihosting_exts+0x46>
 8006f66:	462a      	mov	r2, r5
 8006f68:	4631      	mov	r1, r6
 8006f6a:	4620      	mov	r0, r4
 8006f6c:	f7ff fe4c 	bl	8006c08 <_read>
 8006f70:	4605      	mov	r5, r0
 8006f72:	4620      	mov	r0, r4
 8006f74:	f7ff fede 	bl	8006d34 <_close>
 8006f78:	4628      	mov	r0, r5
 8006f7a:	f7ff fe17 	bl	8006bac <checkerror>
 8006f7e:	4604      	mov	r4, r0
 8006f80:	e7ce      	b.n	8006f20 <_get_semihosting_exts+0x50>
 8006f82:	bf00      	nop
 8006f84:	080075bb 	.word	0x080075bb

08006f88 <initialise_semihosting_exts>:
 8006f88:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006f8a:	4d0a      	ldr	r5, [pc, #40]	; (8006fb4 <initialise_semihosting_exts+0x2c>)
 8006f8c:	4c0a      	ldr	r4, [pc, #40]	; (8006fb8 <initialise_semihosting_exts+0x30>)
 8006f8e:	2100      	movs	r1, #0
 8006f90:	2201      	movs	r2, #1
 8006f92:	a801      	add	r0, sp, #4
 8006f94:	6029      	str	r1, [r5, #0]
 8006f96:	6022      	str	r2, [r4, #0]
 8006f98:	f7ff ff9a 	bl	8006ed0 <_get_semihosting_exts>
 8006f9c:	2800      	cmp	r0, #0
 8006f9e:	dd07      	ble.n	8006fb0 <initialise_semihosting_exts+0x28>
 8006fa0:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8006fa4:	f003 0201 	and.w	r2, r3, #1
 8006fa8:	f003 0302 	and.w	r3, r3, #2
 8006fac:	602a      	str	r2, [r5, #0]
 8006fae:	6023      	str	r3, [r4, #0]
 8006fb0:	b003      	add	sp, #12
 8006fb2:	bd30      	pop	{r4, r5, pc}
 8006fb4:	200009c0 	.word	0x200009c0
 8006fb8:	200009c4 	.word	0x200009c4

08006fbc <_has_ext_exit_extended>:
 8006fbc:	b510      	push	{r4, lr}
 8006fbe:	4c04      	ldr	r4, [pc, #16]	; (8006fd0 <_has_ext_exit_extended+0x14>)
 8006fc0:	6822      	ldr	r2, [r4, #0]
 8006fc2:	2a00      	cmp	r2, #0
 8006fc4:	da01      	bge.n	8006fca <_has_ext_exit_extended+0xe>
 8006fc6:	f7ff ffdf 	bl	8006f88 <initialise_semihosting_exts>
 8006fca:	6820      	ldr	r0, [r4, #0]
 8006fcc:	bd10      	pop	{r4, pc}
 8006fce:	bf00      	nop
 8006fd0:	200009c0 	.word	0x200009c0

08006fd4 <_has_ext_stdout_stderr>:
 8006fd4:	b510      	push	{r4, lr}
 8006fd6:	4c04      	ldr	r4, [pc, #16]	; (8006fe8 <_has_ext_stdout_stderr+0x14>)
 8006fd8:	6822      	ldr	r2, [r4, #0]
 8006fda:	2a00      	cmp	r2, #0
 8006fdc:	da01      	bge.n	8006fe2 <_has_ext_stdout_stderr+0xe>
 8006fde:	f7ff ffd3 	bl	8006f88 <initialise_semihosting_exts>
 8006fe2:	6820      	ldr	r0, [r4, #0]
 8006fe4:	bd10      	pop	{r4, pc}
 8006fe6:	bf00      	nop
 8006fe8:	200009c4 	.word	0x200009c4

08006fec <initialise_monitor_handles>:
 8006fec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006ff0:	b085      	sub	sp, #20
 8006ff2:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 80070a4 <initialise_monitor_handles+0xb8>
 8006ff6:	f8cd 9004 	str.w	r9, [sp, #4]
 8006ffa:	2303      	movs	r3, #3
 8006ffc:	2400      	movs	r4, #0
 8006ffe:	9303      	str	r3, [sp, #12]
 8007000:	f10d 0804 	add.w	r8, sp, #4
 8007004:	9402      	str	r4, [sp, #8]
 8007006:	2501      	movs	r5, #1
 8007008:	4628      	mov	r0, r5
 800700a:	4641      	mov	r1, r8
 800700c:	beab      	bkpt	0x00ab
 800700e:	4605      	mov	r5, r0
 8007010:	4e20      	ldr	r6, [pc, #128]	; (8007094 <initialise_monitor_handles+0xa8>)
 8007012:	4a21      	ldr	r2, [pc, #132]	; (8007098 <initialise_monitor_handles+0xac>)
 8007014:	6035      	str	r5, [r6, #0]
 8007016:	4623      	mov	r3, r4
 8007018:	f04f 31ff 	mov.w	r1, #4294967295
 800701c:	4614      	mov	r4, r2
 800701e:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
 8007022:	3301      	adds	r3, #1
 8007024:	2b14      	cmp	r3, #20
 8007026:	d1fa      	bne.n	800701e <initialise_monitor_handles+0x32>
 8007028:	f7ff ffd4 	bl	8006fd4 <_has_ext_stdout_stderr>
 800702c:	4d1b      	ldr	r5, [pc, #108]	; (800709c <initialise_monitor_handles+0xb0>)
 800702e:	b1d0      	cbz	r0, 8007066 <initialise_monitor_handles+0x7a>
 8007030:	f04f 0a03 	mov.w	sl, #3
 8007034:	2304      	movs	r3, #4
 8007036:	f8cd 9004 	str.w	r9, [sp, #4]
 800703a:	2701      	movs	r7, #1
 800703c:	f8cd a00c 	str.w	sl, [sp, #12]
 8007040:	9302      	str	r3, [sp, #8]
 8007042:	4638      	mov	r0, r7
 8007044:	4641      	mov	r1, r8
 8007046:	beab      	bkpt	0x00ab
 8007048:	4683      	mov	fp, r0
 800704a:	4b15      	ldr	r3, [pc, #84]	; (80070a0 <initialise_monitor_handles+0xb4>)
 800704c:	f8cd 9004 	str.w	r9, [sp, #4]
 8007050:	f8c3 b000 	str.w	fp, [r3]
 8007054:	2308      	movs	r3, #8
 8007056:	f8cd a00c 	str.w	sl, [sp, #12]
 800705a:	9302      	str	r3, [sp, #8]
 800705c:	4638      	mov	r0, r7
 800705e:	4641      	mov	r1, r8
 8007060:	beab      	bkpt	0x00ab
 8007062:	4607      	mov	r7, r0
 8007064:	602f      	str	r7, [r5, #0]
 8007066:	682b      	ldr	r3, [r5, #0]
 8007068:	3301      	adds	r3, #1
 800706a:	bf02      	ittt	eq
 800706c:	4b0c      	ldreq	r3, [pc, #48]	; (80070a0 <initialise_monitor_handles+0xb4>)
 800706e:	681b      	ldreq	r3, [r3, #0]
 8007070:	602b      	streq	r3, [r5, #0]
 8007072:	6833      	ldr	r3, [r6, #0]
 8007074:	6023      	str	r3, [r4, #0]
 8007076:	2600      	movs	r6, #0
 8007078:	6066      	str	r6, [r4, #4]
 800707a:	f7ff ffab 	bl	8006fd4 <_has_ext_stdout_stderr>
 800707e:	b130      	cbz	r0, 800708e <initialise_monitor_handles+0xa2>
 8007080:	4b07      	ldr	r3, [pc, #28]	; (80070a0 <initialise_monitor_handles+0xb4>)
 8007082:	681b      	ldr	r3, [r3, #0]
 8007084:	e9c4 3602 	strd	r3, r6, [r4, #8]
 8007088:	682b      	ldr	r3, [r5, #0]
 800708a:	e9c4 3604 	strd	r3, r6, [r4, #16]
 800708e:	b005      	add	sp, #20
 8007090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007094:	20000a38 	.word	0x20000a38
 8007098:	20000a40 	.word	0x20000a40
 800709c:	20000a34 	.word	0x20000a34
 80070a0:	20000a3c 	.word	0x20000a3c
 80070a4:	080075d1 	.word	0x080075d1

080070a8 <_isatty>:
 80070a8:	b570      	push	{r4, r5, r6, lr}
 80070aa:	f7ff fd65 	bl	8006b78 <findslot>
 80070ae:	2509      	movs	r5, #9
 80070b0:	4604      	mov	r4, r0
 80070b2:	b920      	cbnz	r0, 80070be <_isatty+0x16>
 80070b4:	f7fb f818 	bl	80020e8 <__errno>
 80070b8:	6005      	str	r5, [r0, #0]
 80070ba:	4620      	mov	r0, r4
 80070bc:	bd70      	pop	{r4, r5, r6, pc}
 80070be:	4628      	mov	r0, r5
 80070c0:	4621      	mov	r1, r4
 80070c2:	beab      	bkpt	0x00ab
 80070c4:	4604      	mov	r4, r0
 80070c6:	2c01      	cmp	r4, #1
 80070c8:	d0f7      	beq.n	80070ba <_isatty+0x12>
 80070ca:	f7fb f80d 	bl	80020e8 <__errno>
 80070ce:	2400      	movs	r4, #0
 80070d0:	4605      	mov	r5, r0
 80070d2:	2613      	movs	r6, #19
 80070d4:	4630      	mov	r0, r6
 80070d6:	4621      	mov	r1, r4
 80070d8:	beab      	bkpt	0x00ab
 80070da:	4606      	mov	r6, r0
 80070dc:	602e      	str	r6, [r5, #0]
 80070de:	e7ec      	b.n	80070ba <_isatty+0x12>

080070e0 <_exit>:
 80070e0:	4601      	mov	r1, r0
 80070e2:	b508      	push	{r3, lr}
 80070e4:	4a02      	ldr	r2, [pc, #8]	; (80070f0 <_exit+0x10>)
 80070e6:	f04f 30ff 	mov.w	r0, #4294967295
 80070ea:	f000 f803 	bl	80070f4 <_kill_shared>
 80070ee:	bf00      	nop
 80070f0:	00020026 	.word	0x00020026

080070f4 <_kill_shared>:
 80070f4:	b507      	push	{r0, r1, r2, lr}
 80070f6:	e9cd 2100 	strd	r2, r1, [sp]
 80070fa:	f7ff ff5f 	bl	8006fbc <_has_ext_exit_extended>
 80070fe:	2800      	cmp	r0, #0
 8007100:	bf14      	ite	ne
 8007102:	2420      	movne	r4, #32
 8007104:	2418      	moveq	r4, #24
 8007106:	f7ff ff59 	bl	8006fbc <_has_ext_exit_extended>
 800710a:	b120      	cbz	r0, 8007116 <_kill_shared+0x22>
 800710c:	466d      	mov	r5, sp
 800710e:	4620      	mov	r0, r4
 8007110:	4629      	mov	r1, r5
 8007112:	beab      	bkpt	0x00ab
 8007114:	4604      	mov	r4, r0
 8007116:	9d00      	ldr	r5, [sp, #0]
 8007118:	e7f9      	b.n	800710e <_kill_shared+0x1a>
	...

0800711c <_kill>:
 800711c:	2906      	cmp	r1, #6
 800711e:	b508      	push	{r3, lr}
 8007120:	bf0c      	ite	eq
 8007122:	4a02      	ldreq	r2, [pc, #8]	; (800712c <_kill+0x10>)
 8007124:	4a02      	ldrne	r2, [pc, #8]	; (8007130 <_kill+0x14>)
 8007126:	f7ff ffe5 	bl	80070f4 <_kill_shared>
 800712a:	bf00      	nop
 800712c:	00020023 	.word	0x00020023
 8007130:	00020026 	.word	0x00020026

08007134 <_init>:
 8007134:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007136:	bf00      	nop
 8007138:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800713a:	bc08      	pop	{r3}
 800713c:	469e      	mov	lr, r3
 800713e:	4770      	bx	lr

08007140 <_fini>:
 8007140:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007142:	bf00      	nop
 8007144:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8007146:	bc08      	pop	{r3}
 8007148:	469e      	mov	lr, r3
 800714a:	4770      	bx	lr
